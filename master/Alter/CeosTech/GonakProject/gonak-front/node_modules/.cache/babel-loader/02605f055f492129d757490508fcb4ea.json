{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/site/Panier/Paiement.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Button, FormControl, IconButton, Input, InputLabel, makeStyles, Select, MenuItem // Modal,\n} from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport useForm from \"../../../hooks/useForm\";\nimport \"./paiement.css\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { sendrequest } from \"../../../middlewares/request\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectBaskets, emptyBasket } from \"../../../app/Redux-slices/basketsSlice\"; //import spinner from \"../images/spinner.gif\";\n\nimport { calculPrixProduitAvecQuantite, calculTotal } from \"../../../utilities\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Modal from \"../Carte/MyModal/Modal\";\nimport { URL } from \"../../../middlewares/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  margin: {\n    margin: theme.spacing(1, 0)\n  },\n  marginLeftRight: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: \"25ch\"\n  },\n  buttonIcon: {\n    paddingLeft: 1\n  },\n  border: {\n    \"& label.Mui-focused\": {\n      color: \"#ccc\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#ccc\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"&:hover fieldset\": {\n        borderColor: \"#ccc\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#ccc\"\n      }\n    }\n  }\n})); // variable arbitraire pour effectuer des tests\n\nconst initial = {\n  nom: \"\",\n  prenom: \"\",\n  email: \"\",\n  num_tel: \"\",\n  adresse: \"\",\n  ville: \"\",\n  code_postale: \"\",\n  montant: 0\n};\n\nconst Paiement = props => {\n  _s();\n\n  // With location we can retrieve the kind of delivery chosen (was passed in props of history)\n  const [paiment_process, setPaiement_process] = useState(\"livraison\");\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [succeeded, setSucceeded] = useState(false); // const [supplements, setSupplements] = useState([]);\n\n  const location = useLocation();\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const baskets = useSelector(selectBaskets);\n  const classes = useStyles();\n\n  const handleChange = event => {\n    // Listen for changes in CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  }; // Fonction liée au paiement ainsi qu'à l'enregistrement des infos du clients\n\n\n  const Payer = async e => {\n    e.preventDefault();\n    setProcessing(true);\n    const {\n      data\n    } = await axios.post(URL + \"paiement/create-client-secret\", {\n      amount: 1000 //parseInt((prixTotal * 100).toFixed(2), 10),\n      //email,\n\n    }); // *100 : stripe prend l'unité en centimes\n    // 3€ -> 300 centimes\n\n    if (CardElement !== null) {\n      console.log(CardElement);\n      console.log(elements);\n      console.log(elements.getElement(\"card\"));\n      await stripe.confirmCardPayment(data.clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      }).then(res => {\n        setError(null);\n        setProcessing(false);\n        setDisabled(false);\n        const commande = {\n          client: {\n            nom,\n            prenom,\n            email,\n            telephone: num_tel,\n            adresse,\n            ville,\n            code_postale\n          },\n          panier: {\n            infos_menus: \"\",\n            infos_produits: JSON.stringify(baskets)\n          }\n        };\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        sendrequest(\"post\", \"paiement/create-commande\", null, null, commande) //commande partie resto\n        .then(response => {\n          if (response !== false) {\n            reinitialiserState();\n            dispatch(emptyBasket());\n            history.replace(\"/felicitation\", {\n              payer: true\n            });\n          } else {\n            setError(\"Un problème s'est produit lors du paiement, veuillez réessayer\");\n          }\n        });\n      }).catch(err => {\n        console.log(err.message);\n        setError(`Paiement échoué: ${err.message}`);\n        setProcessing(false); //setSuccess(false);\n      });\n    }\n  };\n\n  const handleClose = e => {\n    if (e.target.classList.contains(\"myModal__backdrop\") || e.target.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.parentNode.classList.contains(\"myModal__modal__close-btn\")) {\n      setShowModal(false);\n    }\n  };\n\n  const handleOpen = () => {\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    console.log(`baskets de paiement à linterieru`, baskets);\n  }, [baskets]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paiment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paiement__container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"paiement__form\",\n        children: [/*#__PURE__*/_jsxDEV(CardElement, {\n          id: \"card-element\",\n          onChange: handleChange,\n          options: cardStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paiement__details__error\",\n          children: [\"* \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }, this), baskets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paiement__details__error\",\n          children: \"* Vous n'avez rien dans le panier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: Payer,\n          disabled: prixTotal <= 1 || processing || disabled || succeeded,\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"paiement--btn-payer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"paiement--btn-payer-text\",\n            children: processing ? {\n              /* <img src={spinner} alt=\"spinner\" /> */\n            } : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Payer \", prixTotal, \"\\u20AC\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Paiement, \"ICfJWSsBopQEIgyZbQ8zKjbS80Y=\", false, function () {\n  return [useLocation, useStripe, useElements, useHistory, useDispatch, useSelector, useStyles];\n});\n\n_c = Paiement;\nconst cardStyle = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aaa\",\n        backgroundColor: \"#fff\"\n      },\n      \":-webkit-autofill\": {\n        color: \"#fff\"\n      },\n      \":focus\": {\n        color: \"#aaa\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  },\n  hidePostalCode: true\n};\nexport const Wrapper = props => {\n  //const config = useSelector(state => state.config.info);\n  //const stripe = window.Stripe(config.stripe);\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: loadStripe(\"pk_test_51JQ9d2G8uFuhwMtfeIIgrp9mSsWPuVqmTeqZVNc58ukTd42QqUEsnWf8vXIXS5q6Mu6bKS2PfElbRySFMeMHTaQK00WyHNKcuX\"),\n    children: /*#__PURE__*/_jsxDEV(Paiement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Wrapper;\nexport default Wrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Paiement\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/site/Panier/Paiement.js"],"names":["useState","useEffect","Button","FormControl","IconButton","Input","InputLabel","makeStyles","Select","MenuItem","NavigateNextIcon","useForm","loadStripe","Elements","sendrequest","CardElement","useStripe","useElements","useSelector","useDispatch","selectBaskets","emptyBasket","calculPrixProduitAvecQuantite","calculTotal","useHistory","useLocation","axios","Modal","URL","useStyles","theme","root","display","flexWrap","justifyContent","margin","spacing","marginLeftRight","marginRight","marginLeft","withoutLabel","marginTop","textField","width","buttonIcon","paddingLeft","border","color","borderBottomColor","borderColor","initial","nom","prenom","email","num_tel","adresse","ville","code_postale","montant","Paiement","props","paiment_process","setPaiement_process","showModal","setShowModal","error","setError","disabled","setDisabled","processing","setProcessing","succeeded","setSucceeded","location","stripe","elements","history","dispatch","baskets","classes","handleChange","event","empty","message","Payer","e","preventDefault","data","post","amount","console","log","getElement","confirmCardPayment","clientSecret","payment_method","card","then","res","commande","client","telephone","panier","infos_menus","infos_produits","JSON","stringify","config","headers","response","reinitialiserState","replace","payer","catch","err","handleClose","target","classList","contains","parentNode","handleOpen","cardStyle","length","prixTotal","style","base","fontFamily","fontSmoothing","fontSize","backgroundColor","invalid","iconColor","hidePostalCode","Wrapper"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputLabel,\n  makeStyles,\n  Select,\n  MenuItem,\n  // Modal,\n} from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport useForm from \"../../../hooks/useForm\";\n\nimport \"./paiement.css\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { sendrequest } from \"../../../middlewares/request\";\n\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectBaskets, emptyBasket } from \"../../../app/Redux-slices/basketsSlice\";\n//import spinner from \"../images/spinner.gif\";\nimport { calculPrixProduitAvecQuantite, calculTotal } from \"../../../utilities\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Modal from \"../Carte/MyModal/Modal\";\nimport { URL } from \"../../../middlewares/request\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  margin: {\n    margin: theme.spacing(1, 0),\n  },\n  marginLeftRight: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: \"25ch\",\n  },\n\n  buttonIcon: {\n    paddingLeft: 1,\n  },\n\n  border: {\n    \"& label.Mui-focused\": {\n      color: \"#ccc\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#ccc\",\n    },\n\n    \"& .MuiOutlinedInput-root\": {\n      \"&:hover fieldset\": {\n        borderColor: \"#ccc\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#ccc\",\n      },\n    },\n  },\n}));\n\n// variable arbitraire pour effectuer des tests\nconst initial = {\n  nom: \"\",\n  prenom: \"\",\n  email: \"\",\n  num_tel: \"\",\n  adresse: \"\",\n  ville: \"\",\n  code_postale: \"\",\n  montant: 0,\n};\n\n\nconst Paiement = (props) => {\n  // With location we can retrieve the kind of delivery chosen (was passed in props of history)\n  const [paiment_process, setPaiement_process] = useState(\"livraison\");\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  // const [supplements, setSupplements] = useState([]);\n  \n\n  const location = useLocation();\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const baskets = useSelector(selectBaskets);\n  const classes = useStyles();\n\n \n\n  const handleChange = (event) => {\n    // Listen for changes in CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  // Fonction liée au paiement ainsi qu'à l'enregistrement des infos du clients\n  const Payer = async (e) => {\n    e.preventDefault();\n\n    setProcessing(true);\n\n    const { data } = await axios.post(URL + \"paiement/create-client-secret\", {\n      amount: 1000,//parseInt((prixTotal * 100).toFixed(2), 10),\n      //email,\n    });\n    // *100 : stripe prend l'unité en centimes\n    // 3€ -> 300 centimes\n\n    \n    if(CardElement !== null){\n      console.log(CardElement)\n      console.log(elements)\n      console.log(elements.getElement(\"card\"))\n    await stripe\n      .confirmCardPayment(data.clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n        },\n      })\n      .then((res) => {\n        setError(null);\n        setProcessing(false);\n        setDisabled(false);\n\n        const commande = {\n        client: {\n          nom,\n          prenom,\n          email,\n          telephone: num_tel,\n          adresse,\n          ville,\n          code_postale,\n        },\n        panier: {\n          infos_menus: \"\",\n          infos_produits: JSON.stringify(baskets),\n        },\n        \n      };\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      sendrequest(\"post\", \"paiement/create-commande\", null, null, commande) //commande partie resto\n        .then((response) => {\n          if (response !== false) {\n            reinitialiserState();\n            dispatch(emptyBasket());\n            history.replace(\"/felicitation\", { payer: true });\n          } else {\n            setError(\n              \"Un problème s'est produit lors du paiement, veuillez réessayer\"\n            );\n          }\n        });\n    \n      })\n      .catch((err) => {\n        console.log(err.message);\n        setError(`Paiement échoué: ${err.message}`);\n        setProcessing(false);\n        //setSuccess(false);\n  \n      });\n    }\n\n      \n    };\n\n\n  const handleClose = (e) => {\n    if (\n      e.target.classList.contains(\"myModal__backdrop\") ||\n      e.target.classList.contains(\"myModal__modal__close-btn\") ||\n      e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") ||\n      e.target.parentNode.parentNode.classList.contains(\n        \"myModal__modal__close-btn\"\n      )\n    ) {\n      setShowModal(false);\n    }\n  };\n\n  const handleOpen = () => {\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    console.log(`baskets de paiement à linterieru`, baskets);\n  }, [baskets]);\n\n  return (\n    <div className=\"paiment\">\n      <div className=\"paiement__container\">\n              <form className=\"paiement__form\">\n                <CardElement\n                  id=\"card-element\"\n                  onChange={handleChange}\n                  options={cardStyle}\n                />\n                {error && (\n                  <div className=\"paiement__details__error\">* {error}</div>\n                )}\n\n                {baskets.length === 0 && (\n                  <div className=\"paiement__details__error\">\n                    * Vous n'avez rien dans le panier\n                  </div>\n                )}\n\n                <Button\n                  onClick={Payer}\n                  disabled={\n                    prixTotal <= 1 || processing || disabled || succeeded\n                  }\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"paiement--btn-payer\"\n                >\n                  <span className=\"paiement--btn-payer-text\">\n                    {processing ? (\n                     {/* <img src={spinner} alt=\"spinner\" /> */}\n                    ) : (\n                      <>Payer {prixTotal}€</>\n                    )}\n                  </span>\n                </Button>\n              </form>\n            \n      </div>\n    </div>\n  );\n};\n\nconst cardStyle = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aaa\",\n        backgroundColor: \"#fff\",\n      },\n      \":-webkit-autofill\": {\n        color: \"#fff\",\n      },\n      \":focus\": {\n        color: \"#aaa\",\n      },\n    },\n\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n  hidePostalCode: true,\n};\n\n\nexport const Wrapper = (props) => {\n\n  //const config = useSelector(state => state.config.info);\n  //const stripe = window.Stripe(config.stripe);\n\n  return (\n    <Elements stripe={loadStripe(\"pk_test_51JQ9d2G8uFuhwMtfeIIgrp9mSsWPuVqmTeqZVNc58ukTd42QqUEsnWf8vXIXS5q6Mu6bKS2PfElbRySFMeMHTaQK00WyHNKcuX\")}>\n      <Paiement />\n    </Elements>\n  );\n}\n\nexport default Wrapper;\n"]},"metadata":{},"sourceType":"module"}