{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";// *  Writing the Slices\n//+ createSlice returns a \"slice\" object that contains the generated reducer function as a field named reducer,\n//+ and the generated action creators inside an object called actions.\nexport var basketsSlice=createSlice({name:\"baskets\",initialState:[],reducers:{incrementQauntite:function incrementQauntite(state,action){var productIdx=state.findIndex(function(product){return product.nom===action.payload.nom;});if(productIdx!==-1){state[productIdx].quantite++;}},decrementQauntite:function decrementQauntite(state,action){var productIdx=state.findIndex(function(product){return product.nom===action.payload.nom;});if(productIdx!==-1){if(state[productIdx].quantite===1){state.splice(productIdx,1);}else{state[productIdx].quantite--;}}},deleteProduct:function deleteProduct(state,action){var productIdx=state.findIndex(function(product){return product.nom===action.payload.nom;});state.splice(productIdx,1);},addProduct:function addProduct(state,action){state.push(action.payload);console.log(action);console.log(action.payload);// const productIdx = state.findIndex(\n//   (product) => product.nom === action.payload.nom\n// );\n// if (productIdx !== -1) {\n//   // const quantite = state[productIdx].quantite + action.payload.quantite;\n//   // state.splice(productIdx, 1, {\n//   //   ...action.payload,\n//   //   quantite,\n//   // });\n//   const product = state[productIdx];\n//   product.quantite += action.payload.quantite;\n// } else {\n//   state.push(action.payload);\n// }\n},addMenu:function addMenu(state,action){state.push(action.payload);},emptyBasket:function emptyBasket(state){state.length=0;}}});//+ generated action creator functions :return an object with payload and type\nvar _basketsSlice$actions=basketsSlice.actions,addMenu=_basketsSlice$actions.addMenu,incrementQauntite=_basketsSlice$actions.incrementQauntite,decrementQauntite=_basketsSlice$actions.decrementQauntite,incrementByAmount=_basketsSlice$actions.incrementByAmount,deleteProduct=_basketsSlice$actions.deleteProduct,addProduct=_basketsSlice$actions.addProduct,emptyBasket=_basketsSlice$actions.emptyBasket;// useSelector(state => state.baskets) :returns the state for baskets\nexport{addMenu,incrementQauntite,decrementQauntite,incrementByAmount,deleteProduct,addProduct,emptyBasket};export var selectBaskets=function selectBaskets(state){return state.baskets;};// + the generated reducer function\nexport default basketsSlice.reducer;","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/app/Redux-slices/basketsSlice.js"],"names":["createSlice","basketsSlice","name","initialState","reducers","incrementQauntite","state","action","productIdx","findIndex","product","nom","payload","quantite","decrementQauntite","splice","deleteProduct","addProduct","push","console","log","addMenu","emptyBasket","length","actions","incrementByAmount","selectBaskets","baskets","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA;AAEA;AACA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAGD,WAAW,CAAC,CACtCE,IAAI,CAAE,SADgC,CAEtCC,YAAY,CAAE,EAFwB,CAGtCC,QAAQ,CAAE,CACRC,iBAAiB,CAAE,2BAACC,KAAD,CAAQC,MAAR,CAAmB,CACpC,GAAMC,CAAAA,UAAU,CAAGF,KAAK,CAACG,SAAN,CACjB,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,GAAR,GAAgBJ,MAAM,CAACK,OAAP,CAAeD,GAA5C,EADiB,CAAnB,CAGA,GAAIH,UAAU,GAAK,CAAC,CAApB,CAAuB,CACrBF,KAAK,CAACE,UAAD,CAAL,CAAkBK,QAAlB,GACD,CACF,CARO,CASRC,iBAAiB,CAAE,2BAACR,KAAD,CAAQC,MAAR,CAAmB,CACpC,GAAMC,CAAAA,UAAU,CAAGF,KAAK,CAACG,SAAN,CACjB,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,GAAR,GAAgBJ,MAAM,CAACK,OAAP,CAAeD,GAA5C,EADiB,CAAnB,CAIA,GAAIH,UAAU,GAAK,CAAC,CAApB,CAAuB,CACrB,GAAIF,KAAK,CAACE,UAAD,CAAL,CAAkBK,QAAlB,GAA+B,CAAnC,CAAsC,CACpCP,KAAK,CAACS,MAAN,CAAaP,UAAb,CAAyB,CAAzB,EACD,CAFD,IAEO,CACLF,KAAK,CAACE,UAAD,CAAL,CAAkBK,QAAlB,GACD,CACF,CACF,CArBO,CAuBRG,aAAa,CAAE,uBAACV,KAAD,CAAQC,MAAR,CAAmB,CAChC,GAAMC,CAAAA,UAAU,CAAGF,KAAK,CAACG,SAAN,CACjB,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,GAAR,GAAgBJ,MAAM,CAACK,OAAP,CAAeD,GAA5C,EADiB,CAAnB,CAGAL,KAAK,CAACS,MAAN,CAAaP,UAAb,CAAyB,CAAzB,EACD,CA5BO,CA8BRS,UAAU,CAAE,oBAACX,KAAD,CAAQC,MAAR,CAAmB,CAC7BD,KAAK,CAACY,IAAN,CAAWX,MAAM,CAACK,OAAlB,EACAO,OAAO,CAACC,GAAR,CAAYb,MAAZ,EACAY,OAAO,CAACC,GAAR,CAAYb,MAAM,CAACK,OAAnB,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAhDO,CAkDRS,OAAO,CAAE,iBAACf,KAAD,CAAQC,MAAR,CAAmB,CAC1BD,KAAK,CAACY,IAAN,CAAWX,MAAM,CAACK,OAAlB,EACD,CApDO,CAsDRU,WAAW,CAAE,qBAAChB,KAAD,CAAW,CACtBA,KAAK,CAACiB,MAAN,CAAe,CAAf,CACD,CAxDO,CAH4B,CAAD,CAAhC,CA+DP;AACO,0BAQHtB,YAAY,CAACuB,OARV,CACLH,OADK,uBACLA,OADK,CAELhB,iBAFK,uBAELA,iBAFK,CAGLS,iBAHK,uBAGLA,iBAHK,CAILW,iBAJK,uBAILA,iBAJK,CAKLT,aALK,uBAKLA,aALK,CAMLC,UANK,uBAMLA,UANK,CAOLK,WAPK,uBAOLA,WAPK,CAUP;2GACA,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACpB,KAAD,QAAWA,CAAAA,KAAK,CAACqB,OAAjB,EAAtB,CAEP;AACA,cAAe1B,CAAAA,YAAY,CAAC2B,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// *  Writing the Slices\n\n//+ createSlice returns a \"slice\" object that contains the generated reducer function as a field named reducer,\n//+ and the generated action creators inside an object called actions.\nexport const basketsSlice = createSlice({\n  name: \"baskets\",\n  initialState: [],\n  reducers: {\n    incrementQauntite: (state, action) => {\n      const productIdx = state.findIndex(\n        (product) => product.nom === action.payload.nom\n      );\n      if (productIdx !== -1) {\n        state[productIdx].quantite++;\n      }\n    },\n    decrementQauntite: (state, action) => {\n      const productIdx = state.findIndex(\n        (product) => product.nom === action.payload.nom\n      );\n\n      if (productIdx !== -1) {\n        if (state[productIdx].quantite === 1) {\n          state.splice(productIdx, 1);\n        } else {\n          state[productIdx].quantite--;\n        }\n      }\n    },\n\n    deleteProduct: (state, action) => {\n      const productIdx = state.findIndex(\n        (product) => product.nom === action.payload.nom\n      );\n      state.splice(productIdx, 1);      \n    },\n\n    addProduct: (state, action) => {\n      state.push(action.payload);\n      console.log(action);\n      console.log(action.payload);\n      // const productIdx = state.findIndex(\n      //   (product) => product.nom === action.payload.nom\n      // );\n      // if (productIdx !== -1) {\n      //   // const quantite = state[productIdx].quantite + action.payload.quantite;\n      //   // state.splice(productIdx, 1, {\n      //   //   ...action.payload,\n      //   //   quantite,\n      //   // });\n      //   const product = state[productIdx];\n      //   product.quantite += action.payload.quantite;\n      // } else {\n      //   state.push(action.payload);\n      // }\n    },\n\n    addMenu: (state, action) => {\n      state.push(action.payload)\n    },\n\n    emptyBasket: (state) => {\n      state.length = 0;\n    },\n  },\n});\n\n//+ generated action creator functions :return an object with payload and type\nexport const {\n  addMenu,\n  incrementQauntite,\n  decrementQauntite,\n  incrementByAmount,\n  deleteProduct,\n  addProduct,\n  emptyBasket,\n} = basketsSlice.actions;\n\n// useSelector(state => state.baskets) :returns the state for baskets\nexport const selectBaskets = (state) => state.baskets;\n\n// + the generated reducer function\nexport default basketsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}