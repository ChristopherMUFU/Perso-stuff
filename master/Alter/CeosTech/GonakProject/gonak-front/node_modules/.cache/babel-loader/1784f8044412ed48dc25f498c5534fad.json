{"ast":null,"code":"import _regeneratorRuntime from\"/home/christopher/Documents/Alter/GonakProject/gonak-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/christopher/Documents/Alter/GonakProject/gonak-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/christopher/Documents/Alter/GonakProject/gonak-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import FormHelperText from'@material-ui/core/FormHelperText';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';//import Carte from \"./Carte\";\nimport CartePage from'./CartePage';//import MenuType from \"../../Menu/MenuType\";\n//import Card from \"./Carte/card\";\nimport AddProductModal from\"./MyModal/AddProductModal\";import\"./index.css\";import axios from\"axios\";import{IconButton,Button}from\"@material-ui/core\";import DeleteIcon from'@material-ui/icons/Delete';import AddIcon from'@material-ui/icons/Add';import{URL,sendrequest}from\"../../../middlewares/request\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function GestionProduits(){var _useState=useState(1),_useState2=_slicedToArray(_useState,2),active=_useState2[0],setActive=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),activeCarte=_useState4[0],setActiveCarte=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),datas=_useState6[0],setDatas=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),sideDishes=_useState8[0],setSideDishes=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),menuCategories=_useState10[0],setMenuCategories=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),dishesDisplayed=_useState12[0],setDishesDisplay=_useState12[1];// Booleans that will only allow the component to render when the requests have returned the datas\nvar _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isDataLoading=_useState14[0],setDataLoading=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isCategoryLoading=_useState16[0],setCategoryLoading=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),sideDishesLoading=_useState18[0],setSideDishesLoading=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),showProductModal=_useState20[0],setShowProductModal=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),show=_useState22[0],setShow=_useState22[1];// activeCarte && (window.document.body.style.overflow = \"hidden\")\nactiveCarte?window.document.body.style.overflow=\"hidden\":window.document.body.style.overflow=\"auto\";var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://sendrequest(\"get\", \"letexan/produit/?accompagnement=true\", setSideDishes, setSideDishesLoading);\naxios.get(URL+\"gonak/produit/\").then(function(res){setDatas(res.data);console.log(res.data);});axios.get(URL+\"gonak/categorie/\").then(function(res){setMenuCategories(res.data);console.log(res.data);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();useEffect(function(){fetchData();},[]);//Function that will check through if id of the selected menu item matches the one of 'Menu'. If so then we will want to display all of the datas, not just a selection.\nvar isMenu=function isMenu(){for(var i=0;i<menuCategories.length;i++){if(menuCategories[i].id===active&&menuCategories[i].nom===\"Menus du Midi\"){return datas;}}};var selectDishesPerCategory=function selectDishesPerCategory(){var menuDishes=isMenu();if(menuDishes!==undefined){}else{var selectedDishes=datas// We filter the data :\n.filter(function(data){console.log(data);// By only selecting the data that belongs to a category (categories is an array in which are the different categories to which a dish belongs) that matches the one selected by the user (var active)\nreturn data.categorie===active;/*for (var i = 0; i < data.categories.length; i++) {\n                      if (data.categories[i] === active) return true;\n                      return false;\n                    }*/})//Once filtered, we can go through the selection to display them\n.map(function(data){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",marginRight:\"-30%\"},onClick:function onClick(){return setShow(true);},children:/*#__PURE__*/_jsx(CartePage,{idMenuPage:data.categorie},data.categorie)}),/*#__PURE__*/_jsx(AddProductModal,{productToUpdate:data,categorieId:data.categorie,show:show,setShow:setShow})]});});return selectedDishes;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"commander__\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',width:\"100%\"},children:[/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{id:\"demo-simple-select-label\",children:\"Categorie\"}),/*#__PURE__*/_jsx(Select,{labelId:\"demo-simple-select-label\",id:\"demo-simple-select\",variant:\"outlined\",size:\"small\",value:active,onChange:function onChange(e){setActive(e.target.value);setActiveCarte(false);setDishesDisplay(false);},children:menuCategories.map(function(categorie){return/*#__PURE__*/_jsx(MenuItem,{value:categorie.id,children:categorie.nom});})})]}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setShowProductModal(true);},children:\" Ajouter Produit\"}),/*#__PURE__*/_jsx(AddProductModal,{categorieId:active,show:showProductModal,setShow:setShowProductModal})]}),/*#__PURE__*/_jsx(\"div\",{className:\"commander__container\",children:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"commander__container__cards\",children:selectDishesPerCategory()})})})]});};","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/gestionProduits/index.js"],"names":["useEffect","useState","InputLabel","MenuItem","FormHelperText","FormControl","Select","CartePage","AddProductModal","axios","IconButton","Button","DeleteIcon","AddIcon","URL","sendrequest","GestionProduits","active","setActive","activeCarte","setActiveCarte","datas","setDatas","sideDishes","setSideDishes","menuCategories","setMenuCategories","dishesDisplayed","setDishesDisplay","isDataLoading","setDataLoading","isCategoryLoading","setCategoryLoading","sideDishesLoading","setSideDishesLoading","showProductModal","setShowProductModal","show","setShow","window","document","body","style","overflow","fetchData","get","then","res","data","console","log","isMenu","i","length","id","nom","selectDishesPerCategory","menuDishes","undefined","selectedDishes","filter","categorie","map","width","marginRight","textAlign","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n//import Carte from \"./Carte\";\nimport CartePage from './CartePage';\n//import MenuType from \"../../Menu/MenuType\";\n//import Card from \"./Carte/card\";\nimport AddProductModal from \"./MyModal/AddProductModal\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { IconButton, Button } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { URL, sendrequest } from \"../../../middlewares/request\";\n\n\nexport default function GestionProduits () {\n    const [active, setActive] = useState(1);\n    const [activeCarte, setActiveCarte] = useState(true);\n    const [datas, setDatas] = useState([]);\n    const [sideDishes, setSideDishes] = useState([]);\n    const [menuCategories, setMenuCategories] = useState([]);\n    const [dishesDisplayed, setDishesDisplay] = useState(false);\n    // Booleans that will only allow the component to render when the requests have returned the datas\n    const [isDataLoading, setDataLoading] = useState(false);\n    const [isCategoryLoading, setCategoryLoading] = useState(false);\n    const [sideDishesLoading, setSideDishesLoading] = useState(false);\n    const [showProductModal, setShowProductModal] = useState(false);\n    const [show, setShow] = useState(false);\n    // activeCarte && (window.document.body.style.overflow = \"hidden\")\n    activeCarte\n        ? (window.document.body.style.overflow = \"hidden\")\n        : (window.document.body.style.overflow = \"auto\");\n\n\n    const fetchData = async () => {\n        \n        //sendrequest(\"get\", \"letexan/produit/?accompagnement=true\", setSideDishes, setSideDishesLoading);\n        axios.get(URL + \"gonak/produit/\").then((res) => {\n          setDatas(res.data);\n          console.log(res.data);\n        });\n\n        axios.get(URL + \"gonak/categorie/\").then((res) => {\n          setMenuCategories(res.data);\n          console.log(res.data);\n        });\n    };\n\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    //Function that will check through if id of the selected menu item matches the one of 'Menu'. If so then we will want to display all of the datas, not just a selection.\n    const isMenu = () => {\n        for (var i = 0; i < menuCategories.length; i++) {\n            if (menuCategories[i].id === active && menuCategories[i].nom === \"Menus du Midi\") {\n                return datas;\n            }\n        }\n    };\n\n    const selectDishesPerCategory = () => {\n        var menuDishes = isMenu();\n\n        if (menuDishes !== undefined) {\n            \n        } else {\n            const selectedDishes = datas\n                // We filter the data :\n                .filter((data) => {\n                    console.log(data);\n                    // By only selecting the data that belongs to a category (categories is an array in which are the different categories to which a dish belongs) that matches the one selected by the user (var active)\n                    return (\n                        data.categorie === active\n                    )\n\n\n                    /*for (var i = 0; i < data.categories.length; i++) {\n                      if (data.categories[i] === active) return true;\n                      return false;\n                    }*/\n                })\n                //Once filtered, we can go through the selection to display them\n                .map((data) => {\n                    return (\n                        <>\n                            <div style={{width: \"100%\", marginRight: \"-30%\"}} onClick={() => setShow(true)}>\n                                <CartePage \n                                    key={data.categorie} \n                                    idMenuPage={data.categorie} \n                                />\n                            </div>\n\n                            <AddProductModal \n                                productToUpdate={data} \n                                categorieId={data.categorie} \n                                show={show} \n                                setShow={setShow} ></AddProductModal>\n                        </>\n                    );\n                });\n            return selectedDishes;\n        }\n    };\n\n    return (\n        <div className='commander__'>\n            <div style={{ textAlign: 'center', width: \"100%\" }}>\n            \n                <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\">Categorie</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={active}\n                    onChange={(e)=>{\n                        setActive(e.target.value);\n                        setActiveCarte(false);\n                        setDishesDisplay(false);\n                    }}\n                    >\n                        {menuCategories.map(categorie=>{\n                            return <MenuItem value={categorie.id}>{categorie.nom}</MenuItem>\n                        })}\n                    </Select>\n                </FormControl>\n            \n                <Button onClick={() => setShowProductModal(true)} > Ajouter Produit</Button>\n                <AddProductModal categorieId={active} show={showProductModal} setShow={setShowProductModal} ></AddProductModal>\n            </div>\n\n            <div className='commander__container'>\n            \n                    <>\n                        <div className='commander__container__cards'>\n                            {selectDishesPerCategory()}\n                        </div>\n\n                       \n                    </>\n      \n            </div>\n        </div>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}