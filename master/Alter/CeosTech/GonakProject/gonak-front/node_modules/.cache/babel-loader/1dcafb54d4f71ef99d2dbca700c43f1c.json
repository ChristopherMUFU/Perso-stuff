{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/nouvelleCommande/NouvelleCommande.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState\n/*, useRef*/\n} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changenouvelleCommandeLength, changeCommandeCoursLength } from \"../../../app/Redux-slices/adminSlice\";\nimport ProductList from \"../product/ProductList\";\nimport { URL } from \"../../../middlewares/request\"; //import ReactStopwatch from 'react-stopwatch';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NouvelleCommande = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [commandes, setCommandes] = useState([]);\n  const [commandesEnCours, setCommandesEnCours] = useState([]); // const [running, setRunning] = useState(false);\n  // const [currentTimeMin, setCurrentTimeMin] = useState(0);\n\n  const fetchCommandes = async () => {\n    const {\n      data\n    } = await axios.get(URL + \"gonak/nouvelle-commande\");\n    setCommandes(data);\n  };\n\n  const fetchCommandesEnCours = async () => {\n    const {\n      data\n    } = await axios.get(URL + \"gonak/commande-encours\");\n    setCommandesEnCours(data);\n  };\n\n  useEffect(() => {\n    // console.log(\"Commande: \",commandes)\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    dispatch(changenouvelleCommandeLength(commandes.length));\n  }, [commandes, dispatch]);\n  useEffect(() => {\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    dispatch(changeCommandeCoursLength(commandesEnCours.length));\n  }, [commandesEnCours, dispatch]);\n  useEffect(() => {\n    fetchCommandesEnCours();\n    let timeoutId;\n\n    function getLatestCommandes() {\n      fetchCommandes(); // wait for the response from fetchCommandes , before we recall it (delay of 1minute)\n\n      timeoutId = setTimeout(getLatestCommandes, 1000 * 60);\n    }\n\n    getLatestCommandes();\n    return () => {\n      clearTimeout(timeoutId);\n      setCommandes([]);\n    };\n  }, []);\n\n  const commande_est_vue = async id => {\n    await axios.put(URL + \"gonak/update-commande\", {\n      id,\n      est_vue: true\n    });\n    fetchCommandes();\n    fetchCommandesEnCours();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nouvelleCommande admin__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"2rem\",\n        color: \"#04295d\"\n      },\n      children: commandes.length ? \"Vos Nouvelles Commandes\" : \"Pas de Nouvelles commandes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      nouvelleCommande: true,\n      commandes: commandes,\n      action: commande_est_vue,\n      btn: \"confirmer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NouvelleCommande, \"4Xjzbl6bSi/ruauPNEZ3sisTu54=\", false, function () {\n  return [useDispatch];\n});\n\n_c = NouvelleCommande;\nexport default NouvelleCommande;\n\nvar _c;\n\n$RefreshReg$(_c, \"NouvelleCommande\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/nouvelleCommande/NouvelleCommande.js"],"names":["axios","useEffect","useState","useDispatch","changenouvelleCommandeLength","changeCommandeCoursLength","ProductList","URL","NouvelleCommande","dispatch","commandes","setCommandes","commandesEnCours","setCommandesEnCours","fetchCommandes","data","get","fetchCommandesEnCours","length","timeoutId","getLatestCommandes","setTimeout","clearTimeout","commande_est_vue","id","put","est_vue","textAlign","marginBottom","color"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState /*, useRef*/ } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  changenouvelleCommandeLength,\n  changeCommandeCoursLength,\n} from \"../../../app/Redux-slices/adminSlice\";\nimport ProductList from \"../product/ProductList\";\nimport { URL } from \"../../../middlewares/request\";\n//import ReactStopwatch from 'react-stopwatch';\n\nconst NouvelleCommande = () => {\n  const dispatch = useDispatch();\n  const [commandes, setCommandes] = useState([]);\n  const [commandesEnCours, setCommandesEnCours] = useState([]);\n  // const [running, setRunning] = useState(false);\n  // const [currentTimeMin, setCurrentTimeMin] = useState(0);\n\n  const fetchCommandes = async () => {\n    const { data } = await axios.get(URL + \"gonak/nouvelle-commande\");\n    setCommandes(data);\n  };\n\n  const fetchCommandesEnCours = async () => {\n    const { data } = await axios.get(URL + \"gonak/commande-encours\");\n    setCommandesEnCours(data);\n  };\n\n  useEffect(() => {\n    // console.log(\"Commande: \",commandes)\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    dispatch(changenouvelleCommandeLength(commandes.length));\n  }, [commandes, dispatch]);\n\n  useEffect(() => {\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    dispatch(changeCommandeCoursLength(commandesEnCours.length));\n  }, [commandesEnCours, dispatch]);\n\n  useEffect(() => {\n    fetchCommandesEnCours();\n    let timeoutId;\n    function getLatestCommandes() {\n      fetchCommandes();\n\n      // wait for the response from fetchCommandes , before we recall it (delay of 1minute)\n      timeoutId = setTimeout(getLatestCommandes, 1000 * 60);\n    }\n    getLatestCommandes();\n\n    return () => {\n      clearTimeout(timeoutId);\n      setCommandes([]);\n    };\n  }, []);\n\n  const commande_est_vue = async (id) => {\n    await axios.put(URL + \"gonak/update-commande\", {\n      id,\n      est_vue: true,\n    });\n\n    fetchCommandes();\n    fetchCommandesEnCours();\n  };\n  \n\n  return (\n    <div className=\"nouvelleCommande admin__container\">\n      <h1\n        style={{\n          textAlign: \"center\",\n          marginBottom: \"2rem\",\n          color: \"#04295d\",\n        }}\n      >\n        {commandes.length\n          ? \"Vos Nouvelles Commandes\"\n          : \"Pas de Nouvelles commandes\"}\n      </h1>\n\n      <ProductList\n        nouvelleCommande\n        commandes={commandes}\n        action={commande_est_vue}\n        btn=\"confirmer\"\n      />\n    </div>\n  );\n};\n\nexport default NouvelleCommande;\n"]},"metadata":{},"sourceType":"module"}