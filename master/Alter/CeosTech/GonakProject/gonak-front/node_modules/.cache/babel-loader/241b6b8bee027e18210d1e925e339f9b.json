{"ast":null,"code":"import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Table from\"@material-ui/core/Table\";import TableCell from\"@material-ui/core/TableCell\";import TableContainer from\"@material-ui/core/TableContainer\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import Paper from\"@material-ui/core/Paper\";import SwitchBtn from\"../switch/SwitchBtn\";import{TableBody}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({heading:{fontWeight:\"bold\"},content:{fontWeight:\"bold\",fontSize:30},rowConfig:{borderWidth:3}});export default function TableBox(_ref){var proprietes=_ref.proprietes,donnees=_ref.donnees,action=_ref.action;var classes=useStyles();return/*#__PURE__*/_jsx(TableContainer,{component:Paper,className:classes.root,children:/*#__PURE__*/_jsxs(Table,{className:classes.table,\"aria-label\":\"simple table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsx(TableRow,{className:classes.rowConfig,children:proprietes.map(function(prop){return/*#__PURE__*/_jsx(TableCell,{className:classes.heading,align:\"center\",children:prop},prop);})})}),/*#__PURE__*/_jsx(TableBody,{children:donnees===null||donnees===void 0?void 0:donnees.map(function(produit){return/*#__PURE__*/_jsx(TableBox.Row,{item:produit,action:action},produit.id);})})]})});}TableBox.Row=function(_ref2){var item=_ref2.item,action=_ref2.action;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(\"p\",{style:{marginTop:25,fontWeight:\"bold\",fontSize:25},children:item.nom})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(SwitchBtn,{val:item.disponibilite,action:action,item:item})})]});};","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/table/Table.js"],"names":["React","makeStyles","Table","TableCell","TableContainer","TableHead","TableRow","Paper","SwitchBtn","TableBody","useStyles","heading","fontWeight","content","fontSize","rowConfig","borderWidth","TableBox","proprietes","donnees","action","classes","root","table","map","prop","produit","id","Row","item","marginTop","nom","disponibilite"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,OAASC,SAAT,KAA0B,mBAA1B,C,wFACA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,CAC3BU,OAAO,CAAE,CACPC,UAAU,CAAE,MADL,CADkB,CAK3BC,OAAO,CAAE,CACPD,UAAU,CAAE,MADL,CAEPE,QAAQ,CAAE,EAFH,CALkB,CAU3BC,SAAS,CAAE,CACTC,WAAW,CAAE,CADJ,CAVgB,CAAD,CAA5B,CAeA,cAAe,SAASC,CAAAA,QAAT,MAAmD,IAA/BC,CAAAA,UAA+B,MAA/BA,UAA+B,CAAnBC,OAAmB,MAAnBA,OAAmB,CAAVC,MAAU,MAAVA,MAAU,CAE9D,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CAEF,mBACE,KAAC,cAAD,EAAgB,SAAS,CAAEH,KAA3B,CAAkC,SAAS,CAAEc,OAAO,CAACC,IAArD,uBACE,MAAC,KAAD,EAAO,SAAS,CAAED,OAAO,CAACE,KAA1B,CAAiC,aAAW,cAA5C,wBACE,KAAC,SAAD,wBACE,KAAC,QAAD,EAAU,SAAS,CAAEF,OAAO,CAACN,SAA7B,UACGG,UAAU,CAACM,GAAX,CAAe,SAACC,IAAD,qBACd,KAAC,SAAD,EAAsB,SAAS,CAAEJ,OAAO,CAACV,OAAzC,CAAkD,KAAK,CAAC,QAAxD,UACGc,IADH,EAAgBA,IAAhB,CADc,EAAf,CADH,EADF,EADF,cAUE,KAAC,SAAD,WACGN,OADH,SACGA,OADH,iBACGA,OAAO,CAAEK,GAAT,CAAa,SAACE,OAAD,qBACZ,KAAC,QAAD,CAAU,GAAV,EAA+B,IAAI,CAAEA,OAArC,CAA8C,MAAM,CAAEN,MAAtD,EAAmBM,OAAO,CAACC,EAA3B,CADY,EAAb,CADH,EAVF,GADF,EADF,CAoBD,CAEDV,QAAQ,CAACW,GAAT,CAAe,eAAsB,IAAnBC,CAAAA,IAAmB,OAAnBA,IAAmB,CAAbT,MAAa,OAAbA,MAAa,CACnC,mBACE,MAAC,QAAD,yBACE,KAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,uBAA2B,UAAG,KAAK,CAAE,CAACU,SAAS,CAAC,EAAX,CAAelB,UAAU,CAAE,MAA3B,CAAkCE,QAAQ,CAAE,EAA5C,CAAV,UAA6De,IAAI,CAACE,GAAlE,EAA3B,EADF,cAGE,KAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,uBACE,KAAC,SAAD,EAAW,GAAG,CAAEF,IAAI,CAACG,aAArB,CAAoC,MAAM,CAAEZ,MAA5C,CAAoD,IAAI,CAAES,IAA1D,EADF,EAHF,GADF,CASD,CAVD","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SwitchBtn from \"../switch/SwitchBtn\";\nimport { TableBody } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  heading: {\n    fontWeight: \"bold\",\n  },\n\n  content: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n  },\n\n  rowConfig: {\n    borderWidth: 3,\n  },\n});\n\nexport default function TableBox({ proprietes, donnees, action }) {\n\n    const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper} className={classes.root}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow className={classes.rowConfig}>\n            {proprietes.map((prop) => (\n              <TableCell key={prop} className={classes.heading} align='center'>\n                {prop}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {donnees?.map((produit) => (\n            <TableBox.Row key={produit.id} item={produit} action={action} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nTableBox.Row = ({ item, action }) => {\n  return (\n    <TableRow>\n      <TableCell align='center' ><p style={{marginTop:25, fontWeight: \"bold\",fontSize: 25,}}>{item.nom}</p></TableCell>\n      {/*<TableCell align='center'>{item.categories?.[0]?.libelle}</TableCell>*/}\n      <TableCell align='center'>\n        <SwitchBtn val={item.disponibilite} action={action} item={item} />\n      </TableCell>\n    </TableRow>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}