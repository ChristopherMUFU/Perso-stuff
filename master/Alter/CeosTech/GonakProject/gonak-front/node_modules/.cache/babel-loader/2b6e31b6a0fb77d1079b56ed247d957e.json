{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/site/Carte/CartePage/produitDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport axios from \"axios\";\nimport { URL, sendrequest } from \"../../../../middlewares/request\"; //import { CarteContent } from '../../../../data/site/carteContent';\n\nimport Grid from '@material-ui/core/Grid';\nimport ShowMoreText from \"react-show-more-text\";\nimport { Button, IconButton, TextField } from \"@material-ui/core\";\nimport { FormControlLabel, FormControl, RadioGroup, Radio, Checkbox } from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport { splitPrix } from \"../../../../utilities\";\nimport ExpandedIcon from \"./ExpandedIcon\";\nimport Modal from \"../MyModal/Modal\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProduitDetail = props => {\n  _s();\n\n  var _props$wraps2, _props$sandwichs2;\n\n  const [quantite, setQuantite] = useState(1);\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(false);\n  const [tailleSelected, setTailleSelected] = useState(null); // type de prix pour les produits à plusieurs prix\n\n  const [sandPlatSelected, setSandPlatSelected] = useState(null);\n  const [entreeSelected, setEntreeSelected] = useState(null);\n  const [dessertSelected, setDessertSelected] = useState(null);\n  const [boissonSelected, setBoissonSelected] = useState(null);\n  const [expanded, setExpanded] = useState(false);\n  const [showBoissonClassique, setShowBoissonClassique] = useState(false);\n  const [showJusFruit, setShowJusFruit] = useState(false);\n  const [showFreezeGazeuse, setShowFreezeGazeuse] = useState(false);\n\n  const handleClose = e => {\n    if (e.target.classList.contains(\"myModal__backdrop\") || e.target.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.parentNode.classList.contains(\"myModal__modal__close-btn\")) {\n      setShow(false);\n    }\n  };\n\n  const handleTailleSelected = event => {\n    // ++ prix\n    setTailleSelected(event.target.value);\n    setError(false);\n  };\n\n  const handleSandPlatSelected = event => {\n    setSandPlatSelected(event.target.value);\n    setError(false);\n  };\n\n  const handleEntreeSelected = event => {\n    setEntreeSelected(event.target.value);\n    setError(false);\n  };\n\n  const handleDessertSelected = event => {\n    setDessertSelected(event.target.value);\n    setError(false);\n  };\n\n  const handleBoissonSelected = event => {\n    setBoissonSelected(event.target.value);\n    setError(false);\n  };\n\n  const showMultiplePrice = data => {\n    if (data.categorie === 1 && data.prix === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"À partir de \" + data.prix_gourmande + \" €\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this);\n    } else if (data.categorie === 2 && data.prix === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"À partir de \" + data.pieces_x5 + \" €\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this);\n    } else if (data.categorie === 4 && data.prix === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"À partir de \" + data.sans_accompagnement + \" €\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this);\n    } else if (data.categorie === 12 && data.prix === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"À partir de \" + data.moyen + \" €\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [data.prix + \" €\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const showMultipleDishes = data => {\n    if (data.categorie === 1 && data.prix === 0) {\n      var _props$wraps, _props$sandwichs, _props$salades, _props$pates, _props$desserts, _props$boissons;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Body.Heading, {\n            style: {\n              marginBottom: \"1.5rem\",\n              marginTop: \"1.3rem\"\n            },\n            children: props.detail.nom.includes('sandwich') ? \"Sandwich/wraps\" : \"Salades/pâtes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              name: \"plats\",\n              value: sandPlatSelected,\n              onChange: handleSandPlatSelected,\n              children: props.detail.nom.includes('sandwich') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [(_props$wraps = props.wraps) === null || _props$wraps === void 0 ? void 0 : _props$wraps.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sides-radioGroup\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: data.nom,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 48\n                    }, this),\n                    id: data.id,\n                    className: \"radio-choice__menu\",\n                    onClick: () => {\n                      setError(false); //setTailleSelected(data);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: data.nom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 37\n                  }, this)]\n                }, data.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 35\n                }, this)), (_props$sandwichs = props.sandwichs) === null || _props$sandwichs === void 0 ? void 0 : _props$sandwichs.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sides-radioGroup\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: data.nom,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 48\n                    }, this),\n                    id: data.id,\n                    className: \"radio-choice__menu\",\n                    onClick: () => {\n                      setError(false); //setTailleSelected(data);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: data.nom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 37\n                  }, this)]\n                }, data.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 35\n                }, this))]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [(_props$salades = props.salades) === null || _props$salades === void 0 ? void 0 : _props$salades.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sides-radioGroup\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: data.nom,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 52\n                    }, this),\n                    id: data.id,\n                    className: \"radio-choice__menu\",\n                    onClick: () => {\n                      setError(false); //setTailleSelected(data);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: data.nom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 41\n                  }, this)]\n                }, data.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 39\n                }, this)), (_props$pates = props.pates) === null || _props$pates === void 0 ? void 0 : _props$pates.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sides-radioGroup\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: data.nom,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 52\n                    }, this),\n                    id: data.id,\n                    className: \"radio-choice__menu\",\n                    onClick: () => {\n                      setError(false); //setTailleSelected(data);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: data.nom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 41\n                  }, this)]\n                }, data.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 39\n                }, this))]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: \"Veuillez s\\xE9lectionner au moins un \\xE9l\\xE9ment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separation_ligne\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Body.Heading, {\n            style: {\n              marginBottom: \"1.5rem\",\n              marginTop: \"1.3rem\"\n            },\n            children: \"Dessert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              name: \"dessert\",\n              value: dessertSelected,\n              onChange: handleDessertSelected,\n              children: (_props$desserts = props.desserts) === null || _props$desserts === void 0 ? void 0 : _props$desserts.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sides-radioGroup\",\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: data.nom,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 48\n                  }, this),\n                  id: data.id,\n                  className: \"radio-choice__menu\",\n                  onClick: () => {\n                    setError(false); //setTailleSelected(data);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: data.nom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this)]\n              }, data.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 35\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: \"Veuillez s\\xE9lectionner au moins un \\xE9l\\xE9ment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separation_ligne\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Body.Heading, {\n            style: {\n              marginBottom: \"1.5rem\",\n              marginTop: \"1.3rem\"\n            },\n            children: \"Soft drinks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              name: \"boisson\",\n              value: boissonSelected,\n              onChange: handleBoissonSelected,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"boisson_choice_container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Boissons classiques\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  onClick: setShowBoissonClassique(),\n                  children: /*#__PURE__*/_jsxDEV(ExpandedIcon, {\n                    expanded: expanded,\n                    setExpanded: setExpanded\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 70\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 29\n              }, this), (_props$boissons = props.boissons) === null || _props$boissons === void 0 ? void 0 : _props$boissons.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sides-radioGroup\",\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: data.nom,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 48\n                  }, this),\n                  id: data.id,\n                  className: \"radio-choice__menu\",\n                  onClick: () => {\n                    setError(false); //setTailleSelected(data);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: data.nom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this)]\n              }, data.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 35\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: \"Veuillez s\\xE9lectionner au moins un \\xE9l\\xE9ment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separation_ligne\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else if (data.categorie === 2 && data.prix === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"À partir de \" + data.pieces_x5 + \" €\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this);\n    } else if (data.categorie === 4 && data.prix === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"À partir de \" + data.sans_accompagnement + \" €\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this);\n    } else if (data.categorie === 12 && data.prix === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"À partir de \" + data.moyen + \" €\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this);\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-item\",\n      onClick: () => setShow(true),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"menu-item-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-item-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"menu-item-titre\",\n            children: props.detail.nom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 76\n          }, this), /*#__PURE__*/_jsxDEV(ShowMoreText\n          /* Default options */\n          , {\n            lines: 2,\n            more: \"\",\n            less: \"\",\n            className: \"content-css\",\n            anchorClass: \"my-anchor-css-class\"\n            /*onClick={this.executeOnClick}*/\n            ,\n            expanded: false,\n            width: 280,\n            truncatedEndingComponent: \"... \",\n            className: \"menu-item-text\",\n            children: props.detail.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 40\n          }, this), showMultiplePrice(props.detail), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: show,\n      setShowModal: setShow,\n      handleClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.detail.image,\n          alt: props.detail.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body.Heading, {\n          children: props.detail.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 23\n        }, this), showMultiplePrice(props.detail)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body.Heading, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.detail.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Body.Heading, {\n            style: {\n              marginBottom: \"1.5rem\",\n              marginTop: \"1.3rem\"\n            },\n            children: props.detail.nom.includes('sandwich') ? \"Sandwich/wraps\" : \"Salades/pâtes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              name: \"plats\",\n              value: sandPlatSelected,\n              onChange: handleSandPlatSelected,\n              children: [(_props$wraps2 = props.wraps) === null || _props$wraps2 === void 0 ? void 0 : _props$wraps2.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sides-radioGroup\",\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: data.nom,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 48\n                  }, this),\n                  id: data.id,\n                  className: \"radio-choice__menu\",\n                  onClick: () => {\n                    setError(false); //setTailleSelected(data);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: data.nom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 37\n                }, this)]\n              }, data.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 35\n              }, this)), (_props$sandwichs2 = props.sandwichs) === null || _props$sandwichs2 === void 0 ? void 0 : _props$sandwichs2.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sides-radioGroup\",\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: data.nom,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 48\n                  }, this),\n                  id: data.id,\n                  className: \"radio-choice__menu\",\n                  onClick: () => {\n                    setError(false); //setTailleSelected(data);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: data.nom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 37\n                }, this)]\n              }, data.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 35\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: \"Veuillez s\\xE9lectionner au moins un \\xE9l\\xE9ment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"separation_ligne\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: \"15px\",\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              margin: \"0 5px\"\n            },\n            onClick: () => {\n              if (quantite > 0) {\n                setQuantite(quantite - 1);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: quantite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              margin: \"0 5px\"\n            },\n            onClick: () => setQuantite(quantite + 1),\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this), !props.detail.disponibilite && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Produit non disponible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 57\n        }, this), props.detail.disponibilite && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: quantite === 0,\n          onClick: () => {//verifySeletedDishes();\n          },\n          variant: \"contained\",\n          color: \"secondary\",\n          className: \"card__item__commander-btn\",\n          endIcon: /*#__PURE__*/_jsxDEV(AddShoppingCartIcon, {\n            style: {\n              fontSize: \"25px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 38\n          }, this),\n          children: \"Ajouter au panier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProduitDetail, \"8jdt/n3w6MQNGHGxsBPpBE3CPyQ=\");\n\n_c = ProduitDetail;\nexport default ProduitDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProduitDetail\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/site/Carte/CartePage/produitDetail.js"],"names":["React","useState","useEffect","axios","URL","sendrequest","Grid","ShowMoreText","Button","IconButton","TextField","FormControlLabel","FormControl","RadioGroup","Radio","Checkbox","FormGroup","AddShoppingCartIcon","splitPrix","ExpandedIcon","Modal","RemoveIcon","AddIcon","ProduitDetail","props","quantite","setQuantite","show","setShow","error","setError","tailleSelected","setTailleSelected","sandPlatSelected","setSandPlatSelected","entreeSelected","setEntreeSelected","dessertSelected","setDessertSelected","boissonSelected","setBoissonSelected","expanded","setExpanded","showBoissonClassique","setShowBoissonClassique","showJusFruit","setShowJusFruit","showFreezeGazeuse","setShowFreezeGazeuse","handleClose","e","target","classList","contains","parentNode","handleTailleSelected","event","value","handleSandPlatSelected","handleEntreeSelected","handleDessertSelected","handleBoissonSelected","showMultiplePrice","data","categorie","prix","prix_gourmande","pieces_x5","sans_accompagnement","moyen","showMultipleDishes","marginBottom","marginTop","detail","nom","includes","wraps","map","id","sandwichs","salades","pates","desserts","boissons","description","image","marginRight","display","alignItems","margin","disponibilite","fontSize"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './styles.css';\nimport axios from \"axios\";\nimport { URL, sendrequest } from \"../../../../middlewares/request\";\n//import { CarteContent } from '../../../../data/site/carteContent';\nimport Grid from '@material-ui/core/Grid';\nimport ShowMoreText from \"react-show-more-text\";\nimport { Button, IconButton, TextField } from \"@material-ui/core\";\nimport {\n  FormControlLabel,\n  FormControl,\n  RadioGroup,\n  Radio,\n  Checkbox,\n} from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport { splitPrix } from \"../../../../utilities\";\nimport ExpandedIcon from \"./ExpandedIcon\";\nimport Modal from \"../MyModal/Modal\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\n\nconst ProduitDetail = (props) => {\n  const [quantite, setQuantite] = useState(1);\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [tailleSelected, setTailleSelected] = useState(null); // type de prix pour les produits à plusieurs prix\n  const [sandPlatSelected, setSandPlatSelected] = useState(null);\n  const [entreeSelected, setEntreeSelected] = useState(null);\n  const [dessertSelected, setDessertSelected] = useState(null);\n  const [boissonSelected, setBoissonSelected] = useState(null);\n\n  const [expanded, setExpanded] = useState(false);\n  const [showBoissonClassique, setShowBoissonClassique] = useState(false);\n  const [showJusFruit, setShowJusFruit] = useState(false);\n  const [showFreezeGazeuse, setShowFreezeGazeuse] = useState(false);\n\n\n    const handleClose = (e) => {\n        if (\n          e.target.classList.contains(\"myModal__backdrop\") ||\n          e.target.classList.contains(\"myModal__modal__close-btn\") ||\n          e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") ||\n          e.target.parentNode.parentNode.classList.contains(\n            \"myModal__modal__close-btn\"\n          )\n        ) {\n          setShow(false);\n      }\n    };\n\n    const handleTailleSelected = (event) => { // ++ prix\n      setTailleSelected(event.target.value);\n      setError(false);\n    };\n\n    const handleSandPlatSelected = (event) => {\n      setSandPlatSelected(event.target.value);\n      setError(false);\n    };\n\n    const handleEntreeSelected = (event) => {\n      setEntreeSelected(event.target.value);\n      setError(false);\n    };\n\n    const handleDessertSelected = (event) => {\n      setDessertSelected(event.target.value);\n      setError(false);\n    };\n\n    const handleBoissonSelected = (event) => {\n      setBoissonSelected(event.target.value);\n      setError(false);\n    };\n\n\n\n    const showMultiplePrice = (data) => {\n\n      if(data.categorie === 1 && data.prix === 0){\n        return (<p><b>{\"À partir de \" + data.prix_gourmande + \" €\"} </b> </p>)\n      }\n      else if(data.categorie === 2 && data.prix === 0){\n        return (<p><b>{\"À partir de \" + data.pieces_x5 + \" €\"} </b> </p>)\n      }\n      else if(data.categorie === 4 && data.prix === 0){\n        return (<p><b>{\"À partir de \" + data.sans_accompagnement + \" €\"} </b> </p>)\n      }\n      else if(data.categorie === 12 && data.prix === 0){\n        return (<p><b>{\"À partir de \" + data.moyen + \" €\"} </b> </p>)\n      }\n      else{\n        return (<p><b>{data.prix + \" €\"} </b> </p>)\n      }\n    }\n\n    const showMultipleDishes = (data) => {\n\n      if(data.categorie === 1 && data.prix === 0){\n        return (\n          <>\n            \n\n\n                \n                    <Modal.Body>\n                        <Modal.Body.Heading\n                          style={{ marginBottom: \"1.5rem\", marginTop: \"1.3rem\" }}\n                        >\n                        {props.detail.nom.includes('sandwich') ? (\"Sandwich/wraps\") : (\"Salades/pâtes\")}\n                        </Modal.Body.Heading>\n                        <FormControl component=\"fieldset\">\n                          <RadioGroup\n                            name=\"plats\"\n                            value={sandPlatSelected}\n                            onChange={handleSandPlatSelected}\n                          >\n\n                          {props.detail.nom.includes('sandwich') ? (\n                            <>\n                              \n                              {props.wraps?.map((data) => (\n                           \n                                  <div className=\"sides-radioGroup\" key={data.id}>\n                                    <FormControlLabel\n                                      value={data.nom}\n                                      control={<Radio />}\n                                      id={data.id}\n                                      className=\"radio-choice__menu\"\n                                      onClick={() => {\n                                        setError(false);\n                                        //setTailleSelected(data);\n                                      }}\n                                    />\n                                    <span>{data.nom}</span>\n                                  </div>\n                                  \n                              ))}\n                              {props.sandwichs?.map((data) => (\n                           \n                                  <div className=\"sides-radioGroup\" key={data.id}>\n                                    <FormControlLabel\n                                      value={data.nom}\n                                      control={<Radio />}\n                                      id={data.id}\n                                      className=\"radio-choice__menu\"\n                                      onClick={() => {\n                                        setError(false);\n                                        //setTailleSelected(data);\n                                      }}\n                                    />\n                                    <span>{data.nom}</span>\n                                  </div>\n                                  \n                              ))}\n                              </>\n                            ) : (\n                              <>\n                                  {props.salades?.map((data) => (\n                           \n                                      <div className=\"sides-radioGroup\" key={data.id}>\n                                        <FormControlLabel\n                                          value={data.nom}\n                                          control={<Radio />}\n                                          id={data.id}\n                                          className=\"radio-choice__menu\"\n                                          onClick={() => {\n                                            setError(false);\n                                            //setTailleSelected(data);\n                                          }}\n                                        />\n                                        <span>{data.nom}</span>\n                                      </div>\n                                      \n                                  ))}\n                                  {props.pates?.map((data) => (\n                               \n                                      <div className=\"sides-radioGroup\" key={data.id}>\n                                        <FormControlLabel\n                                          value={data.nom}\n                                          control={<Radio />}\n                                          id={data.id}\n                                          className=\"radio-choice__menu\"\n                                          onClick={() => {\n                                            setError(false);\n                                            //setTailleSelected(data);\n                                          }}\n                                        />\n                                        <span>{data.nom}</span>\n                                      </div>\n                                      \n                                  ))}\n                                </>\n                            )}\n                          </RadioGroup>\n                        </FormControl>\n                        {error && (\n                          <p className=\"error\">Veuillez sélectionner au moins un élément</p>\n                        )}\n                        <div className=\"separation_ligne\"> </div>\n                    </Modal.Body>\n                  \n                  <Modal.Body>\n                        <Modal.Body.Heading\n                          style={{ marginBottom: \"1.5rem\", marginTop: \"1.3rem\" }}\n                        >\n                         Dessert\n                        </Modal.Body.Heading>\n                        <FormControl component=\"fieldset\">\n                          <RadioGroup\n                            name=\"dessert\"\n                            value={dessertSelected}\n                            onChange={handleDessertSelected}\n                          >\n                           \n                            {props.desserts?.map((data) => (\n                       \n                                  <div className=\"sides-radioGroup\" key={data.id}>\n                                    <FormControlLabel\n                                      value={data.nom}\n                                      control={<Radio />}\n                                      id={data.id}\n                                      className=\"radio-choice__menu\"\n                                      onClick={() => {\n                                        setError(false);\n                                        //setTailleSelected(data);\n                                      }}\n                                    />\n                                    <span>{data.nom}</span>\n                                  </div>\n                                  \n                              ))}\n                              \n                          </RadioGroup>\n                        </FormControl>\n                        {error && (\n                          <p className=\"error\">Veuillez sélectionner au moins un élément</p>\n                        )}\n                        <div className=\"separation_ligne\"> </div>\n                    </Modal.Body>\n\n                    <Modal.Body>\n                        <Modal.Body.Heading\n                          style={{ marginBottom: \"1.5rem\", marginTop: \"1.3rem\" }}\n                        >\n                         Soft drinks\n                        </Modal.Body.Heading>\n                        <FormControl component=\"fieldset\">\n                          <RadioGroup\n                            name=\"boisson\"\n                            value={boissonSelected}\n                            onChange={handleBoissonSelected}\n                          >\n\n                            <div className=\"boisson_choice_container\">\n                              <span>Boissons classiques</span>\n                              <p onClick={setShowBoissonClassique()}><ExpandedIcon expanded={expanded} setExpanded={setExpanded} /></p>\n                            </div>\n                           \n                            {props.boissons?.map((data) => (\n                       \n                                  <div className=\"sides-radioGroup\" key={data.id}>\n                                    <FormControlLabel\n                                      value={data.nom}\n                                      control={<Radio />}\n                                      id={data.id}\n                                      className=\"radio-choice__menu\"\n                                      onClick={() => {\n                                        setError(false);\n                                        //setTailleSelected(data);\n                                      }}\n                                    />\n                                    <span>{data.nom}</span>\n                                  </div>\n                                  \n                              ))}\n                              \n                          </RadioGroup>\n                        </FormControl>\n                        {error && (\n                          <p className=\"error\">Veuillez sélectionner au moins un élément</p>\n                        )}\n                        <div className=\"separation_ligne\"> </div>\n                    </Modal.Body>\n\n\n          </>\n        )\n      }\n      else if(data.categorie === 2 && data.prix === 0){\n        return (<p><b>{\"À partir de \" + data.pieces_x5 + \" €\"} </b> </p>)\n      }\n      else if(data.categorie === 4 && data.prix === 0){\n        return (<p><b>{\"À partir de \" + data.sans_accompagnement + \" €\"} </b> </p>)\n      }\n      else if(data.categorie === 12 && data.prix === 0){\n        return (<p><b>{\"À partir de \" + data.moyen + \" €\"} </b> </p>)\n      }\n      else{\n        return (\"\")\n      }\n    }\n\n\n\n    return(\n\n          <>\n              <div className=\"menu-item\" onClick={() => setShow(true)}>\n                <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n                    {/*<img src={props.detail.image} alt={props.detail.nom}></img>*/}\n                    <p className=\"menu-item-img\"></p>\n\n                    <div className=\"menu-item-info\">\n                      <p className=\"menu-item-titre\">{props.detail.nom}</p><br/>\n                      <ShowMoreText\n                            /* Default options */\n                            lines={2}\n                            more=\"\"\n                            less=\"\"\n                            className=\"content-css\"\n                            anchorClass=\"my-anchor-css-class\"\n                            /*onClick={this.executeOnClick}*/\n                            expanded={false}\n                            width={280}\n                            truncatedEndingComponent={\"... \"}\n                            className=\"menu-item-text\"\n                        >\n                            {props.detail.description}\n                        </ShowMoreText><br/>\n                      {showMultiplePrice(props.detail)}<br/>\n                    </div>\n                  </Grid>\n                </div>\n                \n                  <Modal\n                    showModal={show}\n                    setShowModal={setShow}\n                    handleClose={handleClose}\n                  >\n                    <Modal.Body>\n                      <img src={props.detail.image} alt={props.detail.nom} />\n                      <Modal.Body.Heading>{props.detail.nom}</Modal.Body.Heading>\n                      {showMultiplePrice(props.detail)}\n                    </Modal.Body>\n\n                    <Modal.Body>\n                      <Modal.Body.Heading>Description</Modal.Body.Heading>\n                      <p>{props.detail.description}</p>\n                    </Modal.Body>\n\n                  {/* FORMULES => Sandwich/wraps */}\n\n                    <>\n            \n\n\n                \n                    <Modal.Body>\n                        <Modal.Body.Heading\n                          style={{ marginBottom: \"1.5rem\", marginTop: \"1.3rem\" }}\n                        >\n                        {props.detail.nom.includes('sandwich') ? (\"Sandwich/wraps\") : (\"Salades/pâtes\")}\n                        </Modal.Body.Heading>\n                        <FormControl component=\"fieldset\">\n                          <RadioGroup\n                            name=\"plats\"\n                            value={sandPlatSelected}\n                            onChange={handleSandPlatSelected}\n                          >\n                              {props.wraps?.map((data) => (\n                           \n                                  <div className=\"sides-radioGroup\" key={data.id}>\n                                    <FormControlLabel\n                                      value={data.nom}\n                                      control={<Radio />}\n                                      id={data.id}\n                                      className=\"radio-choice__menu\"\n                                      onClick={() => {\n                                        setError(false);\n                                        //setTailleSelected(data);\n                                      }}\n                                    />\n                                    <span>{data.nom}</span>\n                                  </div>\n                                  \n                              ))}\n                              {props.sandwichs?.map((data) => (\n                           \n                                  <div className=\"sides-radioGroup\" key={data.id}>\n                                    <FormControlLabel\n                                      value={data.nom}\n                                      control={<Radio />}\n                                      id={data.id}\n                                      className=\"radio-choice__menu\"\n                                      onClick={() => {\n                                        setError(false);\n                                        //setTailleSelected(data);\n                                      }}\n                                    />\n                                    <span>{data.nom}</span>\n                                  </div>\n                                  \n                              ))}\n                       \n                      \n                          </RadioGroup>\n                        </FormControl>\n                        {error && (\n                          <p className=\"error\">Veuillez sélectionner au moins un élément</p>\n                        )}\n                        <div className=\"separation_ligne\"> </div>\n                    </Modal.Body>\n                  \n                  \n\n\n          </>\n\n\n\n\n\n\n\n                    <Modal.Footer>\n                        <div\n                          style={{\n                            marginRight: \"15px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <IconButton\n                            style={{ margin: \"0 5px\" }}\n                            onClick={() => {\n                              if (quantite > 0) {\n                                setQuantite(quantite - 1);\n                              }\n                            }}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n\n                          <span>{quantite}</span>\n\n                          <IconButton\n                            style={{ margin: \"0 5px\" }}\n                            onClick={() => setQuantite(quantite + 1)}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        {/* If the item is non available, this will be displayed */}\n                        {!props.detail.disponibilite && <p>Produit non disponible</p>}\n\n                        {props.detail.disponibilite && (\n                          <Button\n                            disabled={quantite === 0}\n                            onClick={() => {\n                              //verifySeletedDishes();\n                            }}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className=\"card__item__commander-btn\"\n                            endIcon={<AddShoppingCartIcon style={{ fontSize: \"25px\" }} />}\n                          >\n                            Ajouter au panier\n                          </Button>\n                        )}\n                      </Modal.Footer>\n                  </Modal>\n           \n            </>\n    );\n};\nexport default ProduitDetail;\n"]},"metadata":{},"sourceType":"module"}