{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/dirigeant/UpdateFormDirigeant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport useForm from \"../../../hooks/useForm\";\nimport { sendrequest } from \"../../../middlewares/request\";\nimport ModalBootsrap from \"../../modal/Modal\";\nimport { TextField } from '@material-ui/core';\nimport axios from \"axios\";\nimport { URL } from \"../../../middlewares/request\";\nimport './dirigeant.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateFormDirigeant = ({\n  restaurantOwner\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [show, setShow] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [dirigeant, setDirigeant] = useState([]);\n  const [initState, setInitState] = useState([]);\n  const [infoRestaurant, setInfoRestaurant] = useState([]);\n  const [infoEntreprise, setInfoEntreprise] = useState([]);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const token = window.$token_access;\n  const email = window.$email_dirigeant;\n  const password_dir = window.$password_dirigeant;\n\n  const updateData = async () => {\n    const res = await axios.put(URL + \"accounts/restaurantowner/\" + restaurantOwner.id + \"/\", {\n      nom: state.nom,\n      prénom: state.prenom,\n      email: state.adresse_mail,\n      phone_number: state.num_tel,\n      company_position: state.poste_occupe,\n      restaurant: {\n        name: restaurantOwner.restaurant.name,\n        address: state.adresse,\n        postal_code: state.code_postal,\n        city: state.ville,\n        phone_number: restaurantOwner.restaurant.phone_number\n      },\n      company: {\n        name: restaurantOwner.company.name,\n        address: restaurantOwner.company.address,\n        postal_code: restaurantOwner.company.postal_code,\n        city: restaurantOwner.company.city,\n        capital: restaurantOwner.company.capital,\n        SIRET_number: restaurantOwner.company.SIRET_number,\n        retirement_fund_name: restaurantOwner.company.retirement_fund_name,\n        retirement_fund_address: restaurantOwner.company.retirement_fund_address,\n        retirement_fund_city: restaurantOwner.company.retirement_fund_city,\n        retirement_fund_postal_code: restaurantOwner.company.retirement_fund_postal_code\n      },\n      user: {\n        //username: state.adresse_mail,\n        email: state.adresse_mail,\n        password: password_dir\n      }\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(result => {\n      console.log(result);\n    });\n  };\n\n  const estValide = (fieldValues = state) => {\n    const validator = {};\n    if (\"nom\" in fieldValues) validator.nom = state.nom ? null : \"Le champ nom est obligatore\";\n    if (\"prenom\" in fieldValues) validator.prenom = state.prenom ? null : \"Le champ prénom est obligatore\";\n    if (\"adresse_mail\" in fieldValues) validator.adresse_mail = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(adresse_mail) ? null : \"Le mail n'est pas valide\";\n    if (\"adresse\" in fieldValues) validator.adresse = state.adresse ? null : \"Le champ adresse est obligatore\";\n    if (\"ville\" in fieldValues) validator.ville = state.ville ? null : \"Le champ ville est obligatore\";\n    if (\"poste_occupe\" in fieldValues) validator.poste_occupe = state.poste_occupe ? null : \"Le champ poste occupée est obligatore\";\n    if (\"code_postal\" in fieldValues) validator.code_postal = /^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/.test(code_postal) ? null : \"Le code postal n'est pas valide\";\n    if (\"num_tel\" in fieldValues) validator.num_tel = /^(0|\\+33)[1-9]([-. ]?[0-9]{2}){4}$/.test(num_tel) ? null : \"Le numéro de téléphone n'est pas valide\";\n    setErrors({ ...validator\n    }); // retourne boolean si et seulement si on passe un parametre pour la fonction\n\n    if (fieldValues === state) {\n      return Object.values(validator).every(el => !el);\n    }\n  };\n\n  const {\n    state,\n    handleInputChange,\n    errors,\n    setErrors,\n    reinitialiserState\n  } = useForm(initState, estValide);\n  const {\n    nom,\n    prenom,\n    adresse_mail,\n    num_tel,\n    code_postal,\n    ville,\n    adresse,\n    poste_occupe\n  } = state; //state.prenom = restaurantOwner.prénom\n  //Fonction permettant d'afficher les données récupérés\n  //contenant => input modifiable\n  //contenue => donnée à afficher\n\n  const preAffichage = contenant => {\n    if (contenant === undefined) {\n      state.nom = restaurantOwner.nom;\n      state.prenom = restaurantOwner.prénom;\n      state.adresse_mail = restaurantOwner.email;\n      state.num_tel = restaurantOwner.phone_number;\n      state.adresse = restaurantOwner.restaurant.address;\n      state.code_postal = restaurantOwner.restaurant.postal_code;\n      state.ville = restaurantOwner.restaurant.city;\n      state.poste_occupe = restaurantOwner.company_position;\n      console.log(contenant);\n      return state.nom + \"\";\n    }\n\n    return contenant + \"\";\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Cas où le dirigeant entre ces informations pour la 1ere fois\n\n    if (restaurantOwner === []) {\n      //reinitialiserState();\n      if (estValide()) {\n        sendrequest(\"post\", \"main/dirigeant/\", null, null, state).then(response => {\n          if (response !== false && estValide()) {\n            setSuccess(true);\n            handleShow();\n          } else {\n            setSuccess(false);\n            handleShow();\n          }\n        });\n      }\n    } else {\n      updateData();\n      setSuccess(true);\n      handleShow(); //RedirectionInfo();\n    }\n  };\n\n  const RedirectionInfo = () => {\n    let url = \"/admin/mon-compte/infos-personnelles\";\n    history.push(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: restaurantOwner !== undefined && restaurantOwner.restaurant !== undefined ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"dirigeant_container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dirigeant_label\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          className: \"dirigeant_input\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          label: \"Nom du dirigeant\",\n          name: \"nom\",\n          value: preAffichage(state.nom),\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errors\",\n          children: errors.nom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dirigeant_label\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          className: \"dirigeant_input\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          label: \"Pr\\xE9nom du dirigeant\",\n          name: \"prenom\",\n          value: preAffichage(state.prenom),\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errors\",\n          children: errors.prenom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dirigeant_label\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          className: \"dirigeant_input\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          label: \"Adresse\",\n          name: \"adresse\",\n          value: preAffichage(state.adresse),\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errors\",\n          children: errors.adresse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dirigeant_adresse\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dirigeant_label\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            className: \"dirigeant_input\",\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            label: \"Code postal\",\n            name: \"code_postal\",\n            value: preAffichage(state.code_postal),\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errors\",\n            children: errors.code_postal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dirigeant_label\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            className: \"dirigeant_input\",\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            label: \"Ville\",\n            name: \"ville\",\n            value: preAffichage(state.ville),\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errors\",\n            children: errors.ville\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dirigeant_label\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          className: \"dirigeant_input\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          label: \"Adresse mail\",\n          name: \"adresse_mail\",\n          value: state.adresse_mail,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errors\",\n          children: errors.adresse_mail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dirigeant_adresse\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dirigeant_label\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            className: \"dirigeant_input\",\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            label: \"Poste occup\\xE9\",\n            value: preAffichage(state.poste_occupe),\n            name: \"poste_occupe\",\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errors\",\n            children: errors.poste_occupe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dirigeant_label\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            className: \"dirigeant_input\",\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            label: \"Num\\xE9ro de t\\xE9l\\xE9phone\",\n            name: \"num_tel\",\n            value: state.num_tel,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errors\",\n            children: errors.num_tel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dirigeant_button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"registre_button\",\n          type: \"submit\",\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ModalBootsrap, {\n        handleClose: handleClose,\n        show: show,\n        title: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [success ? \"Envoyé\" : \"Oups\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `${success ? \" fas fa-thumbs-up\" : \" fas fa-thumbs-down\"}`,\n            style: {\n              color: \"#4caf50\",\n              marginLeft: \"1rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true),\n        children: success ? \"Enregistrement avec succès.\" : \"Une erreur s'est produite, veuillez réessayer.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(UpdateFormDirigeant, \"yCx8Zgtdz5yy4q/6Kvuc1ktiUH0=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = UpdateFormDirigeant;\nexport default UpdateFormDirigeant;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateFormDirigeant\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/dirigeant/UpdateFormDirigeant.js"],"names":["React","useHistory","useState","useEffect","useForm","sendrequest","ModalBootsrap","TextField","axios","URL","UpdateFormDirigeant","restaurantOwner","history","show","setShow","success","setSuccess","dirigeant","setDirigeant","initState","setInitState","infoRestaurant","setInfoRestaurant","infoEntreprise","setInfoEntreprise","handleClose","handleShow","token","window","$token_access","email","$email_dirigeant","password_dir","$password_dirigeant","updateData","res","put","id","nom","state","prénom","prenom","adresse_mail","phone_number","num_tel","company_position","poste_occupe","restaurant","name","address","adresse","postal_code","code_postal","city","ville","company","capital","SIRET_number","retirement_fund_name","retirement_fund_address","retirement_fund_city","retirement_fund_postal_code","user","password","headers","then","result","console","log","estValide","fieldValues","validator","test","setErrors","Object","values","every","el","handleInputChange","errors","reinitialiserState","preAffichage","contenant","undefined","handleSubmit","e","preventDefault","response","RedirectionInfo","url","push","color","marginLeft"],"mappings":"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","sourcesContent":["import React, {useHistory} from \"react-router-dom\";\nimport  { useState, useEffect } from \"react\";\nimport useForm from \"../../../hooks/useForm\";\n import {sendrequest} from \"../../../middlewares/request\";\nimport ModalBootsrap from \"../../modal/Modal\";\nimport {TextField} from '@material-ui/core';\nimport axios from \"axios\";\nimport {URL} from \"../../../middlewares/request\";\n\nimport './dirigeant.css'\n\n\nconst UpdateFormDirigeant = ({restaurantOwner}) => {\n\n    const history = useHistory();\n\n    const [show, setShow] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [dirigeant, setDirigeant] = useState([]);\n    const [initState, setInitState] = useState([]);\n    const [infoRestaurant, setInfoRestaurant] = useState([]);\n    const [infoEntreprise, setInfoEntreprise] = useState([]);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    const token = window.$token_access;\n    const email = window.$email_dirigeant;\n    const password_dir = window.$password_dirigeant;\n\n\n    const updateData = async () => {\n       const res = await axios.put(\n                URL + \"accounts/restaurantowner/\" + restaurantOwner.id + \"/\"\n            ,{\n                nom: state.nom,\n                prénom: state.prenom,\n                email: state.adresse_mail,\n                phone_number: state.num_tel,\n                company_position: state.poste_occupe,\n                restaurant: {\n                    name: restaurantOwner.restaurant.name,\n                    address: state.adresse,\n                    postal_code: state.code_postal,\n                    city: state.ville,\n                    phone_number: restaurantOwner.restaurant.phone_number\n                },\n                company: {\n                    name: restaurantOwner.company.name,\n                    address: restaurantOwner.company.address,\n                    postal_code: restaurantOwner.company.postal_code,\n                    city: restaurantOwner.company.city,\n                    capital: restaurantOwner.company.capital,\n                    SIRET_number: restaurantOwner.company.SIRET_number,\n                    retirement_fund_name: restaurantOwner.company.retirement_fund_name,\n                    retirement_fund_address: restaurantOwner.company.retirement_fund_address,\n                    retirement_fund_city: restaurantOwner.company.retirement_fund_city,\n                    retirement_fund_postal_code: restaurantOwner.company.retirement_fund_postal_code\n                },\n                user: {\n                    //username: state.adresse_mail,\n                    email: state.adresse_mail,\n                    password: password_dir,\n                }\n            },\n            {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            }\n      ).then((result) => {console.log(result)});\n\n\n    }\n\n\n\n      const estValide = (fieldValues = state) => {\n      const validator = {};\n      if (\"nom\" in fieldValues)\n        validator.nom = state.nom ? null : \"Le champ nom est obligatore\";\n\n      if (\"prenom\" in fieldValues)\n        validator.prenom = state.prenom ? null : \"Le champ prénom est obligatore\";\n\n      if (\"adresse_mail\" in fieldValues)\n        validator.adresse_mail = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(adresse_mail)\n          ? null\n          : \"Le mail n'est pas valide\";\n\n      if (\"adresse\" in fieldValues)\n        validator.adresse = state.adresse ? null : \"Le champ adresse est obligatore\";\n\n      if (\"ville\" in fieldValues)\n        validator.ville = state.ville ? null : \"Le champ ville est obligatore\";\n\n      if (\"poste_occupe\" in fieldValues)\n        validator.poste_occupe = state.poste_occupe ? null : \"Le champ poste occupée est obligatore\";\n\n      if (\"code_postal\" in fieldValues)\n      validator.code_postal = /^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/.test(\n        code_postal\n      )\n        ? null\n        : \"Le code postal n'est pas valide\";\n\n\n      if (\"num_tel\" in fieldValues)\n        validator.num_tel = /^(0|\\+33)[1-9]([-. ]?[0-9]{2}){4}$/.test(\n          num_tel\n        )\n          ? null\n          : \"Le numéro de téléphone n'est pas valide\";\n\n\n      setErrors({ ...validator });\n\n      // retourne boolean si et seulement si on passe un parametre pour la fonction\n      if (fieldValues === state) {\n        return Object.values(validator).every((el) => !el);\n      }\n    };\n\n\n     const {\n      state,\n      handleInputChange,\n      errors,\n      setErrors,\n      reinitialiserState,\n    } = useForm(initState, estValide);\n\n    const { nom, prenom, adresse_mail,num_tel,code_postal, ville, adresse,poste_occupe } = state\n\n    //state.prenom = restaurantOwner.prénom\n    //Fonction permettant d'afficher les données récupérés\n    //contenant => input modifiable\n    //contenue => donnée à afficher\n\n    const preAffichage = (contenant) => {\n        if(contenant === undefined){\n            state.nom = restaurantOwner.nom\n            state.prenom = restaurantOwner.prénom\n            state.adresse_mail = restaurantOwner.email\n            state.num_tel = restaurantOwner.phone_number\n            state.adresse = restaurantOwner.restaurant.address\n            state.code_postal = restaurantOwner.restaurant.postal_code\n            state.ville = restaurantOwner.restaurant.city\n            state.poste_occupe = restaurantOwner.company_position\n\n            console.log(contenant)\n            return state.nom + \"\"\n        }\n        return contenant + \"\"\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // Cas où le dirigeant entre ces informations pour la 1ere fois\n\n        if(restaurantOwner === []){\n            //reinitialiserState();\n            if (estValide()) {\n                sendrequest(\"post\", \"main/dirigeant/\", null, null, state)\n                .then((response) => {\n                    if (response !== false && estValide()) {\n                        setSuccess(true);\n                        handleShow();\n                    } else {\n                        setSuccess(false);\n                        handleShow();\n                    }\n                })\n            }\n        }\n        else{\n            updateData();\n            setSuccess(true);\n            handleShow();\n            //RedirectionInfo();\n        }\n\n    };\n\n\n        const RedirectionInfo = () => {\n            let url = \"/admin/mon-compte/infos-personnelles\";\n            history.push(url);\n        }\n        return (\n        <>\n                {restaurantOwner !== undefined && restaurantOwner.restaurant !== undefined ?\n                    <form className=\"dirigeant_container\" onSubmit={handleSubmit}>\n\n                        <div className='dirigeant_label'>\n\n                          <TextField\n                          fullWidth\n                          className='dirigeant_input'\n                          id=\"outlined-basic\"\n                          variant=\"outlined\"\n                          label =\"Nom du dirigeant\"\n                          name='nom'\n                          value={preAffichage(state.nom)}\n                          onChange={handleInputChange}\n                          required/>\n                          <div className='errors'>{errors.nom}</div>\n                        </div>\n\n\n                        <div className='dirigeant_label'>\n\n                          <TextField\n                            fullWidth\n                            className='dirigeant_input'\n                            id=\"outlined-basic\"\n                            variant=\"outlined\"\n                            label =\"Prénom du dirigeant\"\n                            name='prenom'\n                            value={preAffichage(state.prenom)}\n                            onChange={handleInputChange}\n                            required/>\n                            <div className='errors'>{errors.prenom}</div>\n                        </div>\n\n                        <div className='dirigeant_label'>\n                            <TextField\n                            fullWidth\n                            className='dirigeant_input'\n                            id=\"outlined-basic\"\n                            variant=\"outlined\"\n                            label =\"Adresse\"\n                            name='adresse'\n                            value={preAffichage(state.adresse)}\n                            onChange={handleInputChange}\n                            required/>\n                           <div className='errors'>{errors.adresse}</div>\n                        </div>\n                        <div className='dirigeant_adresse'>\n                            <div className='dirigeant_label'>\n                                <TextField\n                                fullWidth\n                                className='dirigeant_input'\n                                id=\"outlined-basic\"\n                                variant=\"outlined\"\n                                label =\"Code postal\"\n                                name='code_postal'\n                                value={preAffichage(state.code_postal)}\n                                onChange={handleInputChange}\n                                required/>\n                                <div className='errors'>{errors.code_postal}</div>\n                            </div>\n\n\n                            <div className='dirigeant_label'>\n                                <TextField\n                                fullWidth\n                                className='dirigeant_input'\n                                id=\"outlined-basic\"\n                                variant=\"outlined\"\n                                label =\"Ville\"\n                                name='ville'\n                                value={preAffichage(state.ville)}\n                                onChange={handleInputChange}\n                                required/>\n                                <div className='errors'>{errors.ville}</div>\n                            </div>\n                          </div>\n                        <div className='dirigeant_label'>\n                            <TextField\n                            fullWidth\n                            className='dirigeant_input'\n                            id=\"outlined-basic\"\n                            variant=\"outlined\"\n                            label =\"Adresse mail\"\n                            name='adresse_mail'\n                            value={state.adresse_mail}\n                            onChange={handleInputChange}\n                            required/>\n                            <div className='errors'>{errors.adresse_mail}</div>\n                        </div>\n\n                        <div className='dirigeant_adresse'>\n                            <div className='dirigeant_label'>\n                                <TextField\n                                fullWidth\n                                className='dirigeant_input'\n                                id=\"outlined-basic\"\n                                variant=\"outlined\"\n                                label =\"Poste occupé\"\n                                value={preAffichage(state.poste_occupe)}\n                                name='poste_occupe'\n                                onChange={handleInputChange}\n                                required/>\n                                <div className='errors'>{errors.poste_occupe}</div>\n                            </div>\n\n                            <div className='dirigeant_label'>\n                                <TextField\n                                fullWidth\n                                className='dirigeant_input'\n                                id=\"outlined-basic\"\n                                variant=\"outlined\"\n                                label =\"Numéro de téléphone\"\n                                name='num_tel'\n                                value={state.num_tel}\n                                onChange={handleInputChange}\n                                required/>\n                                <div className='errors'>{errors.num_tel}</div>\n                            </div>\n                          </div>\n                        <div className='dirigeant_button'>\n                            <button className=\"registre_button\" type=\"submit\">Enregistrer</button>\n                            {/*<button className=\"edit_button\" type=\"submit\">Modifier</button>*/}\n                        </div>\n\n                        <ModalBootsrap\n                            handleClose={handleClose}\n                            show={show}\n                            title={\n                                <>\n                                    {success ? \"Envoyé\" : \"Oups\"}\n                                    <i\n                                        className={\n                                            `${success ? \" fas fa-thumbs-up\" : \" fas fa-thumbs-down\"}`}\n                                        style={{color: \"#4caf50\", marginLeft: \"1rem\"}}></i>\n                                </>\n                            }>\n                            {success ? \"Enregistrement avec succès.\" : \"Une erreur s'est produite, veuillez réessayer.\"}\n                        </ModalBootsrap>\n                    </form>\n                    :null}\n            </>\n\n        );\n\n}\nexport default UpdateFormDirigeant;\n"]},"metadata":{},"sourceType":"module"}