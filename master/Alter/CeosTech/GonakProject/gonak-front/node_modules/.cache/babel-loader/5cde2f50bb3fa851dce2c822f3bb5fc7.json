{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/gestionProduits/MyModal/AddProductModal.js\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { URL } from \"../../../../middlewares/request\";\nimport { Button, IconButton, TextField } from \"@material-ui/core\";\nimport Modal from \"../MyModal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ({\n  categorieId,\n  show,\n  setShow,\n  productToUpdate = null\n}) {\n  const initialProduct = {\n    nom: productToUpdate ? productToUpdate.nom : \"\",\n    prix: productToUpdate ? productToUpdate.prix : \"\",\n    image: productToUpdate ? productToUpdate.image : null,\n    description: productToUpdate ? productToUpdate.description : \"\",\n    categorie: categorieId,\n    disponibilite: productToUpdate ? productToUpdate.disponibilte : \"\"\n  };\n  const [product, setProduct] = useState(initialProduct);\n  const [imageImported, setImageImported] = useState(false);\n\n  const handleClose = e => {\n    if (e.target.classList.contains(\"myModal__backdrop\") || e.target.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.parentNode.classList.contains(\"myModal__modal__close-btn\")) {\n      setShow(false);\n    }\n  };\n\n  const addProduct = async e => {\n    e.preventDefault();\n    console.log(`form_data`, product);\n    let form_data = new FormData();\n    form_data.append(\"nom\", product.nom);\n    form_data.append(\"description\", product.description);\n    if (product.image !== null) form_data.append(\"image\", product.image, product.image.name);\n    form_data.append(\"prix\", product.prix);\n    form_data.append(\"categorie\", product.categorie);\n    form_data.append(\"dsponibilite\", product.disponibilite);\n    console.log(`from_data`, form_data);\n    let url = URL + \"letexan/produit/\";\n    axios.post(url, form_data, {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      console.log(`added susscessfully`);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const updateProduct = e => {\n    e.preventDefault();\n    console.log(`form_data`, product);\n    let form_data = new FormData();\n    form_data.append(\"nom\", product.nom);\n    form_data.append(\"description\", product.description);\n    if (product.image !== null) form_data.append(\"image\", product.image, product.image.name);\n    form_data.append(\"prix\", product.prix);\n    form_data.append(\"categorie\", product.categorie);\n    form_data.append(\"dsponibilite\", product.disponibilite);\n    let url = URL + \"letexan/produit/\" + productToUpdate.id + \"/\";\n    axios.put(url, form_data, {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      console.log(`updated susscessfully`);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const inputChange = e => {\n    setProduct({ ...product,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    showModal: show,\n    setShowModal: setShow,\n    handleClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ajouter un Produit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"input-nom\",\n        label: \"nom\",\n        variant: \"outlined\",\n        name: \"nom\",\n        value: product.nom,\n        onChange: inputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"input-description\",\n        label: \"description\",\n        variant: \"outlined\",\n        name: \"description\",\n        value: product.description,\n        onChange: inputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"input-prix\",\n        label: \"prix\",\n        variant: \"outlined\",\n        name: \"prix\",\n        value: product.prix,\n        onChange: inputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"image\",\n        type: \"file\",\n        variant: \"outlined\",\n        name: \"image\",\n        onChange: event => {\n          const fileUploaded = event.target.files[0];\n          setProduct({ ...product,\n            image: fileUploaded\n          });\n          setImageImported(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: productToUpdate ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: updateProduct,\n        children: \"Modifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addProduct,\n        children: \" Ajouter \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n;","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/gestionProduits/MyModal/AddProductModal.js"],"names":["axios","useState","URL","Button","IconButton","TextField","Modal","categorieId","show","setShow","productToUpdate","initialProduct","nom","prix","image","description","categorie","disponibilite","disponibilte","product","setProduct","imageImported","setImageImported","handleClose","e","target","classList","contains","parentNode","addProduct","preventDefault","console","log","form_data","FormData","append","name","url","post","headers","then","res","catch","error","updateProduct","id","put","inputChange","value","event","fileUploaded","files"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,iCAApB;AAEA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,mBAA9C;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,eAAe,UAAU;AACrBC,EAAAA,WADqB;AAErBC,EAAAA,IAFqB;AAGrBC,EAAAA,OAHqB;AAIrBC,EAAAA,eAAe,GAAG;AAJG,CAAV,EAKZ;AACC,QAAMC,cAAc,GAAG;AACnBC,IAAAA,GAAG,EAAEF,eAAe,GAAGA,eAAe,CAACE,GAAnB,GAAyB,EAD1B;AAEnBC,IAAAA,IAAI,EAAEH,eAAe,GAAGA,eAAe,CAACG,IAAnB,GAA0B,EAF5B;AAGnBC,IAAAA,KAAK,EAAEJ,eAAe,GAAGA,eAAe,CAACI,KAAnB,GAA2B,IAH9B;AAInBC,IAAAA,WAAW,EAAEL,eAAe,GAAGA,eAAe,CAACK,WAAnB,GAAiC,EAJ1C;AAKnBC,IAAAA,SAAS,EAAET,WALQ;AAMnBU,IAAAA,aAAa,EAAEP,eAAe,GAAGA,eAAe,CAACQ,YAAnB,GAAkC;AAN7C,GAAvB;AAQA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAACU,cAAD,CAAtC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,KAAD,CAAlD;;AACA,QAAMsB,WAAW,GAAIC,CAAD,IAAO;AACvB,QACIA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,mBAA5B,KACAH,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,2BAA5B,CADA,IAEAH,CAAC,CAACC,MAAF,CAASG,UAAT,CAAoBF,SAApB,CAA8BC,QAA9B,CAAuC,2BAAvC,CAFA,IAGAH,CAAC,CAACC,MAAF,CAASG,UAAT,CAAoBA,UAApB,CAA+BF,SAA/B,CAAyCC,QAAzC,CACI,2BADJ,CAJJ,EAOE;AACElB,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GAXD;;AAaA,QAAMoB,UAAU,GAAG,MAAOL,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACM,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAb,EAAyBb,OAAzB;AAEA,QAAIc,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,KAAjB,EAAwBhB,OAAO,CAACP,GAAhC;AACAqB,IAAAA,SAAS,CAACE,MAAV,CAAiB,aAAjB,EAAgChB,OAAO,CAACJ,WAAxC;AACA,QAAII,OAAO,CAACL,KAAR,KAAkB,IAAtB,EACImB,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BhB,OAAO,CAACL,KAAlC,EAAyCK,OAAO,CAACL,KAAR,CAAcsB,IAAvD;AACJH,IAAAA,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyBhB,OAAO,CAACN,IAAjC;AACAoB,IAAAA,SAAS,CAACE,MAAV,CAAiB,WAAjB,EAA8BhB,OAAO,CAACH,SAAtC;AACAiB,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiChB,OAAO,CAACF,aAAzC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAb,EAAyBC,SAAzB;AACA,QAAII,GAAG,GAAGnC,GAAG,GAAG,kBAAhB;AACAF,IAAAA,KAAK,CACAsC,IADL,CACUD,GADV,EACeJ,SADf,EAC0B;AAClBM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADS,KAD1B,EAMKC,IANL,CAMWC,GAAD,IAAS;AACXV,MAAAA,OAAO,CAACC,GAAR,CAAa,qBAAb;AACH,KARL,EASKU,KATL,CASYC,KAAD,IAAW;AACdZ,MAAAA,OAAO,CAACY,KAAR,CAAcA,KAAd;AACH,KAXL;AAYH,GA1BD;;AA2BA,QAAMC,aAAa,GAAIpB,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACM,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAb,EAAyBb,OAAzB;AAEA,QAAIc,SAAS,GAAG,IAAIC,QAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,KAAjB,EAAwBhB,OAAO,CAACP,GAAhC;AACAqB,IAAAA,SAAS,CAACE,MAAV,CAAiB,aAAjB,EAAgChB,OAAO,CAACJ,WAAxC;AACA,QAAII,OAAO,CAACL,KAAR,KAAkB,IAAtB,EACImB,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0BhB,OAAO,CAACL,KAAlC,EAAyCK,OAAO,CAACL,KAAR,CAAcsB,IAAvD;AACJH,IAAAA,SAAS,CAACE,MAAV,CAAiB,MAAjB,EAAyBhB,OAAO,CAACN,IAAjC;AACAoB,IAAAA,SAAS,CAACE,MAAV,CAAiB,WAAjB,EAA8BhB,OAAO,CAACH,SAAtC;AACAiB,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiChB,OAAO,CAACF,aAAzC;AACA,QAAIoB,GAAG,GAAGnC,GAAG,GAAG,kBAAN,GAA2BQ,eAAe,CAACmC,EAA3C,GAAgD,GAA1D;AACA7C,IAAAA,KAAK,CACA8C,GADL,CACST,GADT,EACcJ,SADd,EACyB;AACjBM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADQ,KADzB,EAMKC,IANL,CAMWC,GAAD,IAAS;AACXV,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAb;AACH,KARL,EASKU,KATL,CASYC,KAAD,IAAW;AACdZ,MAAAA,OAAO,CAACY,KAAR,CAAcA,KAAd;AACH,KAXL;AAYH,GAzBD;;AA0BA,QAAMI,WAAW,GAAIvB,CAAD,IAAO;AACvBJ,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAc,OAACK,CAAC,CAACC,MAAF,CAASW,IAAV,GAAiBZ,CAAC,CAACC,MAAF,CAASuB;AAAxC,KAAD,CAAV;AACH,GAFD;;AAGA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAExC,IAAlB;AAAwB,IAAA,YAAY,EAAEC,OAAtC;AAA+C,IAAA,WAAW,EAAEc,WAA5D;AAAA,4BACI,QAAC,KAAD,CAAO,MAAP;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,WADP;AAEI,QAAA,KAAK,EAAC,KAFV;AAGI,QAAA,OAAO,EAAC,UAHZ;AAII,QAAA,IAAI,EAAC,KAJT;AAKI,QAAA,KAAK,EAAEJ,OAAO,CAACP,GALnB;AAMI,QAAA,QAAQ,EAAEmC;AANd;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,mBADP;AAEI,QAAA,KAAK,EAAC,aAFV;AAGI,QAAA,OAAO,EAAC,UAHZ;AAII,QAAA,IAAI,EAAC,aAJT;AAKI,QAAA,KAAK,EAAE5B,OAAO,CAACJ,WALnB;AAMI,QAAA,QAAQ,EAAEgC;AANd;AAAA;AAAA;AAAA;AAAA,cATJ,eAkBI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,YADP;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,OAAO,EAAC,UAHZ;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAE5B,OAAO,CAACN,IALnB;AAMI,QAAA,QAAQ,EAAEkC;AANd;AAAA;AAAA;AAAA;AAAA,cAlBJ,eA2BI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,OADP;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,OAAO,EAAC,UAHZ;AAII,QAAA,IAAI,EAAC,OAJT;AAKI,QAAA,QAAQ,EAAGE,KAAD,IAAW;AACjB,gBAAMC,YAAY,GAAGD,KAAK,CAACxB,MAAN,CAAa0B,KAAb,CAAmB,CAAnB,CAArB;AACA/B,UAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcL,YAAAA,KAAK,EAAEoC;AAArB,WAAD,CAAV;AACA5B,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;AATL;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eA6CI,QAAC,KAAD,CAAO,MAAP;AAAA,gBACKZ,eAAe,gBACZ,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEkC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,gBAGZ,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEf,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,YA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuDH;AAAA","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { URL } from \"../../../../middlewares/request\"\n\nimport { Button, IconButton, TextField } from \"@material-ui/core\";\n\nimport Modal from \"../MyModal/Modal\";\n\nexport default function ({\n    categorieId,\n    show,\n    setShow,\n    productToUpdate = null\n}) {\n    const initialProduct = {\n        nom: productToUpdate ? productToUpdate.nom : \"\",\n        prix: productToUpdate ? productToUpdate.prix : \"\",\n        image: productToUpdate ? productToUpdate.image : null,\n        description: productToUpdate ? productToUpdate.description : \"\",\n        categorie: categorieId,\n        disponibilite: productToUpdate ? productToUpdate.disponibilte : \"\"\n    }\n    const [product, setProduct] = useState(initialProduct)\n    const [imageImported, setImageImported] = useState(false);\n    const handleClose = (e) => {\n        if (\n            e.target.classList.contains(\"myModal__backdrop\") ||\n            e.target.classList.contains(\"myModal__modal__close-btn\") ||\n            e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") ||\n            e.target.parentNode.parentNode.classList.contains(\n                \"myModal__modal__close-btn\"\n            )\n        ) {\n            setShow(false);\n        }\n    };\n\n    const addProduct = async (e) => {\n        e.preventDefault();\n        console.log(`form_data`, product)\n\n        let form_data = new FormData();\n        form_data.append(\"nom\", product.nom);\n        form_data.append(\"description\", product.description);\n        if (product.image !== null)\n            form_data.append(\"image\", product.image, product.image.name);\n        form_data.append(\"prix\", product.prix);\n        form_data.append(\"categorie\", product.categorie);\n        form_data.append(\"dsponibilite\", product.disponibilite);\n        console.log(`from_data`, form_data)\n        let url = URL + \"letexan/produit/\";\n        axios\n            .post(url, form_data, {\n                headers: {\n                    \"content-type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => {\n                console.log(`added susscessfully`)\n            })\n            .catch((error) => {\n                console.error(error)\n            });\n    }\n    const updateProduct = (e) => {\n        e.preventDefault();\n        console.log(`form_data`, product)\n\n        let form_data = new FormData();\n        form_data.append(\"nom\", product.nom);\n        form_data.append(\"description\", product.description);\n        if (product.image !== null)\n            form_data.append(\"image\", product.image, product.image.name);\n        form_data.append(\"prix\", product.prix);\n        form_data.append(\"categorie\", product.categorie);\n        form_data.append(\"dsponibilite\", product.disponibilite);\n        let url = URL + \"letexan/produit/\" + productToUpdate.id + \"/\";\n        axios\n            .put(url, form_data, {\n                headers: {\n                    \"content-type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => {\n                console.log(`updated susscessfully`)\n            })\n            .catch((error) => {\n                console.error(error)\n            });\n    }\n    const inputChange = (e) => {\n        setProduct({ ...product, [e.target.name]: e.target.value })\n    }\n    return (\n        <Modal showModal={show} setShowModal={setShow} handleClose={handleClose}>\n            <Modal.Header>\n                <h1>Ajouter un Produit</h1>\n            </Modal.Header>\n            <Modal.Body>\n                <TextField\n                    id=\"input-nom\"\n                    label=\"nom\"\n                    variant=\"outlined\"\n                    name=\"nom\"\n                    value={product.nom}\n                    onChange={inputChange}\n                />\n                <TextField\n                    id=\"input-description\"\n                    label=\"description\"\n                    variant=\"outlined\"\n                    name=\"description\"\n                    value={product.description}\n                    onChange={inputChange}\n\n                />\n                <TextField\n                    id=\"input-prix\"\n                    label=\"prix\"\n                    variant=\"outlined\"\n                    name=\"prix\"\n                    value={product.prix}\n                    onChange={inputChange}\n\n                />\n                <TextField\n                    id=\"image\"\n                    type=\"file\"\n                    variant=\"outlined\"\n                    name=\"image\"\n                    onChange={(event) => {\n                        const fileUploaded = event.target.files[0]\n                        setProduct({ ...product, image: fileUploaded });\n                        setImageImported(true);\n                    }\n                    }\n                />\n\n            </Modal.Body>\n            <Modal.Footer>\n                {productToUpdate ?\n                    <Button onClick={updateProduct}>Modifier</Button>\n                    :\n                    <Button onClick={addProduct}> Ajouter </Button>\n                }\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}