{"ast":null,"code":"import _regeneratorRuntime from\"/home/christopher/Documents/Alter/GonakProject/gonak-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/christopher/Documents/Alter/GonakProject/gonak-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";export var URL=\"https://gonak.herokuapp.com/\";//export const URL = \"http://localhost:8000/\";\n/**\n * global function to send http requests using fetch api\n * @param {method : GET, POST, DELETE, ... http method}\n * @param {url : string the url}\n * @param {data: formular to be sent to backend, can be null :> GET, DELETE}\n * @param {token: the token provided when the user logged in or subscribed, use AsyncStorage to retrieve with key: 'token'}\n */export function sendrequest(_x,_x2,_x3,_x4){return _sendrequest.apply(this,arguments);}function _sendrequest(){_sendrequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(method,url,data,token){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios({method:method,url:URL+url,data:data?JSON.stringify(data):\"\",headers:{\"Content-Type\":\"application/json\"}}).then(function(response){// Success ðŸŽ‰\n//console.log('response ' + response.data)\nreturn response;}).catch(function(error){// Error ðŸ˜¨\nif(error.response){/*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */ //console.log(error.response.data);\n//console.log(error.response.status);\n//console.log(error.response.headers);\n}else if(error.request){/*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */ //console.log(error.request);\n}else{// Something happened in setting up the request and triggered an Error\n//console.log('Error', error.message);\n}//console.log(error.config);\n//console.log(error.config);\nreturn false;});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return _sendrequest.apply(this,arguments);}","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/middlewares/request.js"],"names":["axios","URL","sendrequest","method","url","data","token","JSON","stringify","headers","then","response","catch","error","request"],"mappings":"+VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,GAAG,CAAG,8BAAZ,CACP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,eAAsBC,CAAAA,WAAtB,4D,6FAAO,iBACLC,MADK,CAELC,GAFK,CAGLC,IAHK,CAILC,KAJK,wIAMQN,CAAAA,KAAK,CAAC,CACjBG,MAAM,CAAEA,MADS,CAEjBC,GAAG,CAAEH,GAAG,CAAGG,GAFM,CAGjBC,IAAI,CAAEA,IAAI,CAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAH,CAA0B,EAHnB,CAIjBI,OAAO,CAAE,CACP,eAAgB,kBADT,CAJQ,CAAD,CAAL,CAQVC,IARU,CAQL,SAACC,QAAD,CAAc,CAClB;AACA;AACA,MAAOA,CAAAA,QAAP,CACD,CAZU,EAaVC,KAbU,CAaJ,SAACC,KAAD,CAAW,CAChB;AACA,GAAIA,KAAK,CAACF,QAAV,CAAoB,CAClB;AACR;AACA;AACA,WAJ0B,CAKlB;AACA;AACA;AACD,CARD,IAQO,IAAIE,KAAK,CAACC,OAAV,CAAmB,CACxB;AACR;AACA;AACA;AACA,WALgC,CAMxB;AACD,CAPM,IAOA,CACL;AACA;AACD,CACD;AAAA;AACA,MAAO,MAAP,CACD,CApCU,CANR,6G","sourcesContent":["import axios from \"axios\";\n\nexport const URL = \"https://gonak.herokuapp.com/\";\n//export const URL = \"http://localhost:8000/\";\n\n/**\n * global function to send http requests using fetch api\n * @param {method : GET, POST, DELETE, ... http method}\n * @param {url : string the url}\n * @param {data: formular to be sent to backend, can be null :> GET, DELETE}\n * @param {token: the token provided when the user logged in or subscribed, use AsyncStorage to retrieve with key: 'token'}\n */\nexport async function sendrequest(\n  method,\n  url,\n  data,\n  token\n) {\n  return await axios({\n    method: method,\n    url: URL + url,\n    data: data ? JSON.stringify(data) : \"\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => {\n      // Success ðŸŽ‰\n      //console.log('response ' + response.data)\n      return response;\n    })\n    .catch((error) => {\n      // Error ðŸ˜¨\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        //console.log(error.request);\n      } else {\n        // Something happened in setting up the request and triggered an Error\n        //console.log('Error', error.message);\n      }\n      //console.log(error.config);\n      return false;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}