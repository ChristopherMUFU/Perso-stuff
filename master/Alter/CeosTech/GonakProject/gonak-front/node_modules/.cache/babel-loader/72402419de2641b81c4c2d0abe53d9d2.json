{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/caisse/UpdateFormCaisse.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport useForm from \"../../../hooks/useForm\";\nimport { sendrequest, URL } from \"../../../middlewares/request\";\nimport ModalBootsrap from \"../modal/Modal\";\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport './caisse.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateFormCaisse = ({\n  restaurantOwner\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [initState, setInitState] = useState([]);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const token = window.$token_access;\n  const email = window.$email_dirigeant;\n  const password_dir = window.$password_dirigeant;\n\n  const updateData = async () => {\n    const res = await axios.put(URL + \"accounts/restaurantowner/\" + restaurantOwner.id + \"/\", {\n      nom: restaurantOwner.nom,\n      prénom: restaurantOwner.prénom,\n      email: restaurantOwner.email,\n      phone_number: restaurantOwner.phone_number,\n      company_position: restaurantOwner.company_position,\n      restaurant: {\n        name: restaurantOwner.restaurant.name,\n        address: restaurantOwner.restaurant.address,\n        postal_code: restaurantOwner.restaurant.postal_code,\n        city: restaurantOwner.restaurant.city,\n        phone_number: restaurantOwner.restaurant.phone_number\n      },\n      company: {\n        name: restaurantOwner.company.name,\n        address: restaurantOwner.company.address,\n        postal_code: restaurantOwner.company.postal_code,\n        city: restaurantOwner.company.city,\n        capital: restaurantOwner.company.capital,\n        SIRET_number: restaurantOwner.company.SIRET_number,\n        retirement_fund_name: state.denomination,\n        retirement_fund_address: state.adresse,\n        retirement_fund_city: state.ville,\n        retirement_fund_postal_code: state.code_postal\n      },\n      user: {\n        //username: state.adresse_mail,\n        email: state.adresse_mail,\n        password: password_dir\n      }\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(result => {\n      console.log(result.data);\n    }); //console.log(res.data);\n  };\n\n  const estValide = (fieldValues = state) => {\n    const validator = {};\n    if (\"denomination\" in fieldValues) validator.denomination = state.denomination ? null : \"Le champ dénomination est obligatore\";\n    if (\"adresse\" in fieldValues) validator.denomination = state.denomination ? null : \"Le champ adresse est obligatore\";\n    if (\"ville\" in fieldValues) validator.ville = state.ville ? null : \"Le champ ville est obligatore\";\n    if (\"code_postal\" in fieldValues) validator.code_postal = /^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/.test(code_postal) ? null : \"Le code postal n'est pas valide\";\n    setErrors({ ...validator\n    }); // retourne boolean si et seulement si on passe un parametre pour la fonction\n\n    if (fieldValues === state) {\n      return Object.values(validator).every(el => !el);\n    }\n  };\n\n  const {\n    state,\n    handleInputChange,\n    errors,\n    setErrors,\n    reinitialiserState\n  } = useForm(initState, estValide);\n  const {\n    denomination,\n    code_postal,\n    ville,\n    adresse\n  } = state; //state.prenom = restaurantOwner.prénom\n  //Fonction permettant d'afficher les données récupérés\n  //contenant => input modifiable\n  //contenue => donnée à afficher\n\n  const preAffichage = contenant => {\n    if (contenant === undefined) {\n      state.denomination = restaurantOwner.company.retirement_fund_name;\n      state.code_postal = restaurantOwner.company.retirement_fund_postal_code;\n      state.ville = restaurantOwner.company.retirement_fund_city;\n      state.adresse = restaurantOwner.company.retirement_fund_address;\n      console.log(contenant);\n      return state.denomination + \"\";\n    }\n\n    return contenant + \"\";\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (restaurantOwner === []) {\n      //reinitialiserState();\n      if (estValide()) {\n        sendrequest(\"put\", \"main/caisse/\", null, null, state).then(response => {\n          if (response !== false && estValide()) {\n            setSuccess(true);\n            handleShow();\n          } else {\n            setSuccess(false);\n            handleShow();\n          }\n        });\n      }\n    } else {\n      updateData();\n      setSuccess(true);\n      handleShow();\n    }\n  };\n\n  const history = useHistory();\n\n  const RedirectionInfo = () => {\n    let url = \"/admin/mon-compte/infos-personnelles\";\n    history.push(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: restaurantOwner !== undefined && restaurantOwner.restaurant !== undefined ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \" caisse_container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caisse_div\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"caisse_input\",\n          fullWidth: true,\n          label: \"D\\xE9nomination social\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          name: \"denomination\",\n          value: preAffichage(state.denomination),\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errors\",\n          children: errors.denomination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caisse_div\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"caisse_input\",\n          fullWidth: true,\n          label: \"Adresse\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          name: \"adresse\",\n          value: preAffichage(state.adresse),\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errors\",\n          children: errors.adresse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adresse_caisse\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caisse_div\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"caisse_input\",\n            fullWidth: true,\n            label: \"Code Postal\",\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            name: \"code_postal\",\n            value: preAffichage(state.code_postal),\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errors\",\n            children: errors.code_postal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caisse_div\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"caisse_input\",\n            fullWidth: true,\n            label: \"Ville\",\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            name: \"ville\",\n            value: preAffichage(state.ville),\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errors\",\n            children: errors.ville\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caisse_button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"registre_caisse_button\",\n          type: \"submit\",\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(ModalBootsrap, {\n        handleClose: handleClose,\n        show: show,\n        title: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [success ? \"Envoyé\" : \"Oups\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `${success ? \" fas fa-thumbs-up\" : \" fas fa-thumbs-down\"}`,\n            style: {\n              color: \"#4caf50\",\n              marginLeft: \"1rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true),\n        children: success ? \"Enregistrement avec succès.\" : \"Une erreur s'est produite, veuillez réessayer.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 30\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(UpdateFormCaisse, \"gCaayhie23w9/b0HeX2aY/UkWng=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = UpdateFormCaisse;\nexport default UpdateFormCaisse;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateFormCaisse\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/caisse/UpdateFormCaisse.js"],"names":["useHistory","useState","useForm","sendrequest","URL","ModalBootsrap","TextField","Button","axios","UpdateFormCaisse","restaurantOwner","show","setShow","success","setSuccess","initState","setInitState","handleClose","handleShow","token","window","$token_access","email","$email_dirigeant","password_dir","$password_dirigeant","updateData","res","put","id","nom","prénom","phone_number","company_position","restaurant","name","address","postal_code","city","company","capital","SIRET_number","retirement_fund_name","state","denomination","retirement_fund_address","adresse","retirement_fund_city","ville","retirement_fund_postal_code","code_postal","user","adresse_mail","password","headers","then","result","console","log","data","estValide","fieldValues","validator","test","setErrors","Object","values","every","el","handleInputChange","errors","reinitialiserState","preAffichage","contenant","undefined","handleSubmit","e","preventDefault","response","history","RedirectionInfo","url","push","color","marginLeft"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router-dom\";\nimport  { useState } from \"react\";\nimport useForm from \"../../../hooks/useForm\";\n import {sendrequest, URL} from \"../../../middlewares/request\"\nimport ModalBootsrap from \"../modal/Modal\";\nimport {TextField} from '@material-ui/core';\nimport {Button} from '@material-ui/core';\n\nimport './caisse.css'\nimport axios from \"axios\";\n\n\n\nconst UpdateFormCaisse = ({restaurantOwner}) =>{\n\n\n    const [show, setShow] = useState(false);\n    const [success, setSuccess] = useState(false);\n    const [initState, setInitState] = useState([]);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n     const token = window.$token_access;\n    const email = window.$email_dirigeant;\n    const password_dir = window.$password_dirigeant;\n\n    const updateData = async () => {\n       const res = await axios.put(\n                URL + \"accounts/restaurantowner/\" + restaurantOwner.id + \"/\"\n            ,{\n                nom: restaurantOwner.nom,\n                prénom: restaurantOwner.prénom,\n                email: restaurantOwner.email,\n                phone_number: restaurantOwner.phone_number,\n                company_position: restaurantOwner.company_position,\n                restaurant: {\n                    name: restaurantOwner.restaurant.name,\n                    address: restaurantOwner.restaurant.address,\n                    postal_code: restaurantOwner.restaurant.postal_code,\n                    city: restaurantOwner.restaurant.city,\n                    phone_number: restaurantOwner.restaurant.phone_number\n                },\n                company: {\n                    name: restaurantOwner.company.name,\n                    address: restaurantOwner.company.address,\n                    postal_code: restaurantOwner.company.postal_code,\n                    city: restaurantOwner.company.city,\n                    capital: restaurantOwner.company.capital,\n                    SIRET_number: restaurantOwner.company.SIRET_number,\n\n                    retirement_fund_name: state.denomination,\n                    retirement_fund_address: state.adresse,\n                    retirement_fund_city: state.ville,\n                    retirement_fund_postal_code: state.code_postal\n                },\n                user: {\n                    //username: state.adresse_mail,\n                    email: state.adresse_mail,\n                    password: password_dir\n                }\n            },\n            {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            }\n      ).then((result) => {console.log(result.data)});\n\n      //console.log(res.data);\n\n    }\n\n      const estValide = (fieldValues = state) => {\n      const validator = {};\n\n      if (\"denomination\" in fieldValues)\n        validator.denomination = state.denomination ? null : \"Le champ dénomination est obligatore\";\n\n      if (\"adresse\" in fieldValues)\n        validator.denomination = state.denomination ? null : \"Le champ adresse est obligatore\";\n\n      if (\"ville\" in fieldValues)\n        validator.ville = state.ville ? null : \"Le champ ville est obligatore\";\n\n      if (\"code_postal\" in fieldValues)\n      validator.code_postal = /^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/.test(\n        code_postal\n      )\n        ? null\n        : \"Le code postal n'est pas valide\";\n\n\n      setErrors({ ...validator });\n\n      // retourne boolean si et seulement si on passe un parametre pour la fonction\n      if (fieldValues === state) {\n        return Object.values(validator).every((el) => !el);\n      }\n    };\n\n      const {\n      state,\n      handleInputChange,\n      errors,\n      setErrors,\n      reinitialiserState,\n    } = useForm(initState, estValide);\n\n    const {denomination, code_postal, ville, adresse } = state\n\n\n    //state.prenom = restaurantOwner.prénom\n    //Fonction permettant d'afficher les données récupérés\n    //contenant => input modifiable\n    //contenue => donnée à afficher\n    const preAffichage = (contenant) => {\n        if(contenant === undefined){\n            state.denomination = restaurantOwner.company.retirement_fund_name\n            state.code_postal = restaurantOwner.company.retirement_fund_postal_code\n            state.ville = restaurantOwner.company.retirement_fund_city\n            state.adresse = restaurantOwner.company.retirement_fund_address\n\n\n            console.log(contenant)\n            return state.denomination + \"\"\n        }\n        return contenant + \"\"\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n\n        if(restaurantOwner === []){\n            //reinitialiserState();\n            if (estValide()) {\n                sendrequest(\"put\", \"main/caisse/\", null, null, state)\n                .then((response) => {\n                    if (response !== false && estValide()) {\n                        setSuccess(true);\n                        handleShow();\n                    } else {\n                        setSuccess(false);\n                        handleShow();\n                    }\n                })\n            }\n        }\n        else{\n            updateData();\n            setSuccess(true);\n            handleShow();\n        }\n    };\n\n\n    const history = useHistory();\n\n    const RedirectionInfo = () =>{\n      let url = \"/admin/mon-compte/infos-personnelles\";\n      history.push(url);\n    }\n\n  return (\n\n        <>\n                    {restaurantOwner !== undefined && restaurantOwner.restaurant !== undefined ?\n                             <form className=' caisse_container' onSubmit={handleSubmit}>\n                                 <div className=\"caisse_div\">\n                                    <TextField\n                                    className='caisse_input'\n                                    fullWidth\n                                    label =\"Dénomination social\"\n                                    id=\"outlined-basic\"\n                                    variant=\"outlined\"\n                                    name=\"denomination\"\n                                    value={preAffichage(state.denomination)}\n                                    onChange={handleInputChange}\n                                    required/>\n                                    <div className=\"errors\">{errors.denomination}</div>\n                                 </div>\n                                 <div className=\"caisse_div\">\n                                     <TextField\n                                     className='caisse_input'\n                                     fullWidth\n                                     label =\"Adresse\"\n                                     id=\"outlined-basic\"\n                                     variant=\"outlined\"\n                                      name=\"adresse\"\n                                      value={preAffichage(state.adresse)}\n                                      onChange={handleInputChange}\n                                      required/>\n                                     <div className=\"errors\">{errors.adresse}</div>\n                                </div>\n                                <div className='adresse_caisse'>\n                                 <div className=\"caisse_div\">\n                                     <TextField\n                                     className='caisse_input'\n                                     fullWidth\n                                     label =\"Code Postal\"\n                                     id=\"outlined-basic\"\n                                     variant=\"outlined\"\n                                     name=\"code_postal\"\n                                     value={preAffichage(state.code_postal)}\n                                     onChange={handleInputChange}\n                                     required/>\n                                     <div className=\"errors\">{errors.code_postal}</div>\n                                </div>\n                                 <div className=\"caisse_div\">\n                                     <TextField\n                                     className='caisse_input'\n                                     fullWidth\n                                     label =\"Ville\"\n                                     id=\"outlined-basic\"\n                                     variant=\"outlined\"\n                                     name=\"ville\"\n                                     value={preAffichage(state.ville)}\n                                     onChange={handleInputChange}\n                                     required/>\n                                     <div className=\"errors\">{errors.ville}</div>\n                                </div>\n                                </div>\n                                <div className='caisse_button'>\n                                    <button className=\"registre_caisse_button\" type=\"submit\">Enregistrer</button>\n\n                                </div>\n\n                                <ModalBootsrap\n                                    handleClose={handleClose}\n                                    show={show}\n                                    title={\n                                        <>\n                                            {success ? \"Envoyé\" : \"Oups\"}\n                                            <i\n                                                className={\n                                                    `${success ? \" fas fa-thumbs-up\" : \" fas fa-thumbs-down\"}`}\n                                                style={{color: \"#4caf50\", marginLeft: \"1rem\"}}></i>\n                                        </>\n                                    }>\n                                    {success ? \"Enregistrement avec succès.\" : \"Une erreur s'est produite, veuillez réessayer.\"}\n                                </ModalBootsrap>\n\n                             </form>\n                        :null}\n                </>\n\n\n\n);\n\n}\nexport default UpdateFormCaisse;\n"]},"metadata":{},"sourceType":"module"}