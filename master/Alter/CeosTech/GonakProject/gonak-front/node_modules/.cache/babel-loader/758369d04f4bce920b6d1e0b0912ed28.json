{"ast":null,"code":"import axios from \"axios\";\nexport const URL = \"https://markus-app.herokuapp.com/\";\n/**\n * global function to send http requests using fetch api\n * @param {method : GET, POST, DELETE, ... http method}\n * @param {url : string the url}\n * @param {data: formular to be sent to backend, can be null :> GET, DELETE}\n * @param {token: the token provided when the user logged in or subscribed, use AsyncStorage to retrieve with key: 'token'}\n */\n\nexport async function sendrequest(method, url, data, token) {\n  return await axios({\n    method: method,\n    url: URL + url,\n    data: data ? JSON.stringify(data) : \"\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    // Success ðŸŽ‰\n    //console.log('response ' + response.data)\n    return response;\n  }).catch(error => {\n    // Error ðŸ˜¨\n    if (error.response) {\n      /*\n       * The request was made and the server responded with a\n       * status code that falls out of the range of 2xx\n       */\n      //console.log(error.response.data);\n      //console.log(error.response.status);\n      //console.log(error.response.headers);\n    } else if (error.request) {\n      /*\n       * The request was made but no response was received, `error.request`\n       * is an instance of XMLHttpRequest in the browser and an instance\n       * of http.ClientRequest in Node.js\n       */\n      //console.log(error.request);\n    } else {// Something happened in setting up the request and triggered an Error\n      //console.log('Error', error.message);\n    } //console.log(error.config);\n\n\n    return false;\n  });\n}","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/middlewares/request.js"],"names":["axios","URL","sendrequest","method","url","data","token","JSON","stringify","headers","then","response","catch","error","request"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,GAAG,GAAG,mCAAZ;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,WAAf,CACLC,MADK,EAELC,GAFK,EAGLC,IAHK,EAILC,KAJK,EAKL;AACA,SAAO,MAAMN,KAAK,CAAC;AACjBG,IAAAA,MAAM,EAAEA,MADS;AAEjBC,IAAAA,GAAG,EAAEH,GAAG,GAAGG,GAFM;AAGjBC,IAAAA,IAAI,EAAEA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAH,GAA0B,EAHnB;AAIjBI,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAJQ,GAAD,CAAL,CAQVC,IARU,CAQJC,QAAD,IAAc;AAClB;AACA;AACA,WAAOA,QAAP;AACD,GAZU,EAaVC,KAbU,CAaHC,KAAD,IAAW;AAChB;AACA,QAAIA,KAAK,CAACF,QAAV,EAAoB;AAClB;AACR;AACA;AACA;AACQ;AACA;AACA;AACD,KARD,MAQO,IAAIE,KAAK,CAACC,OAAV,EAAmB;AACxB;AACR;AACA;AACA;AACA;AACQ;AACD,KAPM,MAOA,CACL;AACA;AACD,KApBe,CAqBhB;;;AACA,WAAO,KAAP;AACD,GApCU,CAAb;AAqCD","sourcesContent":["import axios from \"axios\";\n\nexport const URL = \"https://markus-app.herokuapp.com/\";\n\n/**\n * global function to send http requests using fetch api\n * @param {method : GET, POST, DELETE, ... http method}\n * @param {url : string the url}\n * @param {data: formular to be sent to backend, can be null :> GET, DELETE}\n * @param {token: the token provided when the user logged in or subscribed, use AsyncStorage to retrieve with key: 'token'}\n */\nexport async function sendrequest(\n  method,\n  url,\n  data,\n  token\n) {\n  return await axios({\n    method: method,\n    url: URL + url,\n    data: data ? JSON.stringify(data) : \"\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => {\n      // Success ðŸŽ‰\n      //console.log('response ' + response.data)\n      return response;\n    })\n    .catch((error) => {\n      // Error ðŸ˜¨\n      if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n      } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        //console.log(error.request);\n      } else {\n        // Something happened in setting up the request and triggered an Error\n        //console.log('Error', error.message);\n      }\n      //console.log(error.config);\n      return false;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}