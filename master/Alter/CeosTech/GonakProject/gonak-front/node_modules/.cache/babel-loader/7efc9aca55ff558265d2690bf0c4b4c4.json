{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/caisse/EditFormCaisse.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport useForm from \"../../../hooks/useForm\";\nimport { sendrequest, URL } from \"../../../middlewares/request\";\nimport ModalBootsrap from \"../../modal/Modal\";\nimport { TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport \"./caisse.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initial = {\n  denomination: \"\",\n  adresse: \"\",\n  code_postal: \"\",\n  ville: \"\"\n};\n\nconst EditFormCaisse = ({\n  restaurantOwner\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const token = window.$token_access;\n  const email = window.$email_dirigeant;\n\n  const updateData = async () => {\n    const res = await axios.put(URL + \"accounts/restaurantowner/\" + restaurantOwner.id + \"/\", {\n      nom: state.nom,\n      prenom: state.prenom,\n      email: state.adresse_mail,\n      phone_number: state.num_tel,\n      company_position: state.poste_occupe,\n      restaurant: {\n        name: restaurantOwner.restaurant.name,\n        address: state.adresse,\n        postal_code: state.code_postal,\n        city: state.ville,\n        phone_number: restaurantOwner.restaurant.phone_number\n      },\n      company: {\n        name: restaurantOwner.company.name,\n        address: restaurantOwner.company.address,\n        postal_code: restaurantOwner.company.postal_code,\n        city: restaurantOwner.company.city,\n        capital: restaurantOwner.company.capital,\n        SIRET_number: restaurantOwner.company.SIRET_number,\n        retirement_fund_name: restaurantOwner.company.retirement_fund_name,\n        retirement_fund_address: restaurantOwner.company.retirement_fund_address,\n        retirement_fund_city: restaurantOwner.company.retirement_fund_city,\n        retirement_fund_postal_code: restaurantOwner.company.retirement_fund_postal_code\n      },\n      user: {\n        //username: state.adresse_mail,\n        email: state.adresse_mail,\n        password: restaurantOwner.user.password\n      }\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(result => {\n      console.log(result.data);\n    }); //console.log(res.data);\n  };\n\n  const estValide = (fieldValues = state) => {\n    const validator = {};\n    if (\"denomination\" in fieldValues) validator.denomination = state.denomination ? null : \"Le champ dÃ©nomination est obligatore\";\n    if (\"adresse\" in fieldValues) validator.denomination = state.denomination ? null : \"Le champ adresse est obligatore\";\n    if (\"ville\" in fieldValues) validator.ville = state.ville ? null : \"Le champ ville est obligatore\";\n    if (\"code_postal\" in fieldValues) validator.code_postal = /^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/.test(code_postal) ? null : \"Le code postal n'est pas valide\";\n    setErrors({ ...validator\n    }); // retourne boolean si et seulement si on passe un parametre pour la fonction\n\n    if (fieldValues === state) {\n      return Object.values(validator).every(el => !el);\n    }\n  };\n\n  const {\n    state,\n    handleInputChange,\n    errors,\n    setErrors,\n    reinitialiserState\n  } = useForm(initial, estValide);\n  const {\n    denomination,\n    code_postal,\n    ville,\n    adresse\n  } = state;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    /* sendrequest(\"post\", \"main/caisse/\", null, null, state)\n            .then((response) => {\n                if (response !== false && estValide()) {\n                    setSuccess(true);\n                    handleShow();\n                } else {\n                    setSuccess(false);\n                    handleShow();\n                }\n            })*/\n\n    reinitialiserState();\n\n    if (estValide()) {}\n\n    if (restaurantOwner === []) {\n      //reinitialiserState();\n      if (estValide()) {\n        sendrequest(\"post\", \"main/caisse/\", null, null, state).then(response => {\n          if (response !== false && estValide()) {\n            setSuccess(true);\n            handleShow();\n          } else {\n            setSuccess(false);\n            handleShow();\n          }\n        });\n      }\n    } else {\n      updateData();\n      RedirectionInfo();\n    }\n  };\n\n  const history = useHistory();\n\n  const RedirectionInfo = () => {\n    let url = \"/admin/mon-compte/infos-personnelles\";\n    history.push(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"caisse\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"caisse_title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Caisse de retraite compl\\xE9mentaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" caisse_container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caisse_div\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"caisse_input\",\n          fullWidth: true,\n          label: \"D\\xE9nomination social\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          name: \"denomination\",\n          value: denomination,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errors\",\n          children: errors.denomination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caisse_div\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"caisse_input\",\n          fullWidth: true,\n          label: \"Adresse\",\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          name: \"adresse\",\n          value: adresse,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errors\",\n          children: errors.adresse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adresse_caisse\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caisse_div\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"caisse_input\",\n            fullWidth: true,\n            label: \"Code Postal\",\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            name: \"code_postal\",\n            value: code_postal,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errors\",\n            children: errors.code_postal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caisse_div\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"caisse_input\",\n            fullWidth: true,\n            label: \"Ville\",\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            name: \"ville\",\n            value: ville,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errors\",\n            children: errors.ville\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caisse_button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"registre_caisse_button\",\n          type: \"submit\",\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBootsrap, {\n        handleClose: handleClose,\n        show: show,\n        title: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [success ? \"EnvoyÃ©\" : \"Oups\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `${success ? \" fas fa-thumbs-up\" : \" fas fa-thumbs-down\"}`,\n            style: {\n              color: \"#4caf50\",\n              marginLeft: \"1rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        children: success ? \"Enregistrement avec succÃ¨s.\" : \"Une erreur s'est produite, veuillez rÃ©essayer.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditFormCaisse, \"On6KjvdxOCHRqQduZT/5mzGTcQM=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = EditFormCaisse;\nexport default EditFormCaisse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditFormCaisse\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/caisse/EditFormCaisse.js"],"names":["useHistory","useState","useForm","sendrequest","URL","ModalBootsrap","TextField","Button","axios","initial","denomination","adresse","code_postal","ville","EditFormCaisse","restaurantOwner","show","setShow","success","setSuccess","handleClose","handleShow","token","window","$token_access","email","$email_dirigeant","updateData","res","put","id","nom","state","prenom","adresse_mail","phone_number","num_tel","company_position","poste_occupe","restaurant","name","address","postal_code","city","company","capital","SIRET_number","retirement_fund_name","retirement_fund_address","retirement_fund_city","retirement_fund_postal_code","user","password","headers","Authorization","then","result","console","log","data","estValide","fieldValues","validator","test","setErrors","Object","values","every","el","handleInputChange","errors","reinitialiserState","handleSubmit","e","preventDefault","response","RedirectionInfo","history","url","push","color","marginLeft"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport useForm from \"../../../hooks/useForm\";\nimport { sendrequest, URL } from \"../../../middlewares/request\";\nimport ModalBootsrap from \"../../modal/Modal\";\nimport { TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\n\nimport \"./caisse.css\";\nimport axios from \"axios\";\n\nconst initial = {\n  denomination: \"\",\n  adresse: \"\",\n  code_postal: \"\",\n  ville: \"\",\n};\n\nconst EditFormCaisse = ({ restaurantOwner }) => {\n  const [show, setShow] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const token = window.$token_access;\n  const email = window.$email_dirigeant;\n\n  const updateData = async () => {\n    const res = await axios\n      .put(\n        URL + \"accounts/restaurantowner/\" + restaurantOwner.id + \"/\",\n        {\n          nom: state.nom,\n          prenom: state.prenom,\n          email: state.adresse_mail,\n          phone_number: state.num_tel,\n          company_position: state.poste_occupe,\n          restaurant: {\n            name: restaurantOwner.restaurant.name,\n            address: state.adresse,\n            postal_code: state.code_postal,\n            city: state.ville,\n            phone_number: restaurantOwner.restaurant.phone_number,\n          },\n          company: {\n            name: restaurantOwner.company.name,\n            address: restaurantOwner.company.address,\n            postal_code: restaurantOwner.company.postal_code,\n            city: restaurantOwner.company.city,\n            capital: restaurantOwner.company.capital,\n            SIRET_number: restaurantOwner.company.SIRET_number,\n            retirement_fund_name: restaurantOwner.company.retirement_fund_name,\n            retirement_fund_address:\n              restaurantOwner.company.retirement_fund_address,\n            retirement_fund_city: restaurantOwner.company.retirement_fund_city,\n            retirement_fund_postal_code:\n              restaurantOwner.company.retirement_fund_postal_code,\n          },\n          user: {\n            //username: state.adresse_mail,\n            email: state.adresse_mail,\n            password: restaurantOwner.user.password,\n          },\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((result) => {\n        console.log(result.data);\n      });\n\n    //console.log(res.data);\n  };\n\n  const estValide = (fieldValues = state) => {\n    const validator = {};\n\n    if (\"denomination\" in fieldValues)\n      validator.denomination = state.denomination\n        ? null\n        : \"Le champ dÃ©nomination est obligatore\";\n\n    if (\"adresse\" in fieldValues)\n      validator.denomination = state.denomination\n        ? null\n        : \"Le champ adresse est obligatore\";\n\n    if (\"ville\" in fieldValues)\n      validator.ville = state.ville ? null : \"Le champ ville est obligatore\";\n\n    if (\"code_postal\" in fieldValues)\n      validator.code_postal = /^(([0-8][0-9])|(9[0-5]))[0-9]{3}$/.test(\n        code_postal\n      )\n        ? null\n        : \"Le code postal n'est pas valide\";\n\n    setErrors({ ...validator });\n\n    // retourne boolean si et seulement si on passe un parametre pour la fonction\n    if (fieldValues === state) {\n      return Object.values(validator).every((el) => !el);\n    }\n  };\n\n  const { state, handleInputChange, errors, setErrors, reinitialiserState } =\n    useForm(initial, estValide);\n\n  const { denomination, code_postal, ville, adresse } = state;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    /* sendrequest(\"post\", \"main/caisse/\", null, null, state)\n            .then((response) => {\n                if (response !== false && estValide()) {\n                    setSuccess(true);\n                    handleShow();\n                } else {\n                    setSuccess(false);\n                    handleShow();\n                }\n            })*/\n\n    reinitialiserState();\n    if (estValide()) {\n    }\n\n    if (restaurantOwner === []) {\n      //reinitialiserState();\n      if (estValide()) {\n        sendrequest(\"post\", \"main/caisse/\", null, null, state).then(\n          (response) => {\n            if (response !== false && estValide()) {\n              setSuccess(true);\n              handleShow();\n            } else {\n              setSuccess(false);\n              handleShow();\n            }\n          }\n        );\n      }\n    } else {\n      updateData();\n      RedirectionInfo();\n    }\n  };\n\n  const history = useHistory();\n\n  const RedirectionInfo = () => {\n    let url = \"/admin/mon-compte/infos-personnelles\";\n    history.push(url);\n  };\n  return (\n    <div className=\"caisse\">\n      <div className=\"caisse_title\">\n        <h2>Caisse de retraite complÃ©mentaire</h2>\n      </div>\n\n      <div className=\" caisse_container\" onSubmit={handleSubmit}>\n        <div className=\"caisse_div\">\n          <TextField\n            className=\"caisse_input\"\n            fullWidth\n            label=\"DÃ©nomination social\"\n            id=\"outlined-basic\"\n            variant=\"outlined\"\n            name=\"denomination\"\n            value={denomination}\n            onChange={handleInputChange}\n            required\n          />\n          <div className=\"errors\">{errors.denomination}</div>\n        </div>\n        <div className=\"caisse_div\">\n          <TextField\n            className=\"caisse_input\"\n            fullWidth\n            label=\"Adresse\"\n            id=\"outlined-basic\"\n            variant=\"outlined\"\n            name=\"adresse\"\n            value={adresse}\n            onChange={handleInputChange}\n            required\n          />\n          <div className=\"errors\">{errors.adresse}</div>\n        </div>\n        <div className=\"adresse_caisse\">\n          <div className=\"caisse_div\">\n            <TextField\n              className=\"caisse_input\"\n              fullWidth\n              label=\"Code Postal\"\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              name=\"code_postal\"\n              value={code_postal}\n              onChange={handleInputChange}\n              required\n            />\n            <div className=\"errors\">{errors.code_postal}</div>\n          </div>\n          <div className=\"caisse_div\">\n            <TextField\n              className=\"caisse_input\"\n              fullWidth\n              label=\"Ville\"\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              name=\"ville\"\n              value={ville}\n              onChange={handleInputChange}\n              required\n            />\n            <div className=\"errors\">{errors.ville}</div>\n          </div>\n        </div>\n        <div className=\"caisse_button\">\n          <button className=\"registre_caisse_button\" type=\"submit\">\n            Enregistrer\n          </button>\n        </div>\n\n        <ModalBootsrap\n          handleClose={handleClose}\n          show={show}\n          title={\n            <>\n              {success ? \"EnvoyÃ©\" : \"Oups\"}\n              <i\n                className={`${\n                  success ? \" fas fa-thumbs-up\" : \" fas fa-thumbs-down\"\n                }`}\n                style={{ color: \"#4caf50\", marginLeft: \"1rem\" }}\n              ></i>\n            </>\n          }\n        >\n          {success\n            ? \"Enregistrement avec succÃ¨s.\"\n            : \"Une erreur s'est produite, veuillez rÃ©essayer.\"}\n        </ModalBootsrap>\n      </div>\n    </div>\n  );\n};\nexport default EditFormCaisse;\n"]},"metadata":{},"sourceType":"module"}