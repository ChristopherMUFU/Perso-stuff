{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/gestionProduits/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select'; //import Carte from \"./Carte\";\n\nimport CartePage from './CartePage'; //import MenuType from \"../../Menu/MenuType\";\n//import Card from \"./Carte/card\";\n\nimport AddProductModal from \"./MyModal/AddProductModal\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { IconButton, Button } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { URL, sendrequest } from \"../../../middlewares/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GestionProduits() {\n  _s();\n\n  const [active, setActive] = useState(1);\n  const [activeCarte, setActiveCarte] = useState(true);\n  const [datas, setDatas] = useState([]);\n  const [sideDishes, setSideDishes] = useState([]);\n  const [menuCategories, setMenuCategories] = useState([]);\n  const [dishesDisplayed, setDishesDisplay] = useState(false); // Booleans that will only allow the component to render when the requests have returned the datas\n\n  const [isDataLoading, setDataLoading] = useState(false);\n  const [isCategoryLoading, setCategoryLoading] = useState(false);\n  const [sideDishesLoading, setSideDishesLoading] = useState(false);\n  const [showProductModal, setShowProductModal] = useState(false);\n  const [show, setShow] = useState(false);\n  const [produit, setProduit] = useState([]); // activeCarte && (window.document.body.style.overflow = \"hidden\")\n\n  activeCarte ? window.document.body.style.overflow = \"hidden\" : window.document.body.style.overflow = \"auto\";\n\n  const fetchData = async () => {\n    //sendrequest(\"get\", \"letexan/produit/?accompagnement=true\", setSideDishes, setSideDishesLoading);\n    axios.get(URL + \"gonak/produit/\").then(res => {\n      setDatas(res.data);\n      console.log(res.data);\n    });\n    axios.get(URL + \"gonak/categorie/\").then(res => {\n      setMenuCategories(res.data);\n      console.log(res.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    if (produit !== []) {\n      console.log(produit);\n      setShow(true);\n    }\n  }, []);\n\n  const openModal = data => {\n    setProduit(data);\n  }; //Function that will check through if id of the selected menu item matches the one of 'Menu'. If so then we will want to display all of the datas, not just a selection.\n\n\n  const isMenu = () => {\n    for (var i = 0; i < menuCategories.length; i++) {\n      if (menuCategories[i].id === active && menuCategories[i].nom === \"Menus du Midi\") {\n        return datas;\n      }\n    }\n  };\n\n  const selectDishesPerCategory = () => {\n    var menuDishes = isMenu();\n\n    if (menuDishes !== undefined) {} else {\n      const selectedDishes = datas // We filter the data :\n      .filter(data => {\n        console.log(data); // By only selecting the data that belongs to a category (categories is an array in which are the different categories to which a dish belongs) that matches the one selected by the user (var active)\n\n        return data.categorie === active;\n        /*for (var i = 0; i < data.categories.length; i++) {\n          if (data.categories[i] === active) return true;\n          return false;\n        }*/\n      }) //Once filtered, we can go through the selection to display them\n      .map(data => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100%\",\n              marginRight: \"-30%\"\n            },\n            onClick: () => openModal(data),\n            children: /*#__PURE__*/_jsxDEV(CartePage, {\n              idMenuPage: data.categorie,\n              produit: data,\n              show: show,\n              setShow: setShow\n            }, data.categorie, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddProductModal, {\n            productToUpdate: produit,\n            categorieId: active,\n            show: show,\n            setShow: setShow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      });\n      return selectedDishes;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commander__\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Categorie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: active,\n          onChange: e => {\n            setActive(e.target.value);\n            setActiveCarte(false);\n            setDishesDisplay(false);\n          },\n          children: menuCategories.map(categorie => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: categorie.id,\n              children: categorie.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowProductModal(true),\n        children: \" Ajouter Produit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddProductModal, {\n        categorieId: active,\n        show: showProductModal,\n        setShow: setShowProductModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commander__container\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commander__container__cards\",\n          children: selectDishesPerCategory()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GestionProduits, \"0pHBAOopvbP54//s50CMhE6578o=\");\n\n_c = GestionProduits;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"GestionProduits\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/gestionProduits/index.js"],"names":["useEffect","useState","InputLabel","MenuItem","FormHelperText","FormControl","Select","CartePage","AddProductModal","axios","IconButton","Button","DeleteIcon","AddIcon","URL","sendrequest","GestionProduits","active","setActive","activeCarte","setActiveCarte","datas","setDatas","sideDishes","setSideDishes","menuCategories","setMenuCategories","dishesDisplayed","setDishesDisplay","isDataLoading","setDataLoading","isCategoryLoading","setCategoryLoading","sideDishesLoading","setSideDishesLoading","showProductModal","setShowProductModal","show","setShow","produit","setProduit","window","document","body","style","overflow","fetchData","get","then","res","data","console","log","openModal","isMenu","i","length","id","nom","selectDishesPerCategory","menuDishes","undefined","selectedDishes","filter","categorie","map","width","marginRight","textAlign","e","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;AACA;;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,8BAAjC;;;AAGA,eAAe,SAASC,eAAT,GAA4B;AAAA;;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACwB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC0B,eAAD,EAAkBC,gBAAlB,IAAsC3B,QAAQ,CAAC,KAAD,CAApD,CANuC,CAOvC;;AACA,QAAM,CAAC4B,aAAD,EAAgBC,cAAhB,IAAkC7B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC8B,iBAAD,EAAoBC,kBAApB,IAA0C/B,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACgC,iBAAD,EAAoBC,oBAApB,IAA4CjC,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACkC,gBAAD,EAAmBC,mBAAnB,IAA0CnC,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACoC,IAAD,EAAOC,OAAP,IAAkBrC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACsC,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,EAAD,CAAtC,CAbuC,CAcvC;;AACAkB,EAAAA,WAAW,GACJsB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2BC,QAA3B,GAAsC,QADlC,GAEJJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2BC,QAA3B,GAAsC,MAF7C;;AAKA,QAAMC,SAAS,GAAG,YAAY;AAE1B;AACArC,IAAAA,KAAK,CAACsC,GAAN,CAAUjC,GAAG,GAAG,gBAAhB,EAAkCkC,IAAlC,CAAwCC,GAAD,IAAS;AAC9C3B,MAAAA,QAAQ,CAAC2B,GAAG,CAACC,IAAL,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,KAHD;AAKAzC,IAAAA,KAAK,CAACsC,GAAN,CAAUjC,GAAG,GAAG,kBAAhB,EAAoCkC,IAApC,CAA0CC,GAAD,IAAS;AAChDvB,MAAAA,iBAAiB,CAACuB,GAAG,CAACC,IAAL,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,KAHD;AAIH,GAZD;;AAeAlD,EAAAA,SAAS,CAAC,MAAM;AACZ8C,IAAAA,SAAS;;AACT,QAAGP,OAAO,KAAK,EAAf,EAAkB;AACdY,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACAD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMe,SAAS,GAAIH,IAAD,IAAS;AAEvBV,IAAAA,UAAU,CAACU,IAAD,CAAV;AAGH,GALD,CA3CuC,CAkDvC;;;AACA,QAAMI,MAAM,GAAG,MAAM;AACjB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9B,cAAc,CAAC+B,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,UAAI9B,cAAc,CAAC8B,CAAD,CAAd,CAAkBE,EAAlB,KAAyBxC,MAAzB,IAAmCQ,cAAc,CAAC8B,CAAD,CAAd,CAAkBG,GAAlB,KAA0B,eAAjE,EAAkF;AAC9E,eAAOrC,KAAP;AACH;AACJ;AACJ,GAND;;AAQA,QAAMsC,uBAAuB,GAAG,MAAM;AAClC,QAAIC,UAAU,GAAGN,MAAM,EAAvB;;AAEA,QAAIM,UAAU,KAAKC,SAAnB,EAA8B,CAE7B,CAFD,MAEO;AACH,YAAMC,cAAc,GAAGzC,KAAK,CACxB;AADwB,OAEvB0C,MAFkB,CAEVb,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADc,CAEd;;AACA,eACIA,IAAI,CAACc,SAAL,KAAmB/C,MADvB;AAKA;AACpB;AACA;AACA;AACiB,OAdkB,EAenB;AAfmB,OAgBlBgD,GAhBkB,CAgBbf,IAAD,IAAU;AACX,4BACI;AAAA,kCACI;AAAK,YAAA,KAAK,EAAE;AAACgB,cAAAA,KAAK,EAAE,MAAR;AAAgBC,cAAAA,WAAW,EAAE;AAA7B,aAAZ;AAAkD,YAAA,OAAO,EAAE,MAAMd,SAAS,CAACH,IAAD,CAA1E;AAAA,mCACI,QAAC,SAAD;AAEI,cAAA,UAAU,EAAEA,IAAI,CAACc,SAFrB;AAGI,cAAA,OAAO,EAAEd,IAHb;AAII,cAAA,IAAI,EAAEb,IAJV;AAKI,cAAA,OAAO,EAAEC;AALb,eACSY,IAAI,CAACc,SADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAWI,QAAC,eAAD;AACI,YAAA,eAAe,EAAEzB,OADrB;AAEI,YAAA,WAAW,EAAEtB,MAFjB;AAGI,YAAA,IAAI,EAAEoB,IAHV;AAII,YAAA,OAAO,EAAEC;AAJb;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA,wBADJ;AAqBH,OAtCkB,CAAvB;AAuCA,aAAOwB,cAAP;AACH;AACJ,GA/CD;;AAiDA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,SAAS,EAAE,QAAb;AAAuBF,QAAAA,KAAK,EAAE;AAA9B,OAAZ;AAAA,8BAEI,QAAC,WAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AACA,UAAA,OAAO,EAAC,0BADR;AAEA,UAAA,EAAE,EAAC,oBAFH;AAGA,UAAA,OAAO,EAAC,UAHR;AAIA,UAAA,IAAI,EAAC,OAJL;AAKA,UAAA,KAAK,EAAEjD,MALP;AAMA,UAAA,QAAQ,EAAGoD,CAAD,IAAK;AACXnD,YAAAA,SAAS,CAACmD,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAnD,YAAAA,cAAc,CAAC,KAAD,CAAd;AACAQ,YAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,WAVD;AAAA,oBAYKH,cAAc,CAACwC,GAAf,CAAmBD,SAAS,IAAE;AAC3B,gCAAO,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEA,SAAS,CAACP,EAA3B;AAAA,wBAAgCO,SAAS,CAACN;AAA1C;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AAZL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAsBI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMtB,mBAAmB,CAAC,IAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAuBI,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEnB,MAA9B;AAAsC,QAAA,IAAI,EAAEkB,gBAA5C;AAA8D,QAAA,OAAO,EAAEC;AAAvE;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA2BI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BAEQ;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,oBACKuB,uBAAuB;AAD5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH;;GArJuB3C,e;;KAAAA,e;AAqJvB","sourcesContent":["import { useEffect, useState } from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n//import Carte from \"./Carte\";\nimport CartePage from './CartePage';\n//import MenuType from \"../../Menu/MenuType\";\n//import Card from \"./Carte/card\";\nimport AddProductModal from \"./MyModal/AddProductModal\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { IconButton, Button } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { URL, sendrequest } from \"../../../middlewares/request\";\n\n\nexport default function GestionProduits () {\n    const [active, setActive] = useState(1);\n    const [activeCarte, setActiveCarte] = useState(true);\n    const [datas, setDatas] = useState([]);\n    const [sideDishes, setSideDishes] = useState([]);\n    const [menuCategories, setMenuCategories] = useState([]);\n    const [dishesDisplayed, setDishesDisplay] = useState(false);\n    // Booleans that will only allow the component to render when the requests have returned the datas\n    const [isDataLoading, setDataLoading] = useState(false);\n    const [isCategoryLoading, setCategoryLoading] = useState(false);\n    const [sideDishesLoading, setSideDishesLoading] = useState(false);\n    const [showProductModal, setShowProductModal] = useState(false);\n    const [show, setShow] = useState(false);\n    const [produit, setProduit] = useState([]);\n    // activeCarte && (window.document.body.style.overflow = \"hidden\")\n    activeCarte\n        ? (window.document.body.style.overflow = \"hidden\")\n        : (window.document.body.style.overflow = \"auto\");\n\n\n    const fetchData = async () => {\n        \n        //sendrequest(\"get\", \"letexan/produit/?accompagnement=true\", setSideDishes, setSideDishesLoading);\n        axios.get(URL + \"gonak/produit/\").then((res) => {\n          setDatas(res.data);\n          console.log(res.data);\n        });\n\n        axios.get(URL + \"gonak/categorie/\").then((res) => {\n          setMenuCategories(res.data);\n          console.log(res.data);\n        });\n    };\n\n\n    useEffect(() => {\n        fetchData();\n        if(produit !== []){\n            console.log(produit)\n            setShow(true);\n        }\n    }, []);\n\n    const openModal = (data) =>{\n       \n        setProduit(data);\n        \n        \n    }\n\n    //Function that will check through if id of the selected menu item matches the one of 'Menu'. If so then we will want to display all of the datas, not just a selection.\n    const isMenu = () => {\n        for (var i = 0; i < menuCategories.length; i++) {\n            if (menuCategories[i].id === active && menuCategories[i].nom === \"Menus du Midi\") {\n                return datas;\n            }\n        }\n    };\n\n    const selectDishesPerCategory = () => {\n        var menuDishes = isMenu();\n\n        if (menuDishes !== undefined) {\n            \n        } else {\n            const selectedDishes = datas\n                // We filter the data :\n                .filter((data) => {\n                    console.log(data);\n                    // By only selecting the data that belongs to a category (categories is an array in which are the different categories to which a dish belongs) that matches the one selected by the user (var active)\n                    return (\n                        data.categorie === active\n                    )\n\n\n                    /*for (var i = 0; i < data.categories.length; i++) {\n                      if (data.categories[i] === active) return true;\n                      return false;\n                    }*/\n                })\n                //Once filtered, we can go through the selection to display them\n                .map((data) => {\n                    return (\n                        <>\n                            <div style={{width: \"100%\", marginRight: \"-30%\"}} onClick={() => openModal(data)}>\n                                <CartePage \n                                    key={data.categorie} \n                                    idMenuPage={data.categorie}\n                                    produit={data}\n                                    show={show} \n                                    setShow={setShow} \n                                />\n                            </div>\n\n                            <AddProductModal \n                                productToUpdate={produit} \n                                categorieId={active} \n                                show={show} \n                                setShow={setShow} ></AddProductModal>\n\n                            \n                        </>\n                    );\n                });\n            return selectedDishes;\n        }\n    };\n\n    return (\n        <div className='commander__'>\n            <div style={{ textAlign: 'center', width: \"100%\" }}>\n            \n                <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\">Categorie</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={active}\n                    onChange={(e)=>{\n                        setActive(e.target.value);\n                        setActiveCarte(false);\n                        setDishesDisplay(false);\n                    }}\n                    >\n                        {menuCategories.map(categorie=>{\n                            return <MenuItem value={categorie.id}>{categorie.nom}</MenuItem>\n                        })}\n                    </Select>\n                </FormControl>\n            \n                <Button onClick={() => setShowProductModal(true)} > Ajouter Produit</Button>\n                <AddProductModal categorieId={active} show={showProductModal} setShow={setShowProductModal} ></AddProductModal>\n            </div>\n\n            <div className='commander__container'>\n            \n                    <>\n                        <div className='commander__container__cards'>\n                            {selectDishesPerCategory()}\n                        </div>\n\n                       \n                    </>\n      \n            </div>\n        </div>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}