{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/gestionProduits/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Carte from \"./Carte\"; //import MenuType from \"../../Menu/MenuType\";\n\nimport { splitPrix } from \"../../../../utilities\";\nimport Card from \"./Carte/card\";\nimport CartePage from '../../site/Carte/CartePage';\nimport AddProductModal from \"./MyModal/AddProductModal\";\nimport Modal from \"./MyModal/Modal\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { IconButton, Button } from \"@material-ui/core\";\nimport { URL, sendrequest } from \"../../../middlewares/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GestionProduits() {\n  _s();\n\n  const [active, setActive] = useState(1);\n  const [activeCarte, setActiveCarte] = useState(true);\n  const [datas, setDatas] = useState([]);\n  const [sideDishes, setSideDishes] = useState([]);\n  const [menuCategories, setMenuCategories] = useState([]);\n  const [dishesDisplayed, setDishesDisplay] = useState(false); // Booleans that will only allow the component to render when the requests have returned the datas\n\n  const [isDataLoading, setDataLoading] = useState(true);\n  const [isCategoryLoading, setCategoryLoading] = useState(true);\n  const [sideDishesLoading, setSideDishesLoading] = useState(false);\n  const [show, setShow] = useState(false);\n  const [showProductModal, setShowProductModal] = useState(false); // activeCarte && (window.document.body.style.overflow = \"hidden\")\n\n  activeCarte ? window.document.body.style.overflow = \"hidden\" : window.document.body.style.overflow = \"auto\";\n\n  const fetchData = async () => {\n    /*sendrequest(\"get\", \"gonak/produit/\", setDatas, setDataLoading);\n    sendrequest(\n        \"get\",\n        \"gonak/categorie/\",\n        setMenuCategories,\n        setCategoryLoading\n    );*/\n    //sendrequest(\"get\", \"letexan/produit/?accompagnement=true\", setSideDishes, setSideDishesLoading);\n    axios.get(URL + \"gonak/produit/\").then(res => {\n      setDatas(res.data);\n      console.log(res.data);\n    });\n    axios.get(URL + \"gonak/categorie/\").then(res => {\n      setMenuCategories(res.data);\n      console.log(res.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); //Function that will check through if id of the selected menu item matches the one of 'Menu'. If so then we will want to display all of the datas, not just a selection.\n\n  const isMenu = () => {\n    for (var i = 0; i < menuCategories.length; i++) {\n      if (menuCategories[i].id === active && menuCategories[i].nom === \"Menus du Midi\") {\n        return datas;\n      }\n    }\n  };\n\n  const handleClose = e => {\n    if (e.target.classList.contains(\"myModal__backdrop\") || e.target.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.parentNode.classList.contains(\"myModal__modal__close-btn\")) {\n      setShow(false);\n      setShowButton(false);\n    }\n  };\n\n  const deleteProduct = async () => {\n    await axios.delete(URL + \"letexan/produit/\" + id + \"/\").then(() => console.log(`deleted`)).catch(error => console.error(error));\n  };\n\n  const updateProduct = () => {};\n\n  const selectDishesPerCategory = () => {\n    var menuDishes = isMenu(); // !!!!!!!! A VOIR !!!!!!!!!!\n\n    if (menuDishes !== undefined) {} else {\n      const selectedDishes = datas // We filter the data :\n      .filter(data => {\n        // By only selecting the data that belongs to a category (categories is an array in which are the different categories to which a dish belongs) that matches the one selected by the user (var active)\n        return data.categorie === active;\n        /*for (var i = 0; i < data.categories.length; i++) {\n          if (data.categories[i] === active) return true;\n          return false;\n        }*/\n      }) //Once filtered, we can go through the selection to display them\n      .map(data => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CartePage, {\n            idMenuPage: data.id,\n            onClick: () => setShow(true)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            showModal: show,\n            setShowModal: setShow,\n            handleClose: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: data.nom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: data.image,\n                alt: data.nom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: splitPrix(prix)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Modal.Body.Heading, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginRight: \"15px\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  border: \"0.7px solid black\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: deleteProduct,\n                  children: \"supprimer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: setShowProductModal,\n                  children: \"Modifier\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(AddProductModal, {\n                  productToUpdate: data,\n                  categorieId: data.id,\n                  show: showProductModal,\n                  s: true,\n                  etShow: setShowProductModal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      });\n      return selectedDishes;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commander__\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        width: \"100%\"\n      },\n      children: [isCategoryLoading && /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Categorie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: active,\n          onChange: e => {\n            setActive(e.target.value);\n            setActiveCarte(false);\n            setDishesDisplay(false);\n          },\n          children: menuCategories.map(categorie => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: categorie.id,\n              children: categorie.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowProductModal(true),\n        children: \" Ajouter Produit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddProductModal, {\n        categorieId: active,\n        show: showProductModal,\n        setShow: setShowProductModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commander__container\",\n      children: isDataLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commander__container__cards\",\n          children: selectDishesPerCategory()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commander__carte \" + (activeCarte ? \"white\" : null),\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setActiveCarte(() => !activeCarte),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-arrow-\" + (activeCarte ? \"left\" : \"right\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GestionProduits, \"RoxV2WpcbutucQwD80slKHpRkLA=\");\n\n_c = GestionProduits;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"GestionProduits\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/gestionProduits/index.js"],"names":["useEffect","useState","InputLabel","MenuItem","FormHelperText","FormControl","Select","Carte","splitPrix","Card","CartePage","AddProductModal","Modal","axios","IconButton","Button","URL","sendrequest","GestionProduits","active","setActive","activeCarte","setActiveCarte","datas","setDatas","sideDishes","setSideDishes","menuCategories","setMenuCategories","dishesDisplayed","setDishesDisplay","isDataLoading","setDataLoading","isCategoryLoading","setCategoryLoading","sideDishesLoading","setSideDishesLoading","show","setShow","showProductModal","setShowProductModal","window","document","body","style","overflow","fetchData","get","then","res","data","console","log","isMenu","i","length","id","nom","handleClose","e","target","classList","contains","parentNode","setShowButton","deleteProduct","delete","catch","error","updateProduct","selectDishesPerCategory","menuDishes","undefined","selectedDishes","filter","categorie","map","image","prix","description","marginRight","width","display","justifyContent","border","textAlign","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Carte from \"./Carte\";\n//import MenuType from \"../../Menu/MenuType\";\nimport { splitPrix } from \"../../../../utilities\";\nimport Card from \"./Carte/card\";\nimport CartePage from '../../site/Carte/CartePage';\nimport AddProductModal from \"./MyModal/AddProductModal\";\nimport Modal from \"./MyModal/Modal\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { IconButton, Button } from \"@material-ui/core\";\nimport { URL, sendrequest } from \"../../../middlewares/request\";\n\nexport default function GestionProduits () {\n    const [active, setActive] = useState(1);\n    const [activeCarte, setActiveCarte] = useState(true);\n    const [datas, setDatas] = useState([]);\n    const [sideDishes, setSideDishes] = useState([]);\n    const [menuCategories, setMenuCategories] = useState([]);\n    const [dishesDisplayed, setDishesDisplay] = useState(false);\n    // Booleans that will only allow the component to render when the requests have returned the datas\n    const [isDataLoading, setDataLoading] = useState(true);\n    const [isCategoryLoading, setCategoryLoading] = useState(true);\n    const [sideDishesLoading, setSideDishesLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [showProductModal, setShowProductModal] = useState(false);\n    // activeCarte && (window.document.body.style.overflow = \"hidden\")\n    activeCarte\n        ? (window.document.body.style.overflow = \"hidden\")\n        : (window.document.body.style.overflow = \"auto\");\n    const fetchData = async () => {\n        /*sendrequest(\"get\", \"gonak/produit/\", setDatas, setDataLoading);\n        sendrequest(\n            \"get\",\n            \"gonak/categorie/\",\n            setMenuCategories,\n            setCategoryLoading\n        );*/\n        //sendrequest(\"get\", \"letexan/produit/?accompagnement=true\", setSideDishes, setSideDishesLoading);\n        axios.get(URL + \"gonak/produit/\").then((res) => {\n          setDatas(res.data);\n          console.log(res.data);\n        });\n\n        axios.get(URL + \"gonak/categorie/\").then((res) => {\n          setMenuCategories(res.data);\n          console.log(res.data);\n        });\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    //Function that will check through if id of the selected menu item matches the one of 'Menu'. If so then we will want to display all of the datas, not just a selection.\n    const isMenu = () => {\n        for (var i = 0; i < menuCategories.length; i++) {\n            if (menuCategories[i].id === active && menuCategories[i].nom === \"Menus du Midi\") {\n                return datas;\n            }\n        }\n    };\n\n  const handleClose = (e) => {\n\n    if (\n      e.target.classList.contains(\"myModal__backdrop\") ||\n      e.target.classList.contains(\"myModal__modal__close-btn\") ||\n      e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") ||\n      e.target.parentNode.parentNode.classList.contains(\n        \"myModal__modal__close-btn\"\n      )\n    ) {\n      setShow(false);\n      setShowButton(false);\n    }\n  };\n\n  const deleteProduct = async () => {\n    await axios.delete(URL + \"letexan/produit/\" + id + \"/\")\n      .then(() => console.log(`deleted`))\n      .catch(error => console.error(error));\n  }\n  const updateProduct = () => {\n\n  }\n\n    const selectDishesPerCategory = () => {\n        var menuDishes = isMenu();\n        // !!!!!!!! A VOIR !!!!!!!!!!\n        if (menuDishes !== undefined) {\n         \n        } else {\n            const selectedDishes = datas\n                // We filter the data :\n                .filter((data) => {\n                    // By only selecting the data that belongs to a category (categories is an array in which are the different categories to which a dish belongs) that matches the one selected by the user (var active)\n                    return (\n                        data.categorie === active\n                    )\n\n\n                    /*for (var i = 0; i < data.categories.length; i++) {\n                      if (data.categories[i] === active) return true;\n                      return false;\n                    }*/\n                })\n                //Once filtered, we can go through the selection to display them\n                .map((data) => {\n                    return (\n                        <>\n                            <CartePage \n                                key={data.id} \n                                idMenuPage={data.id} \n                                onClick={() => setShow(true)}/>\n\n                            <Modal showModal={show} setShowModal={setShow} handleClose={handleClose}>\n                              <Modal.Header>\n                                <h1>{data.nom}</h1>\n                                <img src={data.image} alt={data.nom} />\n                                <p>{splitPrix(prix)}</p>\n                              </Modal.Header>\n                              <Modal.Body>\n                                <Modal.Body.Heading>Description</Modal.Body.Heading>\n                                <p>{data.description}</p>\n                              </Modal.Body>\n                              <Modal.Footer>\n                                <div\n                                  style={{\n                                    marginRight: \"15px\",\n                                    width: \"100%\",\n                                    display: \"flex\",\n                                    justifyContent: \"space-between\",\n                                    border: \"0.7px solid black\",\n\n                                  }}>\n                                  <Button onClick={deleteProduct}>supprimer</Button>\n                                  <Button onClick={setShowProductModal}>Modifier</Button>\n                                  <AddProductModal \n                                    productToUpdate={data} \n                                    categorieId={data.id} \n                                    show={showProductModal} s\n                                    etShow={setShowProductModal} ></AddProductModal>\n                                </div>\n                              </Modal.Footer>\n                            </Modal>\n                        </>\n                    );\n                });\n            return selectedDishes;\n        }\n    };\n\n    return (\n        <div className='commander__'>\n            <div style={{ textAlign: 'center', width: \"100%\" }}>\n            {isCategoryLoading &&\n                <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\">Categorie</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={active}\n                    onChange={(e)=>{\n                        setActive(e.target.value);\n                        setActiveCarte(false);\n                        setDishesDisplay(false);\n                    }}\n                    >\n                        {menuCategories.map(categorie=>{\n                            return <MenuItem value={categorie.id}>{categorie.nom}</MenuItem>\n                        })}\n                    </Select>\n                </FormControl>\n            }\n                <Button onClick={() => setShowProductModal(true)} > Ajouter Produit</Button>\n                <AddProductModal categorieId={active} show={showProductModal} setShow={setShowProductModal} ></AddProductModal>\n            </div>\n\n            <div className='commander__container'>\n                {isDataLoading && (\n                    <>\n                        <div className='commander__container__cards'>\n                            {selectDishesPerCategory()}\n                        </div>\n\n                        <div\n                            className={\"commander__carte \" + (activeCarte ? \"white\" : null)}>\n                            <IconButton onClick={() => setActiveCarte(() => !activeCarte)}>\n                                <i\n                                    className={\n                                        \"fas fa-arrow-\" + (activeCarte ? \"left\" : \"right\")\n                                    }></i>\n                            </IconButton>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}