{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/commandeEnCours/CommandeEnCours.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ProductList from \"../product/ProductList\";\nimport { URL } from \"../../../middlewares/request\";\nimport { changenouvelleCommandeLength, changeCommandeCoursLength, selectAdmin, changePage } from \"../../../app/Redux-slices/adminSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommandeEnCours = () => {\n  _s();\n\n  const admin = useSelector(selectAdmin);\n  const dispatch = useDispatch();\n  const [commandes, setCommandes] = useState([]);\n  const [nouvellesCommandes, setNouvellesCommandes] = useState([]);\n\n  const fetchCommandes = async () => {\n    const {\n      data\n    } = await axios.get(URL + \"paiement/commande-encours\");\n    setCommandes(data);\n  };\n\n  const fetchNouvellesCommandes = async () => {\n    const {\n      data\n    } = await axios.get(URL + \"paiement/nouvelle-commande\");\n    setNouvellesCommandes(data);\n  };\n\n  useEffect(() => {\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    dispatch(changenouvelleCommandeLength(nouvellesCommandes.length));\n  }, [nouvellesCommandes, dispatch]);\n  useEffect(() => {\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    dispatch(changeCommandeCoursLength(commandes.length));\n  }, [commandes, dispatch]);\n  useEffect(() => {\n    fetchCommandes();\n    let timeoutId;\n\n    function getLatestCommandes() {\n      fetchNouvellesCommandes(); // wait for the response from fetchCommandes , before we recall it (delay of 1minute)\n\n      timeoutId = setTimeout(getLatestCommandes, 1000 * 60);\n    }\n\n    getLatestCommandes();\n    return () => {\n      clearTimeout(timeoutId);\n      setCommandes([]);\n      setNouvellesCommandes([]);\n    };\n  }, []);\n\n  const commande_est_livre = async id => {\n    await axios.put(URL + \"paiement/update-commande\", {\n      id,\n      est_livre: true\n    });\n    fetchCommandes();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commande-en-cours admin__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"2rem\",\n        color: \"#04295D\"\n      },\n      children: commandes.length ? \"Vos Commandes en cours\" : \"Pas de Commandes en cours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      commandes: commandes,\n      action: commande_est_livre,\n      btn: \"Remise au client\",\n      btnImprimer: \"Imprimer facture\",\n      estPrisConnaissance: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommandeEnCours, \"ICYSCYWPsFraBGnxI4IGpIXlJkk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CommandeEnCours;\nexport default CommandeEnCours;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommandeEnCours\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/commandeEnCours/CommandeEnCours.js"],"names":["axios","useEffect","useState","useDispatch","useSelector","ProductList","URL","changenouvelleCommandeLength","changeCommandeCoursLength","selectAdmin","changePage","CommandeEnCours","admin","dispatch","commandes","setCommandes","nouvellesCommandes","setNouvellesCommandes","fetchCommandes","data","get","fetchNouvellesCommandes","length","timeoutId","getLatestCommandes","setTimeout","clearTimeout","commande_est_livre","id","put","est_livre","textAlign","marginBottom","color"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ProductList from \"../product/ProductList\";\nimport {URL} from \"../../../middlewares/request\";\nimport {\n        changenouvelleCommandeLength,\n        changeCommandeCoursLength,\n        selectAdmin,\n        changePage\n    } from \"../../../app/Redux-slices/adminSlice\";\n\nconst CommandeEnCours = () => {\n  const admin = useSelector(selectAdmin);\n  const dispatch = useDispatch();\n  const [commandes, setCommandes] = useState([]);\n  const [nouvellesCommandes, setNouvellesCommandes] = useState([]);\n\n  const fetchCommandes = async () => {\n    const { data } = await axios.get(\n      URL+\"paiement/commande-encours\",\n    );\n    setCommandes(data);\n  };\n\n  const fetchNouvellesCommandes = async () => {\n    const { data } = await axios.get(\n      URL+\"paiement/nouvelle-commande\"\n    );\n    setNouvellesCommandes(data);\n  };\n\n  useEffect(() => {\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    dispatch(changenouvelleCommandeLength(nouvellesCommandes.length));\n  }, [nouvellesCommandes, dispatch]);\n\n  useEffect(() => {\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    dispatch(changeCommandeCoursLength(commandes.length));\n  }, [commandes, dispatch]);\n\n  useEffect(() => {\n    fetchCommandes();\n    let timeoutId;\n    function getLatestCommandes() {\n      fetchNouvellesCommandes();\n\n      // wait for the response from fetchCommandes , before we recall it (delay of 1minute)\n      timeoutId = setTimeout(getLatestCommandes, 1000 * 60);\n    }\n    getLatestCommandes();\n\n    return () => {\n      clearTimeout(timeoutId);\n      setCommandes([]);\n      setNouvellesCommandes([]);\n    };\n  }, []);\n\n\n  const commande_est_livre = async (id) => {\n    await axios.put(URL+\"paiement/update-commande\", {\n      id,\n      est_livre: true,\n    });\n\n    fetchCommandes();\n  };\n\n  return (\n    <div className='commande-en-cours admin__container'>\n      <h1\n        style={{\n          textAlign: \"center\",\n          marginBottom: \"2rem\",\n          color: \"#04295D\",\n        }}>\n        {commandes.length ? \"Vos Commandes en cours\" : \"Pas de Commandes en cours\"}\n      </h1>\n      <ProductList\n        commandes={commandes}\n        action={commande_est_livre}\n        btn={\"Remise au client\"}\n        btnImprimer={\"Imprimer facture\"}\n        estPrisConnaissance\n      />\n    </div>\n  );\n};\n\nexport default CommandeEnCours;\n"]},"metadata":{},"sourceType":"module"}