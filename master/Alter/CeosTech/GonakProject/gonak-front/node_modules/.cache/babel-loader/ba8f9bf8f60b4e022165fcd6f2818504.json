{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/site/ContactForm/ContactFormCoord/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./styles.css\";\nimport { Grid, makeStyles, TextField } from '@material-ui/core';\nimport Modal from \"../modal/Modal\";\nimport useForm from \"../../../../hooks/useForm\";\nimport { sendrequest } from \"../../../../middlewares/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '90%'\n    }\n  }\n}));\n\nconst ContactFormCoord = () => {\n  _s();\n\n  const classes = useStyles(); //Connect to the database if correct, if not show error\n\n  const initial = {\n    nom: \"\",\n    prenom: \"\",\n    societe: \"\",\n    email: \"\",\n    telephone: \"\",\n    prestation: \"\",\n    message: \"\"\n  };\n  const [success, setSuccess] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const isValid = (fieldValues = state) => {\n    const validator = {};\n    if (\"nom\" in fieldValues) validator.nom = state.nom ? null : \"Le champ nom est obligatoire\";\n    if (\"prenom\" in fieldValues) validator.prenom = state.prenom ? null : \"Le champ prénom est obligatoire\";\n    if (\"email\" in fieldValues) validator.email = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(email) ? null : \"Le format du mail n'est pas valide\";\n    if (\"telephone\" in fieldValues) validator.telephone = /([0-9.+])/.test(telephone) && telephone.length >= 10 ? null : \"Le format du telephone n'est pas valide\";\n    if (\"prestation\" in fieldValues) validator.prestation = prestation.length > 10 ? null : \"Le champ prestation doit comprendre au moins 10 caractères\";\n    if (\"message\" in fieldValues) validator.message = message.length > 10 ? null : \"Le champ message doit comprendre au moins 10 caractères\";\n    setErrors({ ...validator\n    }); // return boolean if and only if we pass a parameter for the function\n\n    if (fieldValues === state) {\n      return Object.values(validator).every(el => !el);\n    }\n  };\n\n  const {\n    state,\n    handleInputChange,\n    errors,\n    setErrors,\n    reinitialiserState\n  } = useForm(initial, isValid);\n  const {\n    nom,\n    prenom,\n    societe,\n    email,\n    telephone,\n    prestation,\n    message\n  } = state;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (isValid()) {\n      const response = await sendrequest(\"post\", \"restaurant/contact/\", state);\n\n      if (response !== false) {\n        setSuccess(true);\n        handleShow();\n        reinitialiserState();\n      } else {\n        setSuccess(false);\n        handleShow();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-coord\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entrez vos coordonn\\xE9es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.root,\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-basic\",\n              label: \"Nom\",\n              required: true,\n              name: \"nom\",\n              variant: \"filled\",\n              value: nom,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-basic\",\n              label: \"Pr\\xE9nom\",\n              required: true,\n              name: \"prenom\",\n              value: prenom,\n              onChange: handleInputChange,\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.prenom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-basic\",\n              label: \"Soci\\xE9t\\xE9/Etablissement\",\n              name: \"societe\",\n              value: societe,\n              onChange: handleInputChange,\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-basic\",\n              label: \"Votre mail\",\n              required: true,\n              name: \"email\",\n              value: email,\n              onChange: handleInputChange,\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-basic\",\n              label: \"T\\xE9l\\xE9phone\",\n              required: true,\n              name: \"telephone\",\n              value: telephone,\n              onChange: handleInputChange,\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.telephone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-basic\",\n              label: \"Pr\\xE9station\",\n              required: true,\n              name: \"prestation\",\n              value: prestation,\n              onChange: handleInputChange,\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.prestation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              required: true,\n              rows: 18,\n              id: \"filled-basic\",\n              label: \"Message\",\n              name: \"message\",\n              value: message,\n              onChange: handleInputChange,\n              variant: \"filled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btnEnvoyer\",\n        children: \"ENVOYER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        handleClose: handleClose,\n        show: show,\n        title: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [success ? \"Envoyé\" : \"Oups\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `${success ? \" fas fa-thumbs-up\" : \" fas fa-thumbs-down\"}`,\n            style: {\n              color: \"var(--primary-color)\",\n              marginLeft: \"1rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true),\n        children: success ? \"Votre message a bien été envoyé.\" : \"Une erreur s'est produite, veuillez réessayer.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactFormCoord, \"En9l9MSLjwGtI1fZHxIh0594mjM=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = ContactFormCoord;\nexport default ContactFormCoord;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactFormCoord\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/site/ContactForm/ContactFormCoord/index.js"],"names":["React","useState","Grid","makeStyles","TextField","Modal","useForm","sendrequest","useStyles","theme","root","margin","spacing","width","ContactFormCoord","classes","initial","nom","prenom","societe","email","telephone","prestation","message","success","setSuccess","show","setShow","handleClose","handleShow","isValid","fieldValues","state","validator","test","length","setErrors","Object","values","every","el","handleInputChange","errors","reinitialiserState","handleSubmit","e","preventDefault","response","color","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"./styles.css\";\nimport {Grid, makeStyles, TextField} from '@material-ui/core';\nimport Modal from \"../modal/Modal\";\nimport useForm from \"../../../../hooks/useForm\";\nimport { sendrequest } from \"../../../../middlewares/request\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '90%',\n      },\n    },\n  }));\n\nconst ContactFormCoord = () => {\n    const classes = useStyles();\n\n    //Connect to the database if correct, if not show error\n    const initial = {\n        nom: \"\",\n        prenom: \"\",\n        societe: \"\",\n        email: \"\",\n        telephone:\"\",\n        prestation: \"\",\n        message: \"\",\n    };\n\n    const [success, setSuccess] = useState(false);\n    const [show, setShow] = useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const isValid = (fieldValues = state) => {\n        const validator = {};\n        if (\"nom\" in fieldValues)\n          validator.nom = state.nom ? null : \"Le champ nom est obligatoire\";\n    \n        if (\"prenom\" in fieldValues)\n          validator.prenom = state.prenom\n            ? null\n            : \"Le champ prénom est obligatoire\";\n\n        if (\"email\" in fieldValues)\n            validator.email = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(email)\n                ? null\n                : \"Le format du mail n'est pas valide\";\n\n        if (\"telephone\" in fieldValues)\n            validator.telephone = (/([0-9.+])/.test(telephone) && telephone.length >= 10)\n                ? null\n                : \"Le format du telephone n'est pas valide\";\n        \n        if (\"prestation\" in fieldValues)\n          validator.prestation =\n            prestation.length > 10\n              ? null\n              : \"Le champ prestation doit comprendre au moins 10 caractères\";\n            \n        if (\"message\" in fieldValues)\n            validator.message =\n            message.length > 10\n                ? null\n                : \"Le champ message doit comprendre au moins 10 caractères\";\n    \n        setErrors({ ...validator });\n    \n    // return boolean if and only if we pass a parameter for the function\n    if (fieldValues === state) {\n        return Object.values(validator).every((el) => !el);\n        }\n    };\n\n    const { state, handleInputChange, errors, setErrors, reinitialiserState } =\n    useForm(initial, isValid);\n\n  const { nom, prenom, societe, email, telephone, prestation, message } = state;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isValid()) {\n      const response = await sendrequest(\"post\", \"restaurant/contact/\", state);  \n      if (response !== false) {\n        setSuccess(true);\n        handleShow();\n        reinitialiserState();\n      }   \n      else {\n        setSuccess(false);\n        handleShow();\n      }\n    }\n  };\n\n\n    return (\n        <div className=\"contact-coord\">\n            <h2>Entrez vos coordonnées</h2>\n            <form \n                noValidate\n                autoComplete=\"off\"\n                onSubmit={handleSubmit}\n            >\n            <Grid container direction=\"row\">\n                <Grid  xs={12} md={6}>\n                    <form className={classes.root} noValidate autoComplete=\"off\">\n                        <TextField \n                            id=\"filled-basic\" \n                            label=\"Nom\" required\n                            name=\"nom\"\n                            variant=\"filled\" \n                            value={nom}\n                            onChange={handleInputChange}\n                        />\n                       <div className=\"error\">{errors.nom}</div>\n\n                        <TextField id=\"filled-basic\" \n                            label=\"Prénom\" required\n                            name=\"prenom\"\n                            value={prenom}\n                            onChange={handleInputChange}\n                            variant=\"filled\" />\n                        <div className=\"error\">{errors.prenom}</div>\n\n                        <TextField id=\"filled-basic\" \n                            label=\"Société/Etablissement\" \n                            name=\"societe\"\n                            value={societe}\n                            onChange={handleInputChange}\n                            variant=\"filled\" />\n\n                        <TextField id=\"filled-basic\" \n                            label=\"Votre mail\" required\n                            name=\"email\"\n                            value={email}\n                            onChange={handleInputChange}          \n                            variant=\"filled\" />\n                        <div className=\"error\">{errors.email}</div>\n\n                        <TextField id=\"filled-basic\" \n                            label=\"Téléphone\" required\n                            name=\"telephone\"\n                            value={telephone}\n                            onChange={handleInputChange}          \n                            variant=\"filled\" />\n                        <div className=\"error\">{errors.telephone}</div>\n                            \n                        <TextField id=\"filled-basic\" \n                            label=\"Préstation\" required\n                            name=\"prestation\"\n                            value={prestation}\n                            onChange={handleInputChange}          \n                            variant=\"filled\" />\n                        <div className=\"error\">{errors.prestation}</div>\n\n                    </form>\n                </Grid>\n                <Grid xs={12} md={6}>\n                    <form className={classes.root}>\n                        <TextField fullWidth multiline required\n                            rows={18} id=\"filled-basic\" \n                            label=\"Message\" \n                            name=\"message\"\n                            value={message}\n                            onChange={handleInputChange}\n                            variant=\"filled\" />\n                        <div className=\"error\">{errors.message}</div>\n\n                    </form>\n                </Grid>\n            </Grid>\n            <button type=\"submit\" className=\"btnEnvoyer\" \n                >ENVOYER</button>\n            \n            <Modal\n                    handleClose={handleClose}\n                    show={show}\n                    title={\n                        <>\n                        {success ? \"Envoyé\" : \"Oups\"}\n                        <i\n                            className={`${\n                            success ? \" fas fa-thumbs-up\" : \" fas fa-thumbs-down\"\n                            }`}\n                            style={{\n                            color: \"var(--primary-color)\",\n                            marginLeft: \"1rem\",\n                            }}\n                        ></i>\n                        </>\n                    }\n                    >\n                    {success\n                        ? \"Votre message a bien été envoyé.\"\n                        : \"Une erreur s'est produite, veuillez réessayer.\"}\n                    </Modal>\n            </form>\n            \n        </div>\n    );\n}\nexport default ContactFormCoord;"]},"metadata":{},"sourceType":"module"}