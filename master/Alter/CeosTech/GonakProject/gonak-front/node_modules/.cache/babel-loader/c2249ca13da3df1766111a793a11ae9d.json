{"ast":null,"code":"import _objectSpread from\"/home/christopher/Documents/Alter/GonakProject/gonak-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/home/christopher/Documents/Alter/GonakProject/gonak-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/christopher/Documents/Alter/GonakProject/gonak-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var useForm=function useForm(initialState){var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var handleInputChange=function handleInputChange(e){var changingInput=_defineProperty({},e.target.name,e.target.value);setState(_objectSpread(_objectSpread({},state),changingInput));};var handleCheckedChange=function handleCheckedChange(e){var changingInput=_defineProperty({},e.target.name,e.target.checked);setState(_objectSpread(_objectSpread({},state),changingInput));};var reinitialiserState=function reinitialiserState(){return setState(initialState);};// Methods for a multi-step form : will go to the next or previous step and generate the according button\n// proceed to the next step\nvar nextStep=function nextStep(){var currentStep=state.currentStep;// If the form constraints are validated, move on to the next step\nif(validator()){setState(_objectSpread(_objectSpread({},state),{},{currentStep:currentStep+1}));}};// go back to previous step\nvar prevStep=function prevStep(){var currentStep=state.currentStep;setState(_objectSpread(_objectSpread({},state),{},{currentStep:currentStep-1}));};// The \"next\" and \"previous\" button functions\nvar previousButton=function previousButton(){var currentStep=state.currentStep;// If the current step is not 1, then render the \"previous\" button\nif(currentStep!==1){return/*#__PURE__*/_jsx(\"p\",{className:\"btnSteps\",onClick:prevStep,children:\"Pr\\xE9c\\xE9dent\"});}// ...else return nothing\nreturn null;};var nextButton=function nextButton(numberOfSteps){var currentStep=state.currentStep;// If the current step is not 3, then render the \"next\" button\nif(currentStep<numberOfSteps){return/*#__PURE__*/_jsx(\"p\",{className:\"btnSteps float-right\",onClick:nextStep,children:\"Suivant\"});}// If we arrive at the end of the form, render the validate button\nelse if(currentStep===numberOfSteps){return/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btnSteps float-right\",children:\"Valider\"});}// ...else render nothing\nreturn null;};return{state:state,setState:setState,errors:errors,setErrors:setErrors,handleInputChange:handleInputChange,handleCheckedChange:handleCheckedChange,reinitialiserState:reinitialiserState,previousButton:previousButton,nextButton:nextButton};};export default useForm;","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/hooks/useForm.js"],"names":["useState","useForm","initialState","validator","state","setState","errors","setErrors","handleInputChange","e","changingInput","target","name","value","handleCheckedChange","checked","reinitialiserState","nextStep","currentStep","prevStep","previousButton","nextButton","numberOfSteps"],"mappings":"ohBAAA,OAASA,QAAT,KAAyB,OAAzB,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,YAAD,CAAoC,IAArBC,CAAAA,SAAqB,2DAAT,IAAS,CAClD,cAA0BH,QAAQ,CAACE,YAAD,CAAlC,wCAAOE,KAAP,eAAcC,QAAd,eACA,eAA4BL,QAAQ,CAAC,EAAD,CAApC,yCAAOM,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/B,GAAMC,CAAAA,aAAa,oBAAMD,CAAC,CAACE,MAAF,CAASC,IAAf,CAAsBH,CAAC,CAACE,MAAF,CAASE,KAA/B,CAAnB,CAEAR,QAAQ,gCACHD,KADG,EAEHM,aAFG,EAAR,CAID,CAPD,CASA,GAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACL,CAAD,CAAO,CACjC,GAAMC,CAAAA,aAAa,oBAAMD,CAAC,CAACE,MAAF,CAASC,IAAf,CAAsBH,CAAC,CAACE,MAAF,CAASI,OAA/B,CAAnB,CAEAV,QAAQ,gCACHD,KADG,EAEHM,aAFG,EAAR,CAID,CAPD,CASA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAMX,CAAAA,QAAQ,CAACH,YAAD,CAAd,EAA3B,CAEA;AACA;AACA,GAAMe,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAQC,CAAAA,WAAR,CAAwBd,KAAxB,CAAQc,WAAR,CACA;AACA,GAAIf,SAAS,EAAb,CAAiB,CACfE,QAAQ,gCACHD,KADG,MAENc,WAAW,CAAEA,WAAW,CAAG,CAFrB,GAAR,CAID,CACF,CATD,CAUA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAQD,CAAAA,WAAR,CAAwBd,KAAxB,CAAQc,WAAR,CACAb,QAAQ,gCACHD,KADG,MAENc,WAAW,CAAEA,WAAW,CAAG,CAFrB,GAAR,CAIH,CAND,CAQA;AACA,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAIF,CAAAA,WAAW,CAAGd,KAAK,CAACc,WAAxB,CACA;AACA,GAAGA,WAAW,GAAI,CAAlB,CAAoB,CACpB,mBACI,UACI,SAAS,CAAC,UADd,CAEI,OAAO,CAAEC,QAFb,6BADJ,CAQC,CACD;AACA,MAAO,KAAP,CACH,CAfD,CAiBA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,aAAD,CAAmB,CACpC,GAAIJ,CAAAA,WAAW,CAAGd,KAAK,CAACc,WAAxB,CACA;AACA,GAAGA,WAAW,CAAGI,aAAjB,CAA+B,CAC7B,mBACE,UACI,SAAS,CAAC,sBADd,CAEI,OAAO,CAAEL,QAFb,qBADF,CAQD,CACD;AAVA,IAWK,IAAIC,WAAW,GAAKI,aAApB,CAAmC,CACtC,mBACE,eACI,IAAI,CAAC,QADT,CAEI,SAAS,CAAC,sBAFd,qBADF,CAQD,CACD;AACA,MAAO,KAAP,CACD,CA1BD,CA4BA,MAAO,CACLlB,KAAK,CAALA,KADK,CAELC,QAAQ,CAARA,QAFK,CAGLC,MAAM,CAANA,MAHK,CAILC,SAAS,CAATA,SAJK,CAKLC,iBAAiB,CAAjBA,iBALK,CAMLM,mBAAmB,CAAnBA,mBANK,CAOLE,kBAAkB,CAAlBA,kBAPK,CAQLI,cAAc,CAAdA,cARK,CASLC,UAAU,CAAVA,UATK,CAAP,CAWD,CAtGD,CAwGA,cAAepB,CAAAA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (initialState, validator = null) => {\n  const [state, setState] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (e) => {\n    const changingInput = { [e.target.name]: e.target.value };\n\n    setState({\n      ...state,\n      ...changingInput,\n    });\n  };\n\n  const handleCheckedChange = (e) => {\n    const changingInput = { [e.target.name]: e.target.checked };\n\n    setState({\n      ...state,\n      ...changingInput,\n    });\n  };\n\n  const reinitialiserState = () => setState(initialState);\n\n  // Methods for a multi-step form : will go to the next or previous step and generate the according button\n  // proceed to the next step\n  const nextStep = () => {\n    const { currentStep } = state;\n    // If the form constraints are validated, move on to the next step\n    if (validator()) {\n      setState({         \n        ...state,\n        currentStep: currentStep + 1 \n      });\n    }\n  }\n  // go back to previous step\n  const prevStep = () => {\n      const { currentStep } = state;\n      setState({ \n        ...state,\n        currentStep: currentStep - 1 \n      });\n  }\n\n  // The \"next\" and \"previous\" button functions\n  const previousButton = () => {\n      let currentStep = state.currentStep;\n      // If the current step is not 1, then render the \"previous\" button\n      if(currentStep !==1){\n      return (\n          <p\n              className=\"btnSteps\"\n              onClick={prevStep}\n          >\n              Précédent\n          </p>\n      )\n      }\n      // ...else return nothing\n      return null;\n  }\n\n  const nextButton = (numberOfSteps) => {\n    let currentStep = state.currentStep;\n    // If the current step is not 3, then render the \"next\" button\n    if(currentStep < numberOfSteps){\n      return (\n        <p\n            className=\"btnSteps float-right\"\n            onClick={nextStep}\n        >\n            Suivant\n        </p> \n      )      \n    }\n    // If we arrive at the end of the form, render the validate button\n    else if (currentStep === numberOfSteps) {\n      return (\n        <button\n            type=\"submit\" \n            className=\"btnSteps float-right\"\n        >\n            Valider\n        </button> \n      )      \n    }\n    // ...else render nothing\n    return null;\n  }\n\n  return {\n    state,\n    setState,\n    errors,\n    setErrors,\n    handleInputChange,\n    handleCheckedChange,\n    reinitialiserState,\n    previousButton,\n    nextButton,\n  };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}