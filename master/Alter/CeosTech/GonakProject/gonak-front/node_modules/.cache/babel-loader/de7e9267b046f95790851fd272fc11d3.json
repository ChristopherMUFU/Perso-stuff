{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/site/Panier/Paiement.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Button, FormControl, IconButton, Input, InputLabel, makeStyles, Select, MenuItem // Modal,\n} from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport useForm from \"../../../hooks/useForm\";\nimport \"./paiement.css\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { sendrequest } from \"../../../middlewares/request\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectBaskets, emptyBasket } from \"../../../app/Redux-slices/basketsSlice\";\nimport { calculPrixProduitAvecQuantite, calculTotal } from \"../../../utilities\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Modal from \"../Carte/MyModal/Modal\";\nimport { URL } from \"../../../middlewares/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  margin: {\n    margin: theme.spacing(1, 0)\n  },\n  marginLeftRight: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1)\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: \"25ch\"\n  },\n  buttonIcon: {\n    paddingLeft: 1\n  },\n  border: {\n    \"& label.Mui-focused\": {\n      color: \"#ccc\"\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#ccc\"\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"&:hover fieldset\": {\n        borderColor: \"#ccc\"\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#ccc\"\n      }\n    }\n  }\n}));\nconst initial = {\n  nom: \"\",\n  prenom: \"\",\n  email: \"\",\n  num_tel: \"\",\n  adresse: \"\",\n  ville: \"\",\n  code_postale: \"\",\n  montant: 0\n};\n\nconst Paiement = props => {\n  _s();\n\n  // With location we can retrieve the kind of delivery chosen (was passed in props of history)\n  const [paiment_process, setPaiement_process] = useState(\"livraison\");\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [succeeded, setSucceeded] = useState(false); // const [supplements, setSupplements] = useState([]);\n\n  const location = useLocation();\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const baskets = useSelector(selectBaskets);\n  const classes = useStyles();\n  const typeOfDelivery = location.delivery !== undefined ? location.delivery.value : \"veuillez choisir un mode de livraison dans le panier\";\n\n  const estValide = (fieldValues = state) => {\n    const validator = {};\n    if (\"nom\" in fieldValues) validator.nom = state.nom ? null : \"le champ nom est obligatore\";\n    if (\"prenom\" in fieldValues) validator.prenom = state.prenom ? null : \"le champ prenom est obligatore\";\n    if (\"email\" in fieldValues) validator.email = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(email) ? null : \"Email n'est pas valide\";\n    if (\"num_tel\" in fieldValues) validator.num_tel = /(?:(\\+(\\d{1,2})?)[ -]?)?\\(?(?<first>\\d{3})\\)?[-\\s]?(\\d{3})[- ]?(\\d{4})/.test(num_tel) ? null : \"Numéro de téléphone n'est pas valide\";\n    if (\"adresse\" in fieldValues) validator.adresse = state.adresse ? null : \"le champ adresse est obligatore\";\n    if (\"ville\" in fieldValues) validator.ville = state.ville ? null : \"le champ ville est obligatore\";\n    if (\"code_postale\" in fieldValues) validator.code_postale = /\\d+/.test(code_postale) ? null : \"Code postale n'est pas valide\";\n    if (location.delivery === undefined) validator.delivery = \"Veuillez choisir un mode de livraison dans le panier\";\n    setErrors({ ...validator\n    }); // retourne boolean si et seulement si on passe un parametre pour la fonction\n\n    if (fieldValues === state) {\n      return Object.values(validator).every(el => !el);\n    }\n  };\n\n  const {\n    state,\n    handleInputChange,\n    errors,\n    setErrors,\n    reinitialiserState\n  } = useForm(initial, estValide);\n  const {\n    nom,\n    prenom,\n    email,\n    num_tel,\n    adresse,\n    ville,\n    code_postale\n  } = state;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (estValide()) {\n      setPaiement_process(\"paiement\");\n    }\n  };\n\n  const handleChange = event => {\n    // Listen for changes in CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  }; // Fonction liée au paiement ainsi qu'à l'enregistrement des infos du clients\n\n\n  const Payer = async e => {\n    //e.preventDefault();\n    const {\n      data\n    } = await axios.post(URL + \"paiement/create-client-secret\", {\n      amount: 1000,\n      //parseInt((prixTotal * 100).toFixed(2), 10),\n      email\n    });\n\n    try {\n      console.log(\"test\");\n      console.log(data);\n      const payload = await stripe.confirmCardPayment(data.clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n\n      if (payload.error) {\n        setError(`Paiement échoué: ${payload.error.message}`);\n        setProcessing(false);\n      } else {\n        setError(null);\n        setProcessing(false); //setDisabled(false);\n        //etSucceeded(true);\n\n        const produits = [];\n        const data = {\n          client: {\n            nom,\n            prenom,\n            email,\n            telephone: num_tel,\n            adresse,\n            ville,\n            code_postale\n          },\n          panier: {\n            infos_produits: JSON.stringify(baskets),\n            produits\n          },\n          methode_vente: typeOfDelivery,\n          commentaire: location.delivery.comment // à voir\n\n        };\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        sendrequest(\"post\", \"paiement/create-commande\", null, null, data) //commande partie resto\n        .then(response => {\n          if (response !== false) {\n            reinitialiserState();\n            dispatch(emptyBasket());\n            history.replace(\"/felicitation\", {\n              payer: true\n            });\n          } else {\n            setError(\"Un problème s'est produit lors du paiement, veuillez réessayer\");\n          }\n        });\n      }\n    } catch (err) {\n      // setError(err.message);\n      console.log(err.message);\n    }\n  };\n\n  const handleClose = e => {\n    if (e.target.classList.contains(\"myModal__backdrop\") || e.target.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") || e.target.parentNode.parentNode.classList.contains(\"myModal__modal__close-btn\")) {\n      setShowModal(false);\n    }\n  };\n\n  const handleOpen = () => {\n    setShowModal(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paiment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paiement__container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"paiement__form\",\n        children: [/*#__PURE__*/_jsxDEV(CardElement, {\n          id: \"card-element\",\n          onChange: handleChange,\n          options: cardStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paiement__details__error\",\n          children: [\"* \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: Payer,\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"paiement--btn-payer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"paiement--btn-payer-text\",\n            children: processing ? {\n              /* <img src={spinner} alt=\"spinner\" /> */\n            } : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"Payer Test\\u20AC\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Paiement, \"k5/a2QiytqKA5eInlcTSxAovTiU=\", false, function () {\n  return [useLocation, useStripe, useElements, useHistory, useDispatch, useSelector, useStyles, useForm];\n});\n\n_c = Paiement;\nconst cardStyle = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aaa\",\n        backgroundColor: \"#fff\"\n      },\n      \":-webkit-autofill\": {\n        color: \"#fff\"\n      },\n      \":focus\": {\n        color: \"#aaa\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  },\n  hidePostalCode: true\n};\nexport const Wrapper = props => {\n  //const config = useSelector(state => state.config.info);\n  //const stripe = window.Stripe(config.stripe);\n  const test = loadStripe(\"pk_test_51JQ9d2ZVNc58ukTd42QqUEsnWf8vXIXS5q6Mu6bKS2PfElbRySFMeMHTaQK00WyHNKcuX\");\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: test,\n    children: /*#__PURE__*/_jsxDEV(Paiement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Wrapper;\nexport default Wrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Paiement\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/site/Panier/Paiement.js"],"names":["useState","useEffect","Button","FormControl","IconButton","Input","InputLabel","makeStyles","Select","MenuItem","NavigateNextIcon","useForm","loadStripe","Elements","sendrequest","CardElement","useStripe","useElements","useSelector","useDispatch","selectBaskets","emptyBasket","calculPrixProduitAvecQuantite","calculTotal","useHistory","useLocation","axios","Modal","URL","useStyles","theme","root","display","flexWrap","justifyContent","margin","spacing","marginLeftRight","marginRight","marginLeft","withoutLabel","marginTop","textField","width","buttonIcon","paddingLeft","border","color","borderBottomColor","borderColor","initial","nom","prenom","email","num_tel","adresse","ville","code_postale","montant","Paiement","props","paiment_process","setPaiement_process","showModal","setShowModal","error","setError","disabled","setDisabled","processing","setProcessing","succeeded","setSucceeded","location","stripe","elements","history","dispatch","baskets","classes","typeOfDelivery","delivery","undefined","value","estValide","fieldValues","state","validator","test","setErrors","Object","values","every","el","handleInputChange","errors","reinitialiserState","handleSubmit","e","preventDefault","handleChange","event","empty","message","Payer","data","post","amount","console","log","payload","confirmCardPayment","clientSecret","payment_method","card","getElement","produits","client","telephone","panier","infos_produits","JSON","stringify","methode_vente","commentaire","comment","config","headers","then","response","replace","payer","err","handleClose","target","classList","contains","parentNode","handleOpen","cardStyle","style","base","fontFamily","fontSmoothing","fontSize","backgroundColor","invalid","iconColor","hidePostalCode","Wrapper"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputLabel,\n  makeStyles,\n  Select,\n  MenuItem,\n  // Modal,\n} from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport useForm from \"../../../hooks/useForm\";\nimport \"./paiement.css\";\n\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nimport { sendrequest } from \"../../../middlewares/request\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectBaskets, emptyBasket } from \"../../../app/Redux-slices/basketsSlice\";\nimport { calculPrixProduitAvecQuantite, calculTotal } from \"../../../utilities\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Modal from \"../Carte/MyModal/Modal\";\nimport { URL } from \"../../../middlewares/request\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  margin: {\n    margin: theme.spacing(1, 0),\n  },\n  marginLeftRight: {\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: \"25ch\",\n  },\n\n  buttonIcon: {\n    paddingLeft: 1,\n  },\n\n  border: {\n    \"& label.Mui-focused\": {\n      color: \"#ccc\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#ccc\",\n    },\n\n    \"& .MuiOutlinedInput-root\": {\n      \"&:hover fieldset\": {\n        borderColor: \"#ccc\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#ccc\",\n      },\n    },\n  },\n}));\n\nconst initial = {\n  nom: \"\",\n  prenom: \"\",\n  email: \"\",\n  num_tel: \"\",\n  adresse: \"\",\n  ville: \"\",\n  code_postale: \"\",\n  montant: 0,\n};\n\nconst Paiement = (props) => {\n  // With location we can retrieve the kind of delivery chosen (was passed in props of history)\n  const [paiment_process, setPaiement_process] = useState(\"livraison\");\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  // const [supplements, setSupplements] = useState([]);\n\n  const location = useLocation();\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const baskets = useSelector(selectBaskets);\n  const classes = useStyles();\n\n\n  const typeOfDelivery =\n    location.delivery !== undefined\n      ? location.delivery.value\n      : \"veuillez choisir un mode de livraison dans le panier\";\n\n\n   const estValide = (fieldValues = state) => {\n      const validator = {};\n      if (\"nom\" in fieldValues)\n        validator.nom = state.nom ? null : \"le champ nom est obligatore\";\n      if (\"prenom\" in fieldValues)\n        validator.prenom = state.prenom ? null : \"le champ prenom est obligatore\";\n\n      if (\"email\" in fieldValues)\n        validator.email = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(email)\n          ? null\n          : \"Email n'est pas valide\";\n\n      if (\"num_tel\" in fieldValues)\n        validator.num_tel =\n          /(?:(\\+(\\d{1,2})?)[ -]?)?\\(?(?<first>\\d{3})\\)?[-\\s]?(\\d{3})[- ]?(\\d{4})/.test(\n            num_tel\n          )\n            ? null\n            : \"Numéro de téléphone n'est pas valide\";\n\n      if (\"adresse\" in fieldValues)\n        validator.adresse = state.adresse\n          ? null\n          : \"le champ adresse est obligatore\";\n      if (\"ville\" in fieldValues)\n        validator.ville = state.ville ? null : \"le champ ville est obligatore\";\n\n      if (\"code_postale\" in fieldValues)\n        validator.code_postale = /\\d+/.test(code_postale)\n          ? null\n          : \"Code postale n'est pas valide\";\n\n      if (location.delivery === undefined)\n        validator.delivery =\n          \"Veuillez choisir un mode de livraison dans le panier\";\n\n      setErrors({ ...validator });\n\n      // retourne boolean si et seulement si on passe un parametre pour la fonction\n      if (fieldValues === state) {\n        return Object.values(validator).every((el) => !el);\n      }\n    };\n\n  const { state, handleInputChange, errors, setErrors, reinitialiserState } =\n    useForm(initial, estValide);\n\n  const { nom, prenom, email, num_tel, adresse, ville, code_postale } = state;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (estValide()) {\n      setPaiement_process(\"paiement\");\n    }\n  };\n\n \n\n  const handleChange = (event) => {\n    // Listen for changes in CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  // Fonction liée au paiement ainsi qu'à l'enregistrement des infos du clients\n  const Payer = async (e) => {\n      //e.preventDefault();\n\n      const { data } = await axios.post(URL + \"paiement/create-client-secret\", {\n        amount: 1000,//parseInt((prixTotal * 100).toFixed(2), 10),\n        email,\n      });\n\n      try \n      {\n        console.log(\"test\")\n        console.log(data)\n          const payload = await stripe.confirmCardPayment(data.clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement),\n            },\n          });\n          if (payload.error) \n          {\n            setError(`Paiement échoué: ${payload.error.message}`);\n            setProcessing(false);\n          } \n          else \n          {\n              setError(null);\n              setProcessing(false);\n              //setDisabled(false);\n              //etSucceeded(true);\n\n              const produits = []\n              \n              const data = {\n                  client: {\n                    nom,\n                    prenom,\n                    email,\n                    telephone: num_tel,\n                    adresse,\n                    ville,\n                    code_postale,\n                  },\n                  panier: {\n                    infos_produits: JSON.stringify(baskets),\n                    produits,\n                  },\n                  methode_vente: typeOfDelivery,\n                  commentaire: location.delivery.comment, // à voir\n              };\n              const config = {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n              };\n\n              sendrequest(\"post\", \"paiement/create-commande\", null, null, data) //commande partie resto\n                .then((response) => {\n                  if (response !== false) {\n                    reinitialiserState();\n                    dispatch(emptyBasket());\n                    history.replace(\"/felicitation\", { payer: true });\n                  } else {\n                    setError(\n                      \"Un problème s'est produit lors du paiement, veuillez réessayer\"\n                    );\n                  }\n                });\n          }\n    }\n    catch (err) \n    {\n      // setError(err.message);\n      console.log(err.message)\n    }\n  };\n\n\n  const handleClose = (e) => {\n    if (\n      e.target.classList.contains(\"myModal__backdrop\") ||\n      e.target.classList.contains(\"myModal__modal__close-btn\") ||\n      e.target.parentNode.classList.contains(\"myModal__modal__close-btn\") ||\n      e.target.parentNode.parentNode.classList.contains(\n        \"myModal__modal__close-btn\"\n      )\n    ) {\n      setShowModal(false);\n    }\n  };\n\n  const handleOpen = () => {\n    setShowModal(true);\n  };\n\n  return (\n    <div className=\"paiment\">\n      <div className=\"paiement__container\">\n              <form className=\"paiement__form\">\n                <CardElement\n                  id=\"card-element\"\n                  onChange={handleChange}\n                  options={cardStyle}\n                />\n                {error && (\n                  <div className=\"paiement__details__error\">* {error}</div>\n                )}\n\n                <Button\n                  onClick={Payer}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"paiement--btn-payer\"\n                >\n                  <span className=\"paiement--btn-payer-text\">\n                    {processing ? (\n                     {/* <img src={spinner} alt=\"spinner\" /> */}\n                    ) : (\n                      <>Payer Test€</>\n                    )}\n                  </span>\n                </Button>\n              </form>\n            \n      </div>\n    </div>\n  );\n};\n\n\nconst cardStyle = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aaa\",\n        backgroundColor: \"#fff\",\n      },\n      \":-webkit-autofill\": {\n        color: \"#fff\",\n      },\n      \":focus\": {\n        color: \"#aaa\",\n      },\n    },\n\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n  hidePostalCode: true,\n};\n\n\n\nexport const Wrapper = (props) => {\n\n  //const config = useSelector(state => state.config.info);\n  //const stripe = window.Stripe(config.stripe);\n  const test = loadStripe(\"pk_test_51JQ9d2ZVNc58ukTd42QqUEsnWf8vXIXS5q6Mu6bKS2PfElbRySFMeMHTaQK00WyHNKcuX\");\n\n  return (\n    <Elements stripe={test}>\n      <Paiement />\n    </Elements>\n  );\n}\n\nexport default Wrapper;\n"]},"metadata":{},"sourceType":"module"}