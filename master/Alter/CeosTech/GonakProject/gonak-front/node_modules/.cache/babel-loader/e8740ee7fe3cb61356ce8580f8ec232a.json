{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/gestionProduits/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select'; //import Carte from \"./Carte\";\n\nimport CartePage from './CartePage'; //import MenuType from \"../../Menu/MenuType\";\n//import Card from \"./Carte/card\";\n\nimport AddProductModal from \"./MyModal/AddProductModal\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { IconButton, Button } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { URL, sendrequest } from \"../../../middlewares/request\";\nimport SwitchBtn from \"../switch/SwitchBtn\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst proprietes = [\"Vos produits\", \"DisponibilitÃ©\", \"\"];\nconst useStyles = makeStyles({\n  heading: {\n    width: \"100%\",\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    justifyContent: \"space-around\"\n  },\n  content: {\n    fontWeight: \"bold\",\n    fontSize: 30\n  },\n  rowConfig: {\n    borderWidth: 3\n  }\n});\nexport default function GestionProduits() {\n  _s();\n\n  const classes = useStyles();\n  const [active, setActive] = useState(1);\n  const [activeCarte, setActiveCarte] = useState(true);\n  const [datas, setDatas] = useState([]);\n  const [sideDishes, setSideDishes] = useState([]);\n  const [menuCategories, setMenuCategories] = useState([]);\n  const [dishesDisplayed, setDishesDisplay] = useState(false); // Booleans that will only allow the component to render when the requests have returned the datas\n\n  const [isDataLoading, setDataLoading] = useState(false);\n  const [isCategoryLoading, setCategoryLoading] = useState(false);\n  const [sideDishesLoading, setSideDishesLoading] = useState(false);\n  const [showProductModal, setShowProductModal] = useState(false);\n  const [show, setShow] = useState(false);\n  const [produit, setProduit] = useState([]); // activeCarte && (window.document.body.style.overflow = \"hidden\")\n\n  activeCarte ? window.document.body.style.overflow = \"hidden\" : window.document.body.style.overflow = \"auto\";\n\n  const fetchData = async () => {\n    //sendrequest(\"get\", \"letexan/produit/?accompagnement=true\", setSideDishes, setSideDishesLoading);\n    axios.get(URL + \"gonak/produit/\").then(res => {\n      setDatas(res.data);\n      console.log(res.data);\n    });\n    axios.get(URL + \"gonak/categorie/\").then(res => {\n      setMenuCategories(res.data);\n      console.log(res.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const openModal = data => {\n    setProduit(data);\n\n    while (produit === []) {\n      console.log(test);\n    }\n\n    console.log(\"TEST1\");\n    console.log(produit);\n    setShow(true);\n  };\n\n  const updateDisponibilite = async (id, disponibilite) => {\n    await axios.put(URL + \"restaurant/disponibilitePlats/\", {\n      id,\n      disponibilite\n    });\n  }; //Function that will check through if id of the selected menu item matches the one of 'Menu'. If so then we will want to display all of the datas, not just a selection.\n\n\n  const isMenu = () => {\n    for (var i = 0; i < menuCategories.length; i++) {\n      if (menuCategories[i].id === active && menuCategories[i].nom === \"Menus du Midi\") {\n        return datas;\n      }\n    }\n  };\n\n  const selectDishesPerCategory = () => {\n    var menuDishes = isMenu();\n\n    if (menuDishes !== undefined) {} else {\n      const selectedDishes = datas // We filter the data :\n      .filter(data => {\n        console.log(data); // By only selecting the data that belongs to a category (categories is an array in which are the different categories to which a dish belongs) that matches the one selected by the user (var active)\n\n        return data.categorie === active;\n        /*for (var i = 0; i < data.categories.length; i++) {\n          if (data.categories[i] === active) return true;\n          return false;\n        }*/\n      }) //Once filtered, we can go through the selection to display them\n      .map(data => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"100%\"\n              },\n              onClick: () => openModal(data),\n              children: /*#__PURE__*/_jsxDEV(CartePage, {\n                idMenuPage: data.categorie,\n                produit: data,\n                show: show,\n                setShow: setShow\n              }, data.categorie, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingTop: \"5.9%\",\n                marginRight: \"10%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(SwitchBtn, {\n                val: data.disponibilite,\n                action: updateDisponibilite,\n                item: data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddProductModal, { ...produit,\n            productToUpdate: produit,\n            categorieId: active,\n            show: show,\n            setShow: setShow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      });\n      return selectedDishes;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commander__\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Categorie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: active,\n          onChange: e => {\n            setActive(e.target.value);\n            setActiveCarte(false);\n            setDishesDisplay(false);\n          },\n          children: menuCategories.map(categorie => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: categorie.id,\n              children: categorie.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowProductModal(true),\n        children: \" Ajouter Produit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddProductModal, {\n        categorieId: active,\n        show: showProductModal,\n        setShow: setShowProductModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), proprietes.map(prop => /*#__PURE__*/_jsxDEV(TableCell, {\n      className: classes.heading,\n      align: \"center\",\n      children: prop\n    }, prop, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commander__container\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commander__container__cards\",\n          children: selectDishesPerCategory()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GestionProduits, \"Zd3rJuGjABrFARe5An+XkCtXRco=\", false, function () {\n  return [useStyles];\n});\n\n_c = GestionProduits;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"GestionProduits\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/GonakProject/gonak-front/src/components/admin/gestionProduits/index.js"],"names":["useEffect","useState","InputLabel","MenuItem","FormHelperText","FormControl","Select","CartePage","AddProductModal","axios","IconButton","Button","DeleteIcon","AddIcon","URL","sendrequest","SwitchBtn","TableCell","makeStyles","proprietes","useStyles","heading","width","fontWeight","textAlign","justifyContent","content","fontSize","rowConfig","borderWidth","GestionProduits","classes","active","setActive","activeCarte","setActiveCarte","datas","setDatas","sideDishes","setSideDishes","menuCategories","setMenuCategories","dishesDisplayed","setDishesDisplay","isDataLoading","setDataLoading","isCategoryLoading","setCategoryLoading","sideDishesLoading","setSideDishesLoading","showProductModal","setShowProductModal","show","setShow","produit","setProduit","window","document","body","style","overflow","fetchData","get","then","res","data","console","log","openModal","test","updateDisponibilite","id","disponibilite","put","isMenu","i","length","nom","selectDishesPerCategory","menuDishes","undefined","selectedDishes","filter","categorie","map","display","flexDirection","paddingTop","marginRight","e","target","value","prop"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n//import Carte from \"./Carte\";\nimport CartePage from './CartePage';\n//import MenuType from \"../../Menu/MenuType\";\n//import Card from \"./Carte/card\";\nimport AddProductModal from \"./MyModal/AddProductModal\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { IconButton, Button } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport { URL, sendrequest } from \"../../../middlewares/request\";\nimport SwitchBtn from \"../switch/SwitchBtn\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\n\nconst proprietes = [\"Vos produits\", \"DisponibilitÃ©\", \"\"];\n\nconst useStyles = makeStyles({\n  heading: {\n    width: \"100%\",\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    justifyContent: \"space-around\"\n    \n  },\n\n  content: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n  },\n\n  rowConfig: {\n    borderWidth: 3,\n  },\n});\n\nexport default function GestionProduits () {\n    const classes = useStyles();\n    const [active, setActive] = useState(1);\n    const [activeCarte, setActiveCarte] = useState(true);\n    const [datas, setDatas] = useState([]);\n    const [sideDishes, setSideDishes] = useState([]);\n    const [menuCategories, setMenuCategories] = useState([]);\n    const [dishesDisplayed, setDishesDisplay] = useState(false);\n    // Booleans that will only allow the component to render when the requests have returned the datas\n    const [isDataLoading, setDataLoading] = useState(false);\n    const [isCategoryLoading, setCategoryLoading] = useState(false);\n    const [sideDishesLoading, setSideDishesLoading] = useState(false);\n    const [showProductModal, setShowProductModal] = useState(false);\n    const [show, setShow] = useState(false);\n    const [produit, setProduit] = useState([]);\n    // activeCarte && (window.document.body.style.overflow = \"hidden\")\n    activeCarte\n        ? (window.document.body.style.overflow = \"hidden\")\n        : (window.document.body.style.overflow = \"auto\");\n\n\n    const fetchData = async () => {\n        \n        //sendrequest(\"get\", \"letexan/produit/?accompagnement=true\", setSideDishes, setSideDishesLoading);\n        axios.get(URL + \"gonak/produit/\").then((res) => {\n          setDatas(res.data);\n          console.log(res.data);\n        });\n\n        axios.get(URL + \"gonak/categorie/\").then((res) => {\n          setMenuCategories(res.data);\n          console.log(res.data);\n        });\n    };\n\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const openModal = (data) =>{\n       \n        setProduit(data);\n        while(produit === []){\n            console.log(test);\n        }\n        console.log(\"TEST1\");\n        console.log(produit);\n        setShow(true);\n\n    }\n\n    const updateDisponibilite = async (id, disponibilite) => {\n        await axios.put(URL + \"restaurant/disponibilitePlats/\", {\n            id,\n            disponibilite,\n        });\n    };\n\n    //Function that will check through if id of the selected menu item matches the one of 'Menu'. If so then we will want to display all of the datas, not just a selection.\n    const isMenu = () => {\n        for (var i = 0; i < menuCategories.length; i++) {\n            if (menuCategories[i].id === active && menuCategories[i].nom === \"Menus du Midi\") {\n                return datas;\n            }\n        }\n    };\n\n    const selectDishesPerCategory = () => {\n        var menuDishes = isMenu();\n\n        if (menuDishes !== undefined) {\n            \n        } else {\n            const selectedDishes = datas\n                // We filter the data :\n                .filter((data) => {\n                    console.log(data);\n                    // By only selecting the data that belongs to a category (categories is an array in which are the different categories to which a dish belongs) that matches the one selected by the user (var active)\n                    return (\n                        data.categorie === active\n                    )\n\n\n                    /*for (var i = 0; i < data.categories.length; i++) {\n                      if (data.categories[i] === active) return true;\n                      return false;\n                    }*/\n                })\n                //Once filtered, we can go through the selection to display them\n                .map((data) => {\n                    return (\n                        <>\n                            <div \n                                style={{width: \"100%\", display: \"flex\", flexDirection: \"row\"}} \n                            >\n                              <div \n                                style={{width: \"100%\"}} \n                                onClick={() => openModal(data)}>\n                                <CartePage \n                                    key={data.categorie} \n                                    idMenuPage={data.categorie}\n                                    produit={data}\n                                    show={show} \n                                    setShow={setShow} \n                                />\n                                </div>\n                                <div style={{paddingTop: \"5.9%\", marginRight: \"10%\"}}>\n                                    <SwitchBtn\n                                      val={data.disponibilite}\n                                      action={updateDisponibilite}\n                                      item={data}\n                                    />\n                                </div>\n                            </div>\n\n                            <AddProductModal \n                                {...produit} \n                                productToUpdate={produit} \n                                categorieId={active} \n                                show={show} \n                                setShow={setShow} ></AddProductModal>\n\n                            \n                        </>\n                    );\n                });\n            return selectedDishes;\n        }\n    };\n\n    return (\n        <div className='commander__'>\n            <div style={{ textAlign: 'center', width: \"100%\" }}>\n            \n                <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\">Categorie</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    value={active}\n                    onChange={(e)=>{\n                        setActive(e.target.value);\n                        setActiveCarte(false);\n                        setDishesDisplay(false);\n                    }}\n                    >\n                        {menuCategories.map(categorie=>{\n                            return <MenuItem value={categorie.id}>{categorie.nom}</MenuItem>\n                        })}\n                    </Select>\n                </FormControl>\n            \n                <Button onClick={() => setShowProductModal(true)} > Ajouter Produit</Button>\n                <AddProductModal categorieId={active} show={showProductModal} setShow={setShowProductModal} ></AddProductModal>\n            </div>\n\n            {proprietes.map((prop) => (\n                  <TableCell key={prop} className={classes.heading} align='center'>\n                    {prop}\n                  </TableCell>\n            ))}\n\n            <div className='commander__container'>\n            \n                    <>\n                        \n\n                        <div className='commander__container__cards'>\n                            {selectDishesPerCategory()}\n                        </div>\n\n                       \n                    </>\n      \n            </div>\n        </div>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}