"""
Django settings for texan_back project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import datetime
import os
import django_heroku
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(8(4@g*jxd2ec003mv$f!!=!^(+y%mmnnmwoml(ecoqkn82hw0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "*",
    "127.0.0.1:8000",
    "olokososite-48316.web.app"
]
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    'http://localhost:8000',
)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'restaurant.apps.RestaurantConfig',
    'paiement.apps.PaiementConfig',
    'rest_framework',
    'corsheaders', # cors
    'django_filters',
]

MIDDLEWARE = [
    # Cors
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'texan_back.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated',),
    'DEFAULT_AUTHENTICATION_CLASSES': ('rest_framework_simplejwt.authentication.JWTAuthentication',),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',
    )
}

WSGI_APPLICATION = 'texan_back.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# Sql lite
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# MySql
# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'OPTIONS': {
#            'database': 'texan-restaurant',
#            'password': '',
#            'user': 'root',
#            'port': 3309,
#            'host': '127.0.0.1'  # 'localhost'
#        }
#    }
# }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/



#STATIC_ROOT = BASE_DIR / "static"

#static folder
STATIC_URL = '/static/'

#STATICFILES_DIRS = [
 #   BASE_DIR / "static",
#]

# keys from Stripe API (final product)
STRIPE_PUBLIC_KEY = "pk_live_51IZE0cLbB6RgpOO7hOYLeBillnGvkOv9MRgRTWIQ1fp36rZFaLRD6azUaHcsTrcpjgwvgnw2GtxHo1v0bQ5F4c3100ulaXZNnQ"
STRIPE_SECRET_KEY = "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"
#STRIPE_WEBHOOK_SECRET = ""

# test keys
STRIPE_TPK = "pk_test_51IZE0cLbB6RgpOO7iZUCX9Ur3vHxEbgRHRndYTjkEuzei0jpqiDjlccIlVHQMbCZEb6zAHpd4R5tktQR3IIy5u5i00kZDxLJsh"
STRIPE_TSK = "sk_test_51IZE0cLbB6RgpOO7tWQTxSL96yyecuzQEo6cWu5IzfPAAnTUN4YPZAlNlbk9FPuHvIuaulkWOmggHjL3tYQVw7N600DUuyLZRx"

# keys from Google maps API
GOOGLE_MAPS_KEY = "AIzaSyD7HbeMdlKP2HldABmvuKlX8TRrTSKpq8g"

# Activate Django-Heroku.
django_heroku.settings(locals())
# off sslmode
# del DATABASES['default']['OPTIONS']['sslmode']
