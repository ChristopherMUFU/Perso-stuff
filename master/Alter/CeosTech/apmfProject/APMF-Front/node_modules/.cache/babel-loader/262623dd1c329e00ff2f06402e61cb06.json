{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/Fabry/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport './styles.css';\nimport PropTypes from 'prop-types';\nimport parse from 'html-react-parser';\nimport { getSubMenuBySlug, getSubSubMenu, getSubSubMenuContent } from \"../../../utilities/app/menu\";\nimport { useSelector } from \"react-redux\";\nimport { getSiteState } from \"../../../app/Redux-slices/siteSlice\";\nimport Informations from \"./Informations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Fabry = ({\n  menuLink,\n  slug\n}) => {\n  _s();\n\n  // We have to select the content that matches the subsubmenu selected by the user\n  // First we have the menu selected\n  const subMenu = getSubMenuBySlug(menuLink, slug); // Then the list of the subMenus that match that menu\n\n  const subSubMenu = getSubSubMenu(subMenu); //Then the id of the specific submenu selected\n\n  const subSubMenuId = useSelector(getSiteState).subMenuId;\n\n  const content = () => {\n    if (slug !== \"informations\") {\n      // Thanks to this id, we can find the specific subMenu selected, and thus the content associated\n      const contentToDisplay = getSubSubMenuContent(subSubMenu, subSubMenuId);\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: parse(contentToDisplay)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(Informations, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"fabry-page\",\n    children: content()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Fabry, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = Fabry;\nFabry.propTypes = {\n  slug: PropTypes.string.isRequired,\n  menuLink: PropTypes.string.isRequired\n};\nexport default Fabry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fabry\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/Fabry/index.js"],"names":["React","Fragment","PropTypes","parse","getSubMenuBySlug","getSubSubMenu","getSubSubMenuContent","useSelector","getSiteState","Informations","Fabry","menuLink","slug","subMenu","subSubMenu","subSubMenuId","subMenuId","content","contentToDisplay","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,SACEC,gBADF,EAEEC,aAFF,EAGEC,oBAHF,QAIO,6BAJP;AAMA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,qCAA7B;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AACpC;AACA;AACA,QAAMC,OAAO,GAAGT,gBAAgB,CAACO,QAAD,EAAWC,IAAX,CAAhC,CAHoC,CAIpC;;AACA,QAAME,UAAU,GAAGT,aAAa,CAACQ,OAAD,CAAhC,CALoC,CAMpC;;AACA,QAAME,YAAY,GAAGR,WAAW,CAACC,YAAD,CAAX,CAA0BQ,SAA/C;;AAEA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAIL,IAAI,KAAK,cAAb,EAA6B;AAC3B;AACA,YAAMM,gBAAgB,GAAGZ,oBAAoB,CAACQ,UAAD,EAAaC,YAAb,CAA7C;AACA,0BAAO,QAAC,QAAD;AAAA,kBAAWZ,KAAK,CAACe,gBAAD;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAJD,MAKE,oBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAPD;;AASA,sBAAO;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA,cAAsBD,OAAO;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBD;;GAAMP,K;UAOiBH,W;;;KAPjBG,K;AAqBNA,KAAK,CAACS,SAAN,GAAkB;AAChBP,EAAAA,IAAI,EAAEV,SAAS,CAACkB,MAAV,CAAiBC,UADP;AAEhBV,EAAAA,QAAQ,EAAET,SAAS,CAACkB,MAAV,CAAiBC;AAFX,CAAlB;AAKA,eAAeX,KAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport './styles.css';\nimport PropTypes from 'prop-types';\nimport parse from 'html-react-parser';\n\nimport {\n  getSubMenuBySlug,\n  getSubSubMenu,\n  getSubSubMenuContent,\n} from \"../../../utilities/app/menu\";\n\nimport { useSelector } from \"react-redux\";\nimport { getSiteState } from \"../../../app/Redux-slices/siteSlice\";\n\nimport Informations from \"./Informations\";\n\nconst Fabry = ({ menuLink, slug }) => {\n  // We have to select the content that matches the subsubmenu selected by the user\n  // First we have the menu selected\n  const subMenu = getSubMenuBySlug(menuLink, slug);\n  // Then the list of the subMenus that match that menu\n  const subSubMenu = getSubSubMenu(subMenu);\n  //Then the id of the specific submenu selected\n  const subSubMenuId = useSelector(getSiteState).subMenuId;\n\n  const content = () => {\n    if (slug !== \"informations\") {\n      // Thanks to this id, we can find the specific subMenu selected, and thus the content associated\n      const contentToDisplay = getSubSubMenuContent(subSubMenu, subSubMenuId);\n      return <Fragment>{parse(contentToDisplay)}</Fragment>;\n    } else \n      return <Informations />;\n  };\n\n  return <div id=\"fabry-page\">{content()}</div>;\n};\n\nFabry.propTypes = {\n  slug: PropTypes.string.isRequired,\n  menuLink: PropTypes.string.isRequired,\n};\n\nexport default Fabry;\n"]},"metadata":{},"sourceType":"module"}