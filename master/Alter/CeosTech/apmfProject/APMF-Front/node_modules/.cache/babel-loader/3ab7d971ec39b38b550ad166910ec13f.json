{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\nimport { createSlice } from \"@reduxjs/toolkit\"; // export const Global_admin = () => {\n//   const [global_admin, setGlobal_admin] = useState(false);\n// };\n// *  Writing the Slices\n//+ createSlice returns a \"slice\" object that contains the generated reducer function as a field named reducer,\n//+ and the generated action creators inside an object called actions.\n\nexport const adminSlice = createSlice({\n  name: \"admin\",\n  initialState: {\n    pages: [{\n      name: \"editer_article\",\n      path: \"/editer-article\",\n      libelle: \"Editer un article\",\n      active: false,\n      icone: \"fal fa-edit\"\n    }, {\n      name: \"gestion_articles_publies\",\n      path: \"/gestion-articles-publies\",\n      libelle: \"Gestion des articles publiés\",\n      icone: \"fal fa-newspaper\",\n      active: false\n    }, {\n      name: \"journal_fabry\",\n      path: \"/journal-fabry\",\n      libelle: \"Le petit journal de Fabry\",\n      icone: \"fa-clipboard-list\",\n      active: true\n    }, {\n      name: \"gestion_journal_fabry\",\n      path: \"/gestion-journal-fabry\",\n      libelle: \"Gestion des journaux publiés\",\n      icone: \"fal fa-newspaper\",\n      active: false\n    }, {\n      name: \"adhesion\",\n      path: \"/adhesion\",\n      libelle: \"Adhésion\",\n      active: false,\n      icone: \"fad fa-database\"\n    }, {\n      name: \"don\",\n      path: \"/don\",\n      libelle: \"Don\",\n      icone: \"fas fa-heart\",\n      active: false\n    }, {\n      name: \"activite\",\n      path: \"/activite\",\n      libelle: \"Activité du site\",\n      active: false,\n      icone: \"fal fa-trophy\"\n    }, {\n      name: \"fichier_contact\",\n      path: \"/fichier-contact\",\n      libelle: \"Fichier contact\",\n      icone: \" far fa-id-card\",\n      active: false\n    }],\n    currentPage: \"editer_article\",\n    contacts: [],\n    dons: [],\n    adhesions: [],\n    refresh: false\n  },\n  reducers: {\n    changePage: (state, action) => {\n      state.pages.forEach(page => {\n        if (page.name === action.payload) {\n          page.active = true;\n          state.currentPage = page.name;\n        } else {\n          page.active = false;\n        }\n      });\n    },\n    changeDon: (state, action) => {\n      state.dons = action.payload;\n    },\n    changeAdhesion: (state, action) => {\n      state.adhesions = action.payload;\n    },\n    changeContact: (state, action) => {\n      state.contacts = action.payload;\n    },\n    refreshContent: (state, action) => {\n      state.refresh = !state.refresh;\n    }\n  }\n}); //+ generated action creator functions :return an object with payload and type\n\nexport const {\n  changePage,\n  changeContact,\n  changeAdhesion,\n  changeDon,\n  refreshContent\n} = adminSlice.actions;\nexport const selectAdmin = state => state.admin; // + the generated reducer function\n\nexport default adminSlice.reducer;","map":{"version":3,"sources":["/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/app/Redux-slices/adminSlice.js"],"names":["createSlice","adminSlice","name","initialState","pages","path","libelle","active","icone","currentPage","contacts","dons","adhesions","refresh","reducers","changePage","state","action","forEach","page","payload","changeDon","changeAdhesion","changeContact","refreshContent","actions","selectAdmin","admin","reducer"],"mappings":"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","sourcesContent":["// import React, { useEffect, useState } from \"react\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n// export const Global_admin = () => {\n//   const [global_admin, setGlobal_admin] = useState(false);\n// };\n// *  Writing the Slices\n//+ createSlice returns a \"slice\" object that contains the generated reducer function as a field named reducer,\n//+ and the generated action creators inside an object called actions.\nexport const adminSlice = createSlice({\n  name: \"admin\",\n  initialState: {\n    pages: [\n      {\n        name: \"editer_article\",\n        path: \"/editer-article\",\n        libelle: \"Editer un article\",\n        active: false,\n        icone: \"fal fa-edit\",\n      },\n      {\n        name: \"gestion_articles_publies\",\n        path: \"/gestion-articles-publies\",\n        libelle: \"Gestion des articles publiés\",\n        icone: \"fal fa-newspaper\",\n        active: false,\n      },\n      {\n        name: \"journal_fabry\",\n        path: \"/journal-fabry\",\n        libelle: \"Le petit journal de Fabry\",\n        icone: \"fa-clipboard-list\",\n        active: true,\n      },\n      {\n        name: \"gestion_journal_fabry\",\n        path: \"/gestion-journal-fabry\",\n        libelle: \"Gestion des journaux publiés\",\n        icone: \"fal fa-newspaper\",\n        active: false,\n      },\n      {\n        name: \"adhesion\",\n        path: \"/adhesion\",\n        libelle: \"Adhésion\",\n        active: false,\n        icone: \"fad fa-database\",\n      },\n      {\n        name: \"don\",\n        path: \"/don\",\n        libelle: \"Don\",\n        icone: \"fas fa-heart\",\n        active: false,\n      },\n      {\n        name: \"activite\",\n        path: \"/activite\",\n        libelle: \"Activité du site\",\n        active: false,\n        icone: \"fal fa-trophy\",\n      },\n      {\n        name: \"fichier_contact\",\n        path: \"/fichier-contact\",\n        libelle: \"Fichier contact\",\n        icone: \" far fa-id-card\",\n        active: false,\n      },\n    ],\n    currentPage: \"editer_article\",\n    contacts: [],\n    dons: [],\n    adhesions: [],\n    refresh: false,\n  },\n  reducers: {\n    changePage: (state, action) => {\n      state.pages.forEach((page) => {\n        if (page.name === action.payload) {\n          page.active = true;\n          state.currentPage = page.name;\n        } else {\n          page.active = false;\n        }\n      });\n    },\n    changeDon: (state, action) => {\n      state.dons = action.payload;\n    },\n    changeAdhesion: (state, action) => {\n      state.adhesions = action.payload;\n    },\n    changeContact: (state, action) => {\n      state.contacts = action.payload;\n    },\n    refreshContent: (state, action) => {\n      state.refresh = !state.refresh;\n    },\n  },\n});\n\n//+ generated action creator functions :return an object with payload and type\nexport const {\n  changePage,\n  changeContact,\n  changeAdhesion,\n  changeDon,\n  refreshContent,\n} = adminSlice.actions;\n\nexport const selectAdmin = (state) => state.admin;\n\n// + the generated reducer function\nexport default adminSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}