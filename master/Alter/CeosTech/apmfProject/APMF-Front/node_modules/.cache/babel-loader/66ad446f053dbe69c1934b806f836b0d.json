{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/Header/MenuItem/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { setMenuId } from \"../../../../app/Redux-slices/siteSlice\";\nimport { resetSubMenuId } from \"../../../../app/Redux-slices/siteSlice\";\nimport { NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  }\n}));\nexport default function MenuItem({\n  menu\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: open ? \"itemColor\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: anchorRef,\n        \"aria-controls\": open ? 'menu-list-grow' : undefined,\n        \"aria-haspopup\": \"true\",\n        onClick: handleToggle,\n        className: open ? \"text__header_white\" : \"text__header\",\n        children: menu.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popper, {\n        open: open,\n        anchorEl: anchorRef.current,\n        role: undefined,\n        transition: true,\n        disablePortal: true,\n        children: ({\n          TransitionProps,\n          placement\n        }) => /*#__PURE__*/_jsxDEV(Grow, { ...TransitionProps,\n          style: {\n            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n              onClickAway: handleClose,\n              children: /*#__PURE__*/_jsxDEV(MenuList, {\n                autoFocusItem: open,\n                id: \"menu-list-grow\",\n                onKeyDown: handleListKeyDown,\n                children: menu.menu.map(subMenu => /*#__PURE__*/_jsxDEV(NavLink, {\n                  className: \"navlink--submenu\",\n                  to: `/${menu.link}/${subMenu.link}`,\n                  onClick: event => {\n                    // Will set the menu id we are on in the store\n                    dispatch(resetSubMenuId(subMenu.id)); // Will close the submenu list\n\n                    handleClose(event);\n                    window.scrollTo({\n                      top: 0,\n                      behavior: 'smooth'\n                    });\n                  },\n                  children: subMenu.name\n                }, subMenu.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MenuItem, \"55PBQGa5DboasDe6Mwr+lW8Ob6w=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = MenuItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItem\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/Header/MenuItem/index.js"],"names":["React","useDispatch","setMenuId","resetSubMenuId","NavLink","Button","ClickAwayListener","Grow","Paper","Popper","MenuList","makeStyles","useStyles","theme","root","display","paper","marginRight","spacing","MenuItem","menu","dispatch","classes","open","setOpen","useState","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","useEffect","focus","undefined","name","TransitionProps","placement","transformOrigin","map","subMenu","link","id","window","scrollTo","top","behavior"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch } from \"react-redux\";\n\nimport { setMenuId } from \"../../../../app/Redux-slices/siteSlice\";\nimport { resetSubMenuId } from \"../../../../app/Redux-slices/siteSlice\";\nimport { NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function MenuItem({menu}) {\n  const dispatch = useDispatch(); \n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div className={open ? \"itemColor\" : \"\"}>\n        <div\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          className={open ? \"text__header_white\" : \"text__header\"}\n        >\n          {menu.name}\n        </div>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n\n                    {menu.menu.map((subMenu) => (\n                      <NavLink         \n                        key={subMenu.id}\n                        className=\"navlink--submenu\"\n                        to={`/${menu.link}/${subMenu.link}`}\n                        onClick={(event) => {\n                          // Will set the menu id we are on in the store\n                          dispatch(resetSubMenuId(subMenu.id));\n                          // Will close the submenu list\n                          handleClose(event);\n                          window.scrollTo({\n                              top: 0,\n                              behavior: 'smooth',\n                          });\n                        }}\n                      >\n                        {subMenu.name}\n                      </NavLink>   \n                    ))}\n                    \n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}