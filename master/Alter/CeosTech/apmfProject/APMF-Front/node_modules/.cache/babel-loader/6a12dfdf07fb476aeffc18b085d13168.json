{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/Association/Don/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles.css';\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport Paiement from \"../Paiement\";\nimport useForm from \"../../../../hooks/useForm\"; //Form has already in Hooks\n// !!! Adhérer partage les mêmes styles que Don !!!\n// Step form :\n// Var currentStep will decide which step is displayed\n// Buttons to increment or decrement this variable\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Don = () => {\n  _s();\n\n  // When the form is finished, paiement page will be displayed\n  const [payment, setPayment] = useState(false); // initial values\n\n  const initial = {\n    currentStep: 1,\n    // default => so we land on the first step of the form\n    donation: '',\n    amount: '',\n    address: '',\n    firstName: '',\n    lastName: '',\n    postalCode: '',\n    city: '',\n    phone: '',\n    country: '',\n    mail: '',\n    newsletter: false // Default\n\n  }; // Validator\n  // We use switch cases depending on which step of the form we are at\n\n  const isValid = (fieldValues = state) => {\n    const validator = {};\n\n    switch (state.currentStep) {\n      case 1:\n        if (\"donation\" in fieldValues) validator.donation = state.donation ? null : \"Veuillez choisir un type de donation\";\n\n        if (fieldValues.donation === \"Autre\") {\n          validator.amount = /^[0-9]+$/.test(state.amount) ? null : \"Veuillez renseigner un chiffre\";\n          state.donation = amount !== undefined ? amount : '';\n        }\n\n        break;\n\n      case 2:\n        if (\"mail\" in fieldValues) validator.mail = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(state.mail) ? null : \"L'email n'est pas valide\";\n        if (\"firstName\" in fieldValues) validator.firstName = state.firstName ? null : \"Veuillez renseigner un prénom\";\n        if (\"lastName\" in fieldValues) validator.lastName = state.lastName ? null : \"Veuillez renseigner un nom\";\n        if (\"address\" in fieldValues) validator.address = state.address ? null : \"Veuillez renseigner une adresse\";\n        if (\"postalCode\" in fieldValues) validator.postalCode = /\\d+/.test(state.postalCode) ? null : \"Code postale n'est pas valide\";\n        if (\"city\" in fieldValues) validator.city = state.city ? null : \"Veuillez renseigner une ville\";\n        if (\"phone\" in fieldValues) validator.phone = /(?:(\\+(\\d{1,2})?)[ -]?)?\\(?(?<first>\\d{3})\\)?[-\\s]?(\\d{3})[- ]?(\\d{4})/.test(state.phone) ? null : \"Le numéro de téléphone n'est pas valide\";\n        if (\"country\" in fieldValues) validator.country = state.country ? null : \"Veuillez renseigner un pays\";\n        break;\n\n      default: // do nothing\n\n    }\n\n    setErrors({ ...validator\n    }); // return boolean if and only if we pass a parameter for the function\n\n    if (fieldValues === state) {\n      return Object.values(validator).every(el => !el);\n    }\n  }; // Hook useForm \n\n\n  const {\n    state,\n    setState,\n    handleInputChange,\n    handleCheckedChange,\n    errors,\n    setErrors,\n    previousButton,\n    nextButton\n  } = useForm(initial, isValid);\n  const {\n    currentStep,\n    donation,\n    amount,\n    address,\n    firstName,\n    lastName,\n    postalCode,\n    city,\n    phone,\n    country,\n    mail,\n    newsletter\n  } = state;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (isValid() && currentStep === 2) {\n      setPayment(true);\n    }\n  }; // Datas that will be sent in the request to register a donation\n  // We pass them now to the component Paiement that will send this request.\n\n\n  const dataToSend = {\n    donneur: {\n      nom: state.lastName,\n      prenom: state.firstName,\n      email: state.mail,\n      telephone: state.phone,\n      adresse: state.address,\n      ville: state.city,\n      code_postale: state.postalCode,\n      news_letter: state.newsletter\n    },\n    montant: parseInt(state.donation)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"don-page\",\n    children: [!payment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-one-don-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"steps-form-donation\",\n          children: [/*#__PURE__*/_jsxDEV(Step1, {\n            currentStep: currentStep,\n            handleChange: handleInputChange,\n            state: state,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Step2, {\n            currentStep: currentStep,\n            handleChange: handleInputChange,\n            handleCheckedChange: handleCheckedChange,\n            state: state,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-don-page\",\n          children: [previousButton(), nextButton(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"don-complementary-infos\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A SAVOIR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"En vertu des articles 200 et 238 bis du Code g\\xE9n\\xE9ral des imp\\xF4ts, l\\u2019APMF est habilit\\xE9e \\xE0 faire b\\xE9n\\xE9ficier ses donateurs d\\u2019une r\\xE9duction d\\u2019imp\\xF4ts de 66 % de la somme vers\\xE9e, dans la limite de 20 % du revenu imposable pour un particulier et de 60 % dans la limite de 5 \\u2030 du chiffre d\\u2019affaires pour une entreprise. L\\u2019APMF adresse un re\\xE7u de don \\xE0 chacun de ses donateurs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this), payment && /*#__PURE__*/_jsxDEV(Paiement, {\n      dataUser: state,\n      urlRegister: \"dons/create-don/\",\n      urlStripe: \"dons/create-client-secret/\",\n      dataRegister: dataToSend,\n      setState: setState,\n      setPayment: setPayment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Don, \"/XMhFWZgi9aR4GX2vFJBX0ZNIIs=\", false, function () {\n  return [useForm];\n});\n\n_c = Don;\nexport default Don;\n\nvar _c;\n\n$RefreshReg$(_c, \"Don\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/Association/Don/index.js"],"names":["React","useState","Step1","Step2","Paiement","useForm","Don","payment","setPayment","initial","currentStep","donation","amount","address","firstName","lastName","postalCode","city","phone","country","mail","newsletter","isValid","fieldValues","state","validator","test","undefined","setErrors","Object","values","every","el","setState","handleInputChange","handleCheckedChange","errors","previousButton","nextButton","handleSubmit","e","preventDefault","dataToSend","donneur","nom","prenom","email","telephone","adresse","ville","code_postale","news_letter","montant","parseInt"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport './styles.css';\n\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\nimport Paiement from \"../Paiement\";\n\nimport useForm from \"../../../../hooks/useForm\"; //Form has already in Hooks\n\n\n// !!! Adhérer partage les mêmes styles que Don !!!\n\n// Step form :\n// Var currentStep will decide which step is displayed\n// Buttons to increment or decrement this variable\n  \nconst Don = () => { \n    // When the form is finished, paiement page will be displayed\n    const [payment, setPayment] = useState(false);\n\n    // initial values\n    const initial = {\n        currentStep: 1, // default => so we land on the first step of the form\n        donation: '',\n        amount: '',\n        address: '',\n        firstName: '',\n        lastName: '',\n        postalCode: '',\n        city: '',\n        phone: '',\n        country: '',\n        mail: '',\n        newsletter: false, // Default\n    };  \n    \n    // Validator\n    // We use switch cases depending on which step of the form we are at\n    const isValid = (fieldValues = state) => {\n        const validator = {};\n        switch (state.currentStep) {\n            case 1 : \n                if (\"donation\" in fieldValues)\n                    validator.donation = state.donation ? null : \"Veuillez choisir un type de donation\";\n                if(fieldValues.donation === \"Autre\"){  \n                    validator.amount = /^[0-9]+$/.test(state.amount) ? null : \"Veuillez renseigner un chiffre\";\n                    state.donation = amount !== undefined ? amount : '';\n                }\n                break;\n\n            case 2 :  \n                if (\"mail\" in fieldValues)                    \n                    validator.mail = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(state.mail)\n                    ? null\n                    : \"L'email n'est pas valide\";                  \n                if (\"firstName\" in fieldValues)\n                    validator.firstName = state.firstName ? null : \"Veuillez renseigner un prénom\";  \n                if (\"lastName\" in fieldValues)\n                    validator.lastName = state.lastName ? null : \"Veuillez renseigner un nom\";   \n                if (\"address\" in fieldValues)\n                    validator.address = state.address ? null : \"Veuillez renseigner une adresse\"; \n                if (\"postalCode\" in fieldValues)\n                    validator.postalCode = /\\d+/.test(state.postalCode)\n                    ? null\n                    : \"Code postale n'est pas valide\";  \n                if (\"city\" in fieldValues)\n                    validator.city = state.city ? null : \"Veuillez renseigner une ville\";   \n                if (\"phone\" in fieldValues)\n                    validator.phone =\n                    /(?:(\\+(\\d{1,2})?)[ -]?)?\\(?(?<first>\\d{3})\\)?[-\\s]?(\\d{3})[- ]?(\\d{4})/.test(state.phone)\n                    ? null\n                    : \"Le numéro de téléphone n'est pas valide\";   \n                if (\"country\" in fieldValues)\n                    validator.country = state.country ? null : \"Veuillez renseigner un pays\";  \n                 break; \n            default:\n                // do nothing\n        }\n        \n        setErrors({ ...validator });\n    \n        // return boolean if and only if we pass a parameter for the function\n        if (fieldValues === state) {\n          return Object.values(validator).every((el) => !el);\n        }\n    };\n\n    // Hook useForm \n    const { state, setState, handleInputChange, handleCheckedChange, errors, setErrors, previousButton, nextButton } = useForm(initial, isValid);\n\n    const { currentStep, donation, amount, address, firstName, lastName, postalCode, city, phone, country, mail, newsletter } = state;\n\n       \n    const handleSubmit = async (e) => {\n        e.preventDefault();        \n        if (isValid() && currentStep === 2) {\n            setPayment(true)\n        }\n    };  \n    \n    // Datas that will be sent in the request to register a donation\n    // We pass them now to the component Paiement that will send this request.\n    const dataToSend = {\n        donneur: {\n            nom: state.lastName,\n            prenom: state.firstName,\n            email: state.mail,\n            telephone: state.phone,\n            adresse: state.address,\n            ville: state.city,\n            code_postale: state.postalCode,\n            news_letter: state.newsletter,\n        },\n        montant: parseInt(state.donation),\n    };\n\n    return (\n        <div id=\"don-page\">\n            {!payment && (\n                <div className=\"step-one-don-form\">\n                    <form onSubmit={handleSubmit}>    \n                        <div className=\"steps-form-donation\">\n                            <Step1 \n                                currentStep={currentStep} \n                                handleChange={handleInputChange}\n                                state={state}\n                                errors={errors}\n                            />\n                            <Step2 \n                                currentStep={currentStep} \n                                handleChange={handleInputChange}\n                                handleCheckedChange={handleCheckedChange}\n                                state={state}\n                                errors={errors}\n                            />     \n                        </div>\n                        \n                        \n                        <div className=\"buttons-don-page\">\n                            {previousButton()}\n                            {nextButton(2)}\n                        </div>\n                       \n                    </form>\n\n                    <div className=\"don-complementary-infos\">\n                            <h2>A SAVOIR</h2>\n                            <p>\n                                En vertu des articles 200 et 238 bis du Code général des impôts, l’APMF est habilitée à faire bénéficier ses donateurs d’une réduction d’impôts de 66 % de la somme versée, dans la limite de 20 % du revenu imposable pour un particulier et de 60 % dans la limite de 5 ‰ du chiffre d’affaires pour une entreprise. L’APMF adresse un reçu de don à chacun de ses donateurs.\n                            </p>\n                    </div>\n                </div>\n            )}\n\n            {payment && ( \n                <Paiement \n                    dataUser={state}\n                    urlRegister=\"dons/create-don/\"\n                    urlStripe=\"dons/create-client-secret/\"\n                    dataRegister={dataToSend}\n                    setState={setState}\n                    setPayment={setPayment}\n                />\n            )}\n            \n\n        </div>\n    )\n}\n\nexport default Don;"]},"metadata":{},"sourceType":"module"}