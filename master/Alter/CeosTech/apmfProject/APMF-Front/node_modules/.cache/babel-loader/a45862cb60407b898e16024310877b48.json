{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/admin/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./adminPage.css\";\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAdmin, changeDon, changeContact, changeAdhesion, changePage } from \"../../app/Redux-slices/adminSlice\";\nimport AdminNav from \"./adminNav/AdminNav\";\nimport EditerArticle from \"./editerArticle/EditerArticle\";\nimport GestionArticlesPublies from \"./gestionArticlesPublies/GestionArticlesPublies\";\nimport JournalFabry from \"./journalFabry/JournalFabry\";\nimport Adhesion from \"./adhesion/Adhesion\";\nimport Don from \"./don/Don\";\nimport Activite from \"./activite/Activite\";\nimport FichierContact from \"./fichierContact/FichierContact\";\nimport GestionJournauxFabry from \"./gestionJournauxFabry/GestionJournauxFabry\";\nimport axios from \"axios\";\nimport { URL } from \"../../middlewares/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchData = async (url, setData) => {\n  await axios.get(url).then(response => {\n    setData(response.data);\n  }).catch(error => {\n    console.log(`error`, error);\n  });\n};\n\nexport default function AdminPage() {\n  _s();\n\n  const admin = useSelector(selectAdmin);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [contacts, setContacts] = useState([]);\n  const [dons, setDons] = useState([]);\n  const [adhesions, setAdhesions] = useState([]);\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  useEffect(() => {\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    contacts && dispatch(changeContact(contacts));\n    dons && dispatch(changeDon(dons));\n    adhesions && dispatch(changeAdhesion(adhesions));\n  }, [adhesions, contacts, dons, dispatch]);\n  useEffect(() => {\n    let timeoutId;\n\n    function getLatestData() {\n      fetchData(`${URL}contacts/`, setContacts);\n      fetchData(`${URL}dons/`, setDons);\n      fetchData(`${URL}adhesions/`, setAdhesions); // wait for the response from fetchCommandes , before we recall it (delay of 1minute)\n\n      timeoutId = setTimeout(getLatestData, 1000 * 60);\n    }\n\n    getLatestData();\n    return () => {\n      clearTimeout(timeoutId);\n      setContacts([]);\n      setDons([]);\n      setAdhesions([]);\n    };\n  }, []);\n  useEffect(() => {\n    dispatch(changePage(admin.currentPage));\n    history.push(path + \"/editer-article\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adminPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminPage__container\",\n      children: [/*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          padding: \"1rem\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: path + \"/editer-article\",\n            children: /*#__PURE__*/_jsxDEV(EditerArticle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: path + \"/gestion-articles-publies\",\n            children: /*#__PURE__*/_jsxDEV(GestionArticlesPublies, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: path + \"/journal-fabry\",\n            children: /*#__PURE__*/_jsxDEV(JournalFabry, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: path + \"/gestion-journal-fabry\",\n            children: /*#__PURE__*/_jsxDEV(GestionJournauxFabry, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: path + \"/adhesion\",\n            children: /*#__PURE__*/_jsxDEV(Adhesion, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: path + \"/don\",\n            children: /*#__PURE__*/_jsxDEV(Don, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: path + \"/activite\",\n            children: /*#__PURE__*/_jsxDEV(Activite, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: path + \"/fichier-contact\",\n            children: /*#__PURE__*/_jsxDEV(FichierContact, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminPage, \"shdJgU42pCkgGDYDVaAD1zHyXRQ=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useRouteMatch];\n});\n\n_c = AdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/admin/index.js"],"names":["React","useEffect","useState","Route","Switch","useHistory","useRouteMatch","useDispatch","useSelector","selectAdmin","changeDon","changeContact","changeAdhesion","changePage","AdminNav","EditerArticle","GestionArticlesPublies","JournalFabry","Adhesion","Don","Activite","FichierContact","GestionJournauxFabry","axios","URL","fetchData","url","setData","get","then","response","data","catch","error","console","log","AdminPage","admin","dispatch","history","contacts","setContacts","dons","setDons","adhesions","setAdhesions","path","timeoutId","getLatestData","setTimeout","clearTimeout","currentPage","push","flex","padding","width"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from \"react\";\nimport \"./adminPage.css\";\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { \n  selectAdmin,\n  changeDon,\n  changeContact,\n  changeAdhesion,\n  changePage } from \"../../app/Redux-slices/adminSlice\";\nimport AdminNav from \"./adminNav/AdminNav\";\nimport EditerArticle from \"./editerArticle/EditerArticle\";\nimport GestionArticlesPublies from \"./gestionArticlesPublies/GestionArticlesPublies\";\nimport JournalFabry from \"./journalFabry/JournalFabry\";\nimport Adhesion from \"./adhesion/Adhesion\";\nimport Don from \"./don/Don\";\nimport Activite from \"./activite/Activite\";\nimport FichierContact from \"./fichierContact/FichierContact\";\nimport GestionJournauxFabry from \"./gestionJournauxFabry/GestionJournauxFabry\";\nimport axios from \"axios\";\nimport { URL } from \"../../middlewares/request\";\n\nconst fetchData = async (url,setData) => {\n  await axios\n    .get(url)\n    .then((response) => {\n      setData(response.data);\n    })\n    .catch((error) => {\n      console.log(`error`, error);\n    });\n};\n\nexport default function AdminPage() {\n  const admin = useSelector(selectAdmin);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [contacts, setContacts] = useState([]);\n  const [dons,setDons]=useState([]);\n  const [adhesions, setAdhesions] = useState([])\n  const { path, url } = useRouteMatch();\n\n  useEffect(() => {\n    // a chaque fois que commande change, on met a jour la longueur de nouvelle commande\n    contacts && dispatch(changeContact(contacts));\n    dons && dispatch(changeDon(dons));\n    adhesions && dispatch(changeAdhesion(adhesions));\n  \n  }, [adhesions,contacts,dons, dispatch]);\n\n  useEffect(() => {\n    let timeoutId;\n    function getLatestData() {\n      fetchData(`${URL}contacts/`,setContacts);\n      fetchData(`${URL}dons/`,setDons);\n      fetchData(`${URL}adhesions/`,setAdhesions);\n      // wait for the response from fetchCommandes , before we recall it (delay of 1minute)\n      timeoutId = setTimeout(getLatestData, 1000 * 60);\n    }\n    getLatestData();\n\n    return () => {\n      clearTimeout(timeoutId);\n      setContacts([]);\n      setDons([]);\n      setAdhesions([]);\n    };\n  }, []);\n\n\n\n\n\n  useEffect(() => {\n    dispatch(changePage(admin.currentPage));\n    history.push(path + \"/editer-article\");\n  }, []);\n\n  return (\n    <div className=\"adminPage\">\n      <div className=\"adminPage__container\">\n        <AdminNav />\n        <div\n          style={{\n            flex: 1,\n            padding: \"1rem\",\n            width: \"100%\",\n          }}\n        >\n          <Switch>\n            <Route exact path={path + \"/editer-article\"}>\n              <EditerArticle />\n            </Route>\n            <Route exact path={path + \"/gestion-articles-publies\"}>\n              <GestionArticlesPublies />\n            </Route>\n            <Route exact path={path + \"/journal-fabry\"}>\n              <JournalFabry />\n            </Route>\n            <Route exact path={path + \"/gestion-journal-fabry\"}>\n              <GestionJournauxFabry />\n            </Route>\n            <Route exact path={path + \"/adhesion\"}>\n              <Adhesion />\n            </Route>\n            <Route exact path={path + \"/don\"}>\n              <Don />\n            </Route>\n            <Route exact path={path + \"/activite\"}>\n              <Activite />\n            </Route>\n            <Route exact path={path + \"/fichier-contact\"}>\n              <FichierContact />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}