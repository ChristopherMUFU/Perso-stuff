{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/SubMenu/index.js\",\n    _s = $RefreshSig$();\n\nimport './styles.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSubMenuId, getSiteState } from \"../../../app/Redux-slices/siteSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubMenu = ({\n  menu\n}) => {\n  _s();\n\n  // By default, the id of the active menu is set to 1 (first item of the menu)\n  const siteState = useSelector(getSiteState);\n  const subMenuId = siteState.subMenuId;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submenu__container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"submenu-list\",\n      children: menu.menu.map(menuItem => /*#__PURE__*/_jsxDEV(\"li\", {\n        // When the item selected changes (onClick action), so does the className of the menu items, so as to display properly the active entry of the menu \n        className: menuItem.id === subMenuId ? \"subMenu-active\" : \"\",\n        onClick: () => {\n          dispatch(setSubMenuId(menuItem.id));\n        },\n        children: menuItem.name\n      }, menuItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubMenu, \"BJQBVUcv1J7GwKvXuSDft11qVFk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SubMenu;\nSubMenu.propTypes = {\n  menu: PropTypes.object.isRequired\n};\nexport default SubMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubMenu\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/SubMenu/index.js"],"names":["PropTypes","useDispatch","useSelector","setSubMenuId","getSiteState","SubMenu","menu","siteState","subMenuId","dispatch","map","menuItem","id","name","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,qCAA3C;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC1B;AACA,QAAMC,SAAS,GAAGL,WAAW,CAACE,YAAD,CAA7B;AACA,QAAMI,SAAS,GAAGD,SAAS,CAACC,SAA5B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI;AAAI,MAAA,EAAE,EAAC,cAAP;AAAA,gBACKK,IAAI,CAACA,IAAL,CAAUI,GAAV,CAAeC,QAAD,iBACX;AACI;AACA,QAAA,SAAS,EAAEA,QAAQ,CAACC,EAAT,KAAgBJ,SAAhB,GAA4B,gBAA5B,GAA+C,EAF9D;AAII,QAAA,OAAO,EAAE,MAAM;AACXC,UAAAA,QAAQ,CAACN,YAAY,CAACQ,QAAQ,CAACC,EAAV,CAAb,CAAR;AACH,SANL;AAAA,kBAQKD,QAAQ,CAACE;AARd,SAGSF,QAAQ,CAACC,EAHlB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAxBD;;GAAMP,O;UAEgBH,W,EAEDD,W;;;KAJfI,O;AA0BNA,OAAO,CAACS,SAAR,GAAoB;AAChBR,EAAAA,IAAI,EAAEN,SAAS,CAACe,MAAV,CAAiBC;AADP,CAApB;AAIA,eAAeX,OAAf","sourcesContent":["import './styles.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setSubMenuId, getSiteState } from \"../../../app/Redux-slices/siteSlice\";\n\nconst SubMenu = ({ menu }) => {\n    // By default, the id of the active menu is set to 1 (first item of the menu)\n    const siteState = useSelector(getSiteState);\n    const subMenuId = siteState.subMenuId;\n    const dispatch = useDispatch(); \n\n    return (\n        <div className=\"submenu__container\">\n            <ul id=\"submenu-list\">\n                {menu.menu.map((menuItem) => \n                    <li                         \n                        // When the item selected changes (onClick action), so does the className of the menu items, so as to display properly the active entry of the menu \n                        className={menuItem.id === subMenuId ? \"subMenu-active\" : \"\"} \n                        key={menuItem.id}\n                        onClick={() => {\n                            dispatch(setSubMenuId(menuItem.id));\n                        }}\n                    >\n                        {menuItem.name}\n                    </li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nSubMenu.propTypes = {\n    menu: PropTypes.object.isRequired,\n};\n\nexport default SubMenu;"]},"metadata":{},"sourceType":"module"}