{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/Association/Adherer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Step1 from \"./Step1\";\nimport Step2 from \"../Don/Step2\";\nimport Step3 from \"./Step3\";\nimport Paiement from \"../Paiement\";\nimport useForm from \"../../../../hooks/useForm\"; //Form has already in Hooks\n// !!! Adhérer partage les mêmes styles que Don !!!\n// Step form :\n// Var currentStep will decide which step is displayed\n// Buttons to increment or decrement this variable\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Adherer = () => {\n  _s();\n\n  //When the form is finished, paiement page will be displayed\n  const [payment, setPayment] = useState(false); // initial values\n\n  const initial = {\n    currentStep: 1,\n    // default => so we land on the first step of the form\n    donation: 0,\n    amount: \"\",\n    address: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    postalCode: \"\",\n    city: \"\",\n    phone: \"\",\n    country: \"\",\n    mail: \"\",\n    newsletter: false,\n    // Default\n    position: \"\",\n    complementaryInfos: \"\",\n    complementaryInfosCouple: \"\",\n    complementaryInfosFamily: \"\",\n    complementaryInfosFriend: \"\"\n  }; // Validator\n  // We use switch cases depending on which step of the form we are at\n\n  const isValid = (fieldValues = state) => {\n    const validator = {};\n\n    switch (state.currentStep) {\n      case 1:\n        if (\"donation\" in fieldValues) validator.donation = state.donation ? null : \"Veuillez choisir un type de donation\";\n\n        if (fieldValues.donation === \"Autre\") {\n          validator.amount = /^[0-9]+$/.test(state.amount) ? null : \"Veuillez renseigner un chiffre\";\n          state.donation = amount !== undefined ? amount : \"\"; //   console.log(validator);\n        }\n\n        break;\n\n      case 2:\n        if (\"mail\" in fieldValues) validator.mail = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(state.mail) ? null : \"L'email n'est pas valide\";\n        if (\"firstName\" in fieldValues) validator.firstName = state.firstName ? null : \"Veuillez renseigner un prénom\";\n        if (\"lastName\" in fieldValues) validator.lastName = state.lastName ? null : \"Veuillez renseigner un nom\";\n        if (\"address\" in fieldValues) validator.address = state.address ? null : \"Veuillez renseigner une adresse\";\n        if (\"postalCode\" in fieldValues) validator.postalCode = /\\d+/.test(state.postalCode) ? null : \"Code postale n'est pas valide\";\n        if (\"city\" in fieldValues) validator.city = state.city ? null : \"Veuillez renseigner une ville\";\n        if (\"phone\" in fieldValues) validator.phone = /(?:(\\+(\\d{1,2})?)[ -]?)?\\(?(?<first>\\d{3})\\)?[-\\s]?(\\d{3})[- ]?(\\d{4})/.test(state.phone) ? null : \"Le numéro de téléphone n'est pas valide\";\n        if (\"country\" in fieldValues) validator.country = state.country ? null : \"Veuillez renseigner un pays\";\n        break;\n\n      case 3:\n        if (\"position\" in fieldValues) validator.position = state.position ? null : \"Veuillez choisir votre qualité d'adhérent\"; // console.log(state);\n\n        if (fieldValues.position === \"conjoint\") {\n          validator.complementaryInfosCouple = state.complementaryInfosCouple ? null : \"Veuillez renseigner un nom et un prénom\";\n          state.position = validator.complementaryInfosCouple === null ? `conjoint de ${state.complementaryInfosCouple}` : \"\"; // console.log(validator)\n          // console.log(state)\n        }\n\n        if (fieldValues.position === \"famille\") {\n          validator.complementaryInfosFamily = state.complementaryInfosFamily ? null : \"Veuillez renseigner un nom et un prénom\";\n          state.position = validator.complementaryInfosFamily === null ? `membre de la famille de ${state.complementaryInfosFamily}` : \"\";\n        }\n\n        if (fieldValues.position === \"ami\") {\n          validator.complementaryInfosFriend = state.complementaryInfosFriend ? null : \"Veuillez renseigner un nom et un prénom\";\n          state.position = validator.complementaryInfosFriend === null ? `ami de ${state.complementaryInfosFriend}` : \"\";\n        }\n\n        if (fieldValues.position === \"autre\") {\n          validator.complementaryInfos = state.complementaryInfos ? null : \"Veuillez remplir ce champ\";\n          state.position = validator.complementaryInfos === null ? state.complementaryInfos : \"\";\n        }\n\n        break;\n\n      default: // do nothing\n\n    }\n\n    setErrors({ ...validator\n    }); // return boolean if and only if we pass a parameter for the function\n\n    if (fieldValues === state) {\n      return Object.values(validator).every(el => !el);\n    }\n  }; // Hook useForm\n\n\n  const {\n    state,\n    setState,\n    handleInputChange,\n    handleCheckedChange,\n    errors,\n    setErrors,\n    previousButton,\n    nextButton\n  } = useForm(initial, isValid);\n  const {\n    currentStep,\n    donation,\n    amount,\n    address,\n    firstName,\n    lastName,\n    postalCode,\n    city,\n    phone,\n    country,\n    mail,\n    newsletter,\n    position,\n    complementaryInfos,\n    complementaryInfosCouple,\n    complementaryInfosFamily,\n    complementaryInfosFriend\n  } = state;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (isValid() && currentStep === 3) {\n      // Will stop displaying the form, to display the paiement page\n      setPayment(true);\n    }\n  }; // Datas that will be sent in the request to register a donation\n  // We pass them now to the component Paiement that will send this request.\n\n\n  const dataToSend = {\n    adherent: {\n      nom: state.lastName,\n      prenom: state.firstName,\n      email: state.mail,\n      telephone: state.phone,\n      adresse: state.address,\n      ville: state.city,\n      code_postale: state.postalCode,\n      news_letter: state.newsletter,\n      position: state.position\n    },\n    montant: parseInt(state.donation)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"don-page\",\n    children: [!payment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-one-don-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"steps-form-donation\",\n          children: [/*#__PURE__*/_jsxDEV(Step1, {\n            currentStep: currentStep,\n            handleChange: handleInputChange,\n            state: state,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Step2, {\n            currentStep: currentStep,\n            handleChange: handleInputChange,\n            handleCheckedChange: handleCheckedChange,\n            state: state,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Step3, {\n            currentStep: currentStep,\n            handleChange: handleInputChange,\n            handleCheckedChange: handleCheckedChange,\n            state: state,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-don-page\",\n          children: [previousButton(), nextButton(3)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this), payment && /*#__PURE__*/_jsxDEV(Paiement, {\n      dataUser: state,\n      urlRegister: \"adhesions/create-adhesion/\",\n      urlStripe: \"adhesions/create-client-secret/\",\n      dataRegister: dataToSend,\n      setState: setState,\n      setPayment: setPayment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Adherer, \"kb1/EXwC+j/suVJRqpt0naEEqio=\", false, function () {\n  return [useForm];\n});\n\n_c = Adherer;\nexport default Adherer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Adherer\");","map":{"version":3,"sources":["/home/christopher/Documents/Alter/apmfProject/APMF-Front/src/components/app/Association/Adherer/index.js"],"names":["React","useState","Step1","Step2","Step3","Paiement","useForm","Adherer","payment","setPayment","initial","currentStep","donation","amount","address","firstName","lastName","postalCode","city","phone","country","mail","newsletter","position","complementaryInfos","complementaryInfosCouple","complementaryInfosFamily","complementaryInfosFriend","isValid","fieldValues","state","validator","test","undefined","setErrors","Object","values","every","el","setState","handleInputChange","handleCheckedChange","errors","previousButton","nextButton","handleSubmit","e","preventDefault","dataToSend","adherent","nom","prenom","email","telephone","adresse","ville","code_postale","news_letter","montant","parseInt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./styles.css\";\n\nimport Step1 from \"./Step1\";\nimport Step2 from \"../Don/Step2\";\nimport Step3 from \"./Step3\";\nimport Paiement from \"../Paiement\";\n\nimport useForm from \"../../../../hooks/useForm\"; //Form has already in Hooks\n\n// !!! Adhérer partage les mêmes styles que Don !!!\n\n// Step form :\n// Var currentStep will decide which step is displayed\n// Buttons to increment or decrement this variable\n\nconst Adherer = () => {\n  //When the form is finished, paiement page will be displayed\n  const [payment, setPayment] = useState(false);\n\n  // initial values\n  const initial = {\n    currentStep: 1, // default => so we land on the first step of the form\n    donation: 0,\n    amount: \"\",\n    address: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    postalCode: \"\",\n    city: \"\",\n    phone: \"\",\n    country: \"\",\n    mail: \"\",\n    newsletter: false, // Default\n    position: \"\",\n    complementaryInfos: \"\",\n    complementaryInfosCouple: \"\",\n    complementaryInfosFamily: \"\",\n    complementaryInfosFriend: \"\",\n  };\n\n  // Validator\n  // We use switch cases depending on which step of the form we are at\n  const isValid = (fieldValues = state) => {\n    const validator = {};\n    switch (state.currentStep) {\n      case 1:\n        if (\"donation\" in fieldValues)\n          validator.donation = state.donation\n            ? null\n            : \"Veuillez choisir un type de donation\";\n        if (fieldValues.donation === \"Autre\") {\n          validator.amount = /^[0-9]+$/.test(state.amount)\n            ? null\n            : \"Veuillez renseigner un chiffre\";\n          state.donation = amount !== undefined ? amount : \"\";\n          //   console.log(validator);\n        }\n        break;\n\n      case 2:\n        if (\"mail\" in fieldValues)\n          validator.mail = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(state.mail)\n            ? null\n            : \"L'email n'est pas valide\";\n        if (\"firstName\" in fieldValues)\n          validator.firstName = state.firstName\n            ? null\n            : \"Veuillez renseigner un prénom\";\n        if (\"lastName\" in fieldValues)\n          validator.lastName = state.lastName\n            ? null\n            : \"Veuillez renseigner un nom\";\n        if (\"address\" in fieldValues)\n          validator.address = state.address\n            ? null\n            : \"Veuillez renseigner une adresse\";\n        if (\"postalCode\" in fieldValues)\n          validator.postalCode = /\\d+/.test(state.postalCode)\n            ? null\n            : \"Code postale n'est pas valide\";\n        if (\"city\" in fieldValues)\n          validator.city = state.city ? null : \"Veuillez renseigner une ville\";\n        if (\"phone\" in fieldValues)\n          validator.phone =\n            /(?:(\\+(\\d{1,2})?)[ -]?)?\\(?(?<first>\\d{3})\\)?[-\\s]?(\\d{3})[- ]?(\\d{4})/.test(\n              state.phone\n            )\n              ? null\n              : \"Le numéro de téléphone n'est pas valide\";\n        if (\"country\" in fieldValues)\n          validator.country = state.country\n            ? null\n            : \"Veuillez renseigner un pays\";\n        break;\n\n      case 3:\n        if (\"position\" in fieldValues)\n          validator.position = state.position\n            ? null\n            : \"Veuillez choisir votre qualité d'adhérent\";\n        // console.log(state);\n        if (fieldValues.position === \"conjoint\") {\n          validator.complementaryInfosCouple = state.complementaryInfosCouple\n            ? null\n            : \"Veuillez renseigner un nom et un prénom\";\n          state.position =\n            validator.complementaryInfosCouple === null\n              ? `conjoint de ${state.complementaryInfosCouple}`\n              : \"\";\n          // console.log(validator)\n          // console.log(state)\n        }\n        if (fieldValues.position === \"famille\") {\n          validator.complementaryInfosFamily = state.complementaryInfosFamily\n            ? null\n            : \"Veuillez renseigner un nom et un prénom\";\n          state.position =\n            validator.complementaryInfosFamily === null\n              ? `membre de la famille de ${state.complementaryInfosFamily}`\n              : \"\";\n        }\n        if (fieldValues.position === \"ami\") {\n          validator.complementaryInfosFriend = state.complementaryInfosFriend\n            ? null\n            : \"Veuillez renseigner un nom et un prénom\";\n          state.position =\n            validator.complementaryInfosFriend === null\n              ? `ami de ${state.complementaryInfosFriend}`\n              : \"\";\n        }\n        if (fieldValues.position === \"autre\") {\n          validator.complementaryInfos = state.complementaryInfos\n            ? null\n            : \"Veuillez remplir ce champ\";\n          state.position =\n            validator.complementaryInfos === null\n              ? state.complementaryInfos\n              : \"\";\n        }\n        break;\n      default:\n      // do nothing\n    }\n\n    setErrors({ ...validator });\n\n    // return boolean if and only if we pass a parameter for the function\n    if (fieldValues === state) {\n      return Object.values(validator).every((el) => !el);\n    }\n  };\n\n  // Hook useForm\n  const {\n    state,\n    setState,\n    handleInputChange,\n    handleCheckedChange,\n    errors,\n    setErrors,\n    previousButton,\n    nextButton,\n  } = useForm(initial, isValid);\n\n  const {\n    currentStep,\n    donation,\n    amount,\n    address,\n    firstName,\n    lastName,\n    postalCode,\n    city,\n    phone,\n    country,\n    mail,\n    newsletter,\n    position,\n    complementaryInfos,\n    complementaryInfosCouple,\n    complementaryInfosFamily,\n    complementaryInfosFriend,\n  } = state;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isValid() && currentStep === 3) {\n      // Will stop displaying the form, to display the paiement page\n      setPayment(true);\n    }\n  };\n\n  // Datas that will be sent in the request to register a donation\n  // We pass them now to the component Paiement that will send this request.\n  const dataToSend = {\n    adherent: {\n      nom: state.lastName,\n      prenom: state.firstName,\n      email: state.mail,\n      telephone: state.phone,\n      adresse: state.address,\n      ville: state.city,\n      code_postale: state.postalCode,\n      news_letter: state.newsletter,\n      position: state.position,\n    },\n    montant: parseInt(state.donation),\n  };\n\n  return (\n    <div id=\"don-page\">\n      {!payment && (\n        <div className=\"step-one-don-form\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"steps-form-donation\">\n              <Step1\n                currentStep={currentStep}\n                handleChange={handleInputChange}\n                state={state}\n                errors={errors}\n              />\n              <Step2\n                currentStep={currentStep}\n                handleChange={handleInputChange}\n                handleCheckedChange={handleCheckedChange}\n                state={state}\n                errors={errors}\n              />\n              <Step3\n                currentStep={currentStep}\n                handleChange={handleInputChange}\n                handleCheckedChange={handleCheckedChange}\n                state={state}\n                errors={errors}\n              />\n            </div>\n\n            <div className=\"buttons-don-page\">\n              {previousButton()}\n              {nextButton(3)}\n            </div>\n          </form>\n        </div>\n      )}\n\n      {payment && (\n        <Paiement\n          dataUser={state}\n          urlRegister=\"adhesions/create-adhesion/\"\n          urlStripe=\"adhesions/create-client-secret/\"\n          dataRegister={dataToSend}\n          setState={setState}\n          setPayment={setPayment}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Adherer;\n"]},"metadata":{},"sourceType":"module"}